{"version":3,"file":"tooltip.es5.js","sources":["../../../src/lib/tooltip/tooltip-module.ts","../../../src/lib/tooltip/tooltip.ts","../../../src/lib/tooltip/tooltip-animations.ts"],"sourcesContent":["/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport {OverlayModule} from '@angular/cdk/overlay';\r\nimport {A11yModule} from '@angular/cdk/a11y';\r\nimport {CommonModule} from '@angular/common';\r\nimport {NgModule} from '@angular/core';\r\nimport {GestureConfig, MatCommonModule} from '@angular/material/core';\r\nimport {HAMMER_GESTURE_CONFIG} from '@angular/platform-browser';\r\nimport {\r\n  MatTooltip,\r\n  TooltipComponent,\r\n  MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER,\r\n} from './tooltip';\r\n\r\n@NgModule({\r\n  imports: [\r\n    A11yModule,\r\n    CommonModule,\r\n    OverlayModule,\r\n    MatCommonModule,\r\n  ],\r\n  exports: [MatTooltip, TooltipComponent, MatCommonModule],\r\n  declarations: [MatTooltip, TooltipComponent],\r\n  entryComponents: [TooltipComponent],\r\n  providers: [\r\n    MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER,\r\n    {provide: HAMMER_GESTURE_CONFIG, useClass: GestureConfig},\r\n  ]\r\n})\r\nexport class MatTooltipModule {}\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\nimport {AnimationEvent} from '@angular/animations';\r\nimport {AriaDescriber, FocusMonitor} from '@angular/cdk/a11y';\r\nimport {Directionality} from '@angular/cdk/bidi';\r\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\r\nimport {ESCAPE} from '@angular/cdk/keycodes';\r\nimport {BreakpointObserver, Breakpoints, BreakpointState} from '@angular/cdk/layout';\r\nimport {HammerLoader, HAMMER_LOADER} from '@angular/platform-browser';\r\nimport {\r\n  FlexibleConnectedPositionStrategy,\r\n  HorizontalConnectionPos,\r\n  OriginConnectionPosition,\r\n  Overlay,\r\n  OverlayConnectionPosition,\r\n  OverlayRef,\r\n  VerticalConnectionPos,\r\n  ScrollStrategy,\r\n} from '@angular/cdk/overlay';\r\nimport {ScrollDispatcher} from '@angular/cdk/scrolling';\r\nimport {Platform} from '@angular/cdk/platform';\r\nimport {ComponentPortal} from '@angular/cdk/portal';\r\nimport {take, takeUntil} from 'rxjs/operators';\r\nimport {\r\n  ChangeDetectionStrategy,\r\n  ChangeDetectorRef,\r\n  Component,\r\n  Directive,\r\n  ElementRef,\r\n  Inject,\r\n  InjectionToken,\r\n  Input,\r\n  NgZone,\r\n  OnDestroy,\r\n  Optional,\r\n  ViewContainerRef,\r\n  ViewEncapsulation,\r\n} from '@angular/core';\r\nimport {Subject, Observable} from 'rxjs';\r\nimport {matTooltipAnimations} from './tooltip-animations';\r\n\r\n\r\nexport type TooltipPosition = 'left' | 'right' | 'above' | 'below' | 'before' | 'after';\r\n\r\n/** Time in ms to throttle repositioning after scroll events. */\r\nexport const SCROLL_THROTTLE_MS = 20;\r\n\r\n/** CSS class that will be attached to the overlay panel. */\r\nexport const TOOLTIP_PANEL_CLASS = 'mat-tooltip-panel';\r\n\r\n/**\r\n * Creates an error to be thrown if the user supplied an invalid tooltip position.\r\n * @docs-private\r\n */\r\nexport function getMatTooltipInvalidPositionError(position: string) {\r\n  return Error(`Tooltip position \"${position}\" is invalid.`);\r\n}\r\n\r\n/** Injection token that determines the scroll handling while a tooltip is visible. */\r\nexport const MAT_TOOLTIP_SCROLL_STRATEGY =\r\n    new InjectionToken<() => ScrollStrategy>('mat-tooltip-scroll-strategy');\r\n\r\n/** @docs-private */\r\nexport function MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY(overlay: Overlay): () => ScrollStrategy {\r\n  return () => overlay.scrollStrategies.reposition({scrollThrottle: SCROLL_THROTTLE_MS});\r\n}\r\n\r\n/** @docs-private */\r\nexport const MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER = {\r\n  provide: MAT_TOOLTIP_SCROLL_STRATEGY,\r\n  deps: [Overlay],\r\n  useFactory: MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY,\r\n};\r\n\r\n/** Default `matTooltip` options that can be overridden. */\r\nexport interface MatTooltipDefaultOptions {\r\n  showDelay: number;\r\n  hideDelay: number;\r\n  touchendHideDelay: number;\r\n  position?: TooltipPosition;\r\n}\r\n\r\n/** Injection token to be used to override the default options for `matTooltip`. */\r\nexport const MAT_TOOLTIP_DEFAULT_OPTIONS =\r\n    new InjectionToken<MatTooltipDefaultOptions>('mat-tooltip-default-options', {\r\n      providedIn: 'root',\r\n      factory: MAT_TOOLTIP_DEFAULT_OPTIONS_FACTORY\r\n    });\r\n\r\n/** @docs-private */\r\nexport function MAT_TOOLTIP_DEFAULT_OPTIONS_FACTORY(): MatTooltipDefaultOptions {\r\n  return {\r\n    showDelay: 0,\r\n    hideDelay: 0,\r\n    touchendHideDelay: 1500,\r\n  };\r\n}\r\n\r\n/**\r\n * Directive that attaches a material design tooltip to the host element. Animates the showing and\r\n * hiding of a tooltip provided position (defaults to below the element).\r\n *\r\n * https://material.io/design/components/tooltips.html\r\n */\r\n@Directive({\r\n  selector: '[matTooltip]',\r\n  exportAs: 'matTooltip',\r\n  host: {\r\n    '(longpress)': 'show()',\r\n    '(keydown)': '_handleKeydown($event)',\r\n    '(touchend)': '_handleTouchend()',\r\n  },\r\n})\r\nexport class MatTooltip implements OnDestroy {\r\n  _overlayRef: OverlayRef | null;\r\n  _tooltipInstance: TooltipComponent | null;\r\n\r\n  private _portal: ComponentPortal<TooltipComponent>;\r\n  private _position: TooltipPosition = 'below';\r\n  private _disabled: boolean = false;\r\n  private _tooltipClass: string|string[]|Set<string>|{[key: string]: any};\r\n  private _scrollStrategy: () => ScrollStrategy;\r\n\r\n  /** Allows the user to define the position of the tooltip relative to the parent element */\r\n  @Input('matTooltipPosition')\r\n  get position(): TooltipPosition { return this._position; }\r\n  set position(value: TooltipPosition) {\r\n    if (value !== this._position) {\r\n      this._position = value;\r\n\r\n      if (this._overlayRef) {\r\n        this._updatePosition();\r\n\r\n        if (this._tooltipInstance) {\r\n          this._tooltipInstance!.show(0);\r\n        }\r\n\r\n        this._overlayRef.updatePosition();\r\n      }\r\n    }\r\n  }\r\n\r\n  /** Disables the display of the tooltip. */\r\n  @Input('matTooltipDisabled')\r\n  get disabled(): boolean { return this._disabled; }\r\n  set disabled(value) {\r\n    this._disabled = coerceBooleanProperty(value);\r\n\r\n    // If tooltip is disabled, hide immediately.\r\n    if (this._disabled) {\r\n      this.hide(0);\r\n    }\r\n  }\r\n\r\n  /** The default delay in ms before showing the tooltip after show is called */\r\n  @Input('matTooltipShowDelay') showDelay = this._defaultOptions.showDelay;\r\n\r\n  /** The default delay in ms before hiding the tooltip after hide is called */\r\n  @Input('matTooltipHideDelay') hideDelay = this._defaultOptions.hideDelay;\r\n\r\n  private _message = '';\r\n\r\n  /** The message to be displayed in the tooltip */\r\n  @Input('matTooltip')\r\n  get message() { return this._message; }\r\n  set message(value: string) {\r\n    this._ariaDescriber.removeDescription(this._elementRef.nativeElement, this._message);\r\n\r\n    // If the message is not a string (e.g. number), convert it to a string and trim it.\r\n    this._message = value != null ? `${value}`.trim() : '';\r\n\r\n    if (!this._message && this._isTooltipVisible()) {\r\n      this.hide(0);\r\n    } else {\r\n      this._updateTooltipMessage();\r\n      this._ariaDescriber.describe(this._elementRef.nativeElement, this.message);\r\n    }\r\n  }\r\n\r\n  /** Classes to be passed to the tooltip. Supports the same syntax as `ngClass`. */\r\n  @Input('matTooltipClass')\r\n  get tooltipClass() { return this._tooltipClass; }\r\n  set tooltipClass(value: string|string[]|Set<string>|{[key: string]: any}) {\r\n    this._tooltipClass = value;\r\n    if (this._tooltipInstance) {\r\n      this._setTooltipClass(this._tooltipClass);\r\n    }\r\n  }\r\n\r\n  private _manualListeners = new Map<string, EventListenerOrEventListenerObject>();\r\n\r\n  /** Emits when the component is destroyed. */\r\n  private readonly _destroyed = new Subject<void>();\r\n\r\n  constructor(\r\n    private _overlay: Overlay,\r\n    private _elementRef: ElementRef<HTMLElement>,\r\n    private _scrollDispatcher: ScrollDispatcher,\r\n    private _viewContainerRef: ViewContainerRef,\r\n    private _ngZone: NgZone,\r\n    platform: Platform,\r\n    private _ariaDescriber: AriaDescriber,\r\n    private _focusMonitor: FocusMonitor,\r\n    @Inject(MAT_TOOLTIP_SCROLL_STRATEGY) scrollStrategy: any,\r\n    @Optional() private _dir: Directionality,\r\n    @Optional() @Inject(MAT_TOOLTIP_DEFAULT_OPTIONS)\r\n      private _defaultOptions: MatTooltipDefaultOptions,\r\n    @Optional() @Inject(HAMMER_LOADER) hammerLoader?: HammerLoader) {\r\n\r\n    this._scrollStrategy = scrollStrategy;\r\n    const element: HTMLElement = _elementRef.nativeElement;\r\n    const elementStyle = element.style as CSSStyleDeclaration & {webkitUserDrag: string};\r\n    const hasGestures = typeof window === 'undefined' || (window as any).Hammer || hammerLoader;\r\n\r\n    // The mouse events shouldn't be bound on mobile devices, because they can prevent the\r\n    // first tap from firing its click event or can cause the tooltip to open for clicks.\r\n    if (!platform.IOS && !platform.ANDROID) {\r\n      this._manualListeners\r\n        .set('mouseenter', () => this.show())\r\n        .set('mouseleave', () => this.hide());\r\n    } else if (!hasGestures) {\r\n      // If Hammerjs isn't loaded, fall back to showing on `touchstart`, otherwise\r\n      // there's no way for the user to trigger the tooltip on a touch device.\r\n      this._manualListeners.set('touchstart', () => this.show());\r\n    }\r\n\r\n    this._manualListeners.forEach((listener, event) => element.addEventListener(event, listener));\r\n\r\n    if (element.nodeName === 'INPUT' || element.nodeName === 'TEXTAREA') {\r\n      // When we bind a gesture event on an element (in this case `longpress`), HammerJS\r\n      // will add some inline styles by default, including `user-select: none`. This is\r\n      // problematic on iOS and in Safari, because it will prevent users from typing in inputs.\r\n      // Since `user-select: none` is not needed for the `longpress` event and can cause unexpected\r\n      // behavior for text fields, we always clear the `user-select` to avoid such issues.\r\n      elementStyle.webkitUserSelect = elementStyle.userSelect = elementStyle.msUserSelect = '';\r\n    }\r\n\r\n    // Hammer applies `-webkit-user-drag: none` on all elements by default,\r\n    // which breaks the native drag&drop. If the consumer explicitly made\r\n    // the element draggable, clear the `-webkit-user-drag`.\r\n    if (element.draggable && elementStyle.webkitUserDrag === 'none') {\r\n      elementStyle.webkitUserDrag = '';\r\n    }\r\n\r\n    _focusMonitor.monitor(_elementRef).pipe(takeUntil(this._destroyed)).subscribe(origin => {\r\n      // Note that the focus monitor runs outside the Angular zone.\r\n      if (!origin) {\r\n        _ngZone.run(() => this.hide(0));\r\n      } else if (origin === 'keyboard') {\r\n        _ngZone.run(() => this.show());\r\n      }\r\n    });\r\n\r\n    if (_defaultOptions && _defaultOptions.position) {\r\n      this.position = _defaultOptions.position;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Dispose the tooltip when destroyed.\r\n   */\r\n  ngOnDestroy() {\r\n    if (this._overlayRef) {\r\n      this._overlayRef.dispose();\r\n      this._tooltipInstance = null;\r\n    }\r\n\r\n    // Clean up the event listeners set in the constructor\r\n    this._manualListeners.forEach((listener, event) => {\r\n      this._elementRef.nativeElement.removeEventListener(event, listener);\r\n    });\r\n    this._manualListeners.clear();\r\n\r\n    this._destroyed.next();\r\n    this._destroyed.complete();\r\n\r\n    this._ariaDescriber.removeDescription(this._elementRef.nativeElement, this.message);\r\n    this._focusMonitor.stopMonitoring(this._elementRef);\r\n  }\r\n\r\n  /** Shows the tooltip after the delay in ms, defaults to tooltip-delay-show or 0ms if no input */\r\n  show(delay: number = this.showDelay): void {\r\n    if (this.disabled || !this.message || (this._isTooltipVisible() &&\r\n      !this._tooltipInstance!._showTimeoutId && !this._tooltipInstance!._hideTimeoutId)) {\r\n        return;\r\n    }\r\n\r\n    const overlayRef = this._createOverlay();\r\n\r\n    this._detach();\r\n    this._portal = this._portal || new ComponentPortal(TooltipComponent, this._viewContainerRef);\r\n    this._tooltipInstance = overlayRef.attach(this._portal).instance;\r\n    this._tooltipInstance.afterHidden()\r\n      .pipe(takeUntil(this._destroyed))\r\n      .subscribe(() => this._detach());\r\n    this._setTooltipClass(this._tooltipClass);\r\n    this._updateTooltipMessage();\r\n    this._tooltipInstance!.show(delay);\r\n  }\r\n\r\n  /** Hides the tooltip after the delay in ms, defaults to tooltip-delay-hide or 0ms if no input */\r\n  hide(delay: number = this.hideDelay): void {\r\n    if (this._tooltipInstance) {\r\n      this._tooltipInstance.hide(delay);\r\n    }\r\n  }\r\n\r\n  /** Shows/hides the tooltip */\r\n  toggle(): void {\r\n    this._isTooltipVisible() ? this.hide() : this.show();\r\n  }\r\n\r\n  /** Returns true if the tooltip is currently visible to the user */\r\n  _isTooltipVisible(): boolean {\r\n    return !!this._tooltipInstance && this._tooltipInstance.isVisible();\r\n  }\r\n\r\n  /** Handles the keydown events on the host element. */\r\n  _handleKeydown(e: KeyboardEvent) {\r\n    if (this._isTooltipVisible() && e.keyCode === ESCAPE) {\r\n      e.stopPropagation();\r\n      this.hide(0);\r\n    }\r\n  }\r\n\r\n  /** Handles the touchend events on the host element. */\r\n  _handleTouchend() {\r\n    this.hide(this._defaultOptions.touchendHideDelay);\r\n  }\r\n\r\n  /** Create the overlay config and position strategy */\r\n  private _createOverlay(): OverlayRef {\r\n    if (this._overlayRef) {\r\n      return this._overlayRef;\r\n    }\r\n\r\n    const scrollableAncestors =\r\n        this._scrollDispatcher.getAncestorScrollContainers(this._elementRef);\r\n\r\n    // Create connected position strategy that listens for scroll events to reposition.\r\n    const strategy = this._overlay.position()\r\n                         .flexibleConnectedTo(this._elementRef)\r\n                         .withTransformOriginOn('.mat-tooltip')\r\n                         .withFlexibleDimensions(false)\r\n                         .withViewportMargin(8)\r\n                         .withScrollableContainers(scrollableAncestors);\r\n\r\n    strategy.positionChanges.pipe(takeUntil(this._destroyed)).subscribe(change => {\r\n      if (this._tooltipInstance) {\r\n        if (change.scrollableViewProperties.isOverlayClipped && this._tooltipInstance.isVisible()) {\r\n          // After position changes occur and the overlay is clipped by\r\n          // a parent scrollable then close the tooltip.\r\n          this._ngZone.run(() => this.hide(0));\r\n        }\r\n      }\r\n    });\r\n\r\n    this._overlayRef = this._overlay.create({\r\n      direction: this._dir,\r\n      positionStrategy: strategy,\r\n      panelClass: TOOLTIP_PANEL_CLASS,\r\n      scrollStrategy: this._scrollStrategy()\r\n    });\r\n\r\n    this._updatePosition();\r\n\r\n    this._overlayRef.detachments()\r\n      .pipe(takeUntil(this._destroyed))\r\n      .subscribe(() => this._detach());\r\n\r\n    return this._overlayRef;\r\n  }\r\n\r\n  /** Detaches the currently-attached tooltip. */\r\n  private _detach() {\r\n    if (this._overlayRef && this._overlayRef.hasAttached()) {\r\n      this._overlayRef.detach();\r\n    }\r\n\r\n    this._tooltipInstance = null;\r\n  }\r\n\r\n  /** Updates the position of the current tooltip. */\r\n  private _updatePosition() {\r\n    const position =\r\n        this._overlayRef!.getConfig().positionStrategy as FlexibleConnectedPositionStrategy;\r\n    const origin = this._getOrigin();\r\n    const overlay = this._getOverlayPosition();\r\n\r\n    position.withPositions([\r\n      {...origin.main, ...overlay.main},\r\n      {...origin.fallback, ...overlay.fallback}\r\n    ]);\r\n  }\r\n\r\n  /**\r\n   * Returns the origin position and a fallback position based on the user's position preference.\r\n   * The fallback position is the inverse of the origin (e.g. `'below' -> 'above'`).\r\n   */\r\n  _getOrigin(): {main: OriginConnectionPosition, fallback: OriginConnectionPosition} {\r\n    const isLtr = !this._dir || this._dir.value == 'ltr';\r\n    const position = this.position;\r\n    let originPosition: OriginConnectionPosition;\r\n\r\n    if (position == 'above' || position == 'below') {\r\n      originPosition = {originX: 'center', originY: position == 'above' ? 'top' : 'bottom'};\r\n    } else if (\r\n      position == 'before' ||\r\n      (position == 'left' && isLtr) ||\r\n      (position == 'right' && !isLtr)) {\r\n      originPosition = {originX: 'start', originY: 'center'};\r\n    } else if (\r\n      position == 'after' ||\r\n      (position == 'right' && isLtr) ||\r\n      (position == 'left' && !isLtr)) {\r\n      originPosition = {originX: 'end', originY: 'center'};\r\n    } else {\r\n      throw getMatTooltipInvalidPositionError(position);\r\n    }\r\n\r\n    const {x, y} = this._invertPosition(originPosition.originX, originPosition.originY);\r\n\r\n    return {\r\n      main: originPosition,\r\n      fallback: {originX: x, originY: y}\r\n    };\r\n  }\r\n\r\n  /** Returns the overlay position and a fallback position based on the user's preference */\r\n  _getOverlayPosition(): {main: OverlayConnectionPosition, fallback: OverlayConnectionPosition} {\r\n    const isLtr = !this._dir || this._dir.value == 'ltr';\r\n    const position = this.position;\r\n    let overlayPosition: OverlayConnectionPosition;\r\n\r\n    if (position == 'above') {\r\n      overlayPosition = {overlayX: 'center', overlayY: 'bottom'};\r\n    } else if (position == 'below') {\r\n      overlayPosition = {overlayX: 'center', overlayY: 'top'};\r\n    } else if (\r\n      position == 'before' ||\r\n      (position == 'left' && isLtr) ||\r\n      (position == 'right' && !isLtr)) {\r\n      overlayPosition = {overlayX: 'end', overlayY: 'center'};\r\n    } else if (\r\n      position == 'after' ||\r\n      (position == 'right' && isLtr) ||\r\n      (position == 'left' && !isLtr)) {\r\n      overlayPosition = {overlayX: 'start', overlayY: 'center'};\r\n    } else {\r\n      throw getMatTooltipInvalidPositionError(position);\r\n    }\r\n\r\n    const {x, y} = this._invertPosition(overlayPosition.overlayX, overlayPosition.overlayY);\r\n\r\n    return {\r\n      main: overlayPosition,\r\n      fallback: {overlayX: x, overlayY: y}\r\n    };\r\n  }\r\n\r\n  /** Updates the tooltip message and repositions the overlay according to the new message length */\r\n  private _updateTooltipMessage() {\r\n    // Must wait for the message to be painted to the tooltip so that the overlay can properly\r\n    // calculate the correct positioning based on the size of the text.\r\n    if (this._tooltipInstance) {\r\n      this._tooltipInstance.message = this.message;\r\n      this._tooltipInstance._markForCheck();\r\n\r\n      this._ngZone.onMicrotaskEmpty.asObservable().pipe(\r\n        take(1),\r\n        takeUntil(this._destroyed)\r\n      ).subscribe(() => {\r\n        if (this._tooltipInstance) {\r\n          this._overlayRef!.updatePosition();\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  /** Updates the tooltip class */\r\n  private _setTooltipClass(tooltipClass: string|string[]|Set<string>|{[key: string]: any}) {\r\n    if (this._tooltipInstance) {\r\n      this._tooltipInstance.tooltipClass = tooltipClass;\r\n      this._tooltipInstance._markForCheck();\r\n    }\r\n  }\r\n\r\n  /** Inverts an overlay position. */\r\n  private _invertPosition(x: HorizontalConnectionPos, y: VerticalConnectionPos) {\r\n    if (this.position === 'above' || this.position === 'below') {\r\n      if (y === 'top') {\r\n        y = 'bottom';\r\n      } else if (y === 'bottom') {\r\n        y = 'top';\r\n      }\r\n    } else {\r\n      if (x === 'end') {\r\n        x = 'start';\r\n      } else if (x === 'start') {\r\n        x = 'end';\r\n      }\r\n    }\r\n\r\n    return {x, y};\r\n  }\r\n}\r\n\r\nexport type TooltipVisibility = 'initial' | 'visible' | 'hidden';\r\n\r\n/**\r\n * Internal component that wraps the tooltip's content.\r\n * @docs-private\r\n */\r\n@Component({\r\n  moduleId: module.id,\r\n  selector: 'mat-tooltip-component',\r\n  templateUrl: 'tooltip.html',\r\n  styleUrls: ['tooltip.css'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  animations: [matTooltipAnimations.tooltipState],\r\n  host: {\r\n    // Forces the element to have a layout in IE and Edge. This fixes issues where the element\r\n    // won't be rendered if the animations are disabled or there is no web animations polyfill.\r\n    '[style.zoom]': '_visibility === \"visible\" ? 1 : null',\r\n    '(body:click)': 'this._handleBodyInteraction()',\r\n    'aria-hidden': 'true',\r\n  }\r\n})\r\nexport class TooltipComponent implements OnDestroy {\r\n  /** Message to display in the tooltip */\r\n  message: string;\r\n\r\n  /** Classes to be added to the tooltip. Supports the same syntax as `ngClass`. */\r\n  tooltipClass: string|string[]|Set<string>|{[key: string]: any};\r\n\r\n  /** The timeout ID of any current timer set to show the tooltip */\r\n  _showTimeoutId: number | null;\r\n\r\n  /** The timeout ID of any current timer set to hide the tooltip */\r\n  _hideTimeoutId: number | null;\r\n\r\n  /** Property watched by the animation framework to show or hide the tooltip */\r\n  _visibility: TooltipVisibility = 'initial';\r\n\r\n  /** Whether interactions on the page should close the tooltip */\r\n  private _closeOnInteraction: boolean = false;\r\n\r\n  /** Subject for notifying that the tooltip has been hidden from the view */\r\n  private readonly _onHide: Subject<any> = new Subject();\r\n\r\n  /** Stream that emits whether the user has a handset-sized display.  */\r\n  _isHandset: Observable<BreakpointState> = this._breakpointObserver.observe(Breakpoints.Handset);\r\n\r\n  constructor(\r\n    private _changeDetectorRef: ChangeDetectorRef,\r\n    private _breakpointObserver: BreakpointObserver) {}\r\n\r\n  /**\r\n   * Shows the tooltip with an animation originating from the provided origin\r\n   * @param delay Amount of milliseconds to the delay showing the tooltip.\r\n   */\r\n  show(delay: number): void {\r\n    // Cancel the delayed hide if it is scheduled\r\n    if (this._hideTimeoutId) {\r\n      clearTimeout(this._hideTimeoutId);\r\n      this._hideTimeoutId = null;\r\n    }\r\n\r\n    // Body interactions should cancel the tooltip if there is a delay in showing.\r\n    this._closeOnInteraction = true;\r\n    this._showTimeoutId = setTimeout(() => {\r\n      this._visibility = 'visible';\r\n      this._showTimeoutId = null;\r\n\r\n      // Mark for check so if any parent component has set the\r\n      // ChangeDetectionStrategy to OnPush it will be checked anyways\r\n      this._markForCheck();\r\n    }, delay);\r\n  }\r\n\r\n  /**\r\n   * Begins the animation to hide the tooltip after the provided delay in ms.\r\n   * @param delay Amount of milliseconds to delay showing the tooltip.\r\n   */\r\n  hide(delay: number): void {\r\n    // Cancel the delayed show if it is scheduled\r\n    if (this._showTimeoutId) {\r\n      clearTimeout(this._showTimeoutId);\r\n      this._showTimeoutId = null;\r\n    }\r\n\r\n    this._hideTimeoutId = setTimeout(() => {\r\n      this._visibility = 'hidden';\r\n      this._hideTimeoutId = null;\r\n\r\n      // Mark for check so if any parent component has set the\r\n      // ChangeDetectionStrategy to OnPush it will be checked anyways\r\n      this._markForCheck();\r\n    }, delay);\r\n  }\r\n\r\n  /** Returns an observable that notifies when the tooltip has been hidden from view. */\r\n  afterHidden(): Observable<void> {\r\n    return this._onHide.asObservable();\r\n  }\r\n\r\n  /** Whether the tooltip is being displayed. */\r\n  isVisible(): boolean {\r\n    return this._visibility === 'visible';\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this._onHide.complete();\r\n  }\r\n\r\n  _animationStart() {\r\n    this._closeOnInteraction = false;\r\n  }\r\n\r\n  _animationDone(event: AnimationEvent): void {\r\n    const toState = event.toState as TooltipVisibility;\r\n\r\n    if (toState === 'hidden' && !this.isVisible()) {\r\n      this._onHide.next();\r\n    }\r\n\r\n    if (toState === 'visible' || toState === 'hidden') {\r\n      this._closeOnInteraction = true;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Interactions on the HTML body should close the tooltip immediately as defined in the\r\n   * material design spec.\r\n   * https://material.io/design/components/tooltips.html#behavior\r\n   */\r\n  _handleBodyInteraction(): void {\r\n    if (this._closeOnInteraction) {\r\n      this.hide(0);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Marks that the tooltip needs to be checked in the next change detection run.\r\n   * Mainly used for rendering the initial text before positioning a tooltip, which\r\n   * can be problematic in components with OnPush change detection.\r\n   */\r\n  _markForCheck(): void {\r\n    this._changeDetectorRef.markForCheck();\r\n  }\r\n}\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\nimport {\r\n  animate,\r\n  AnimationTriggerMetadata,\r\n  keyframes,\r\n  state,\r\n  style,\r\n  transition,\r\n  trigger,\r\n} from '@angular/animations';\r\n\r\n/**\r\n * Animations used by MatTooltip.\r\n * @docs-private\r\n */\r\nexport const matTooltipAnimations: {\r\n  readonly tooltipState: AnimationTriggerMetadata;\r\n} = {\r\n  /** Animation that transitions a tooltip in and out. */\r\n  tooltipState: trigger('state', [\r\n    state('initial, void, hidden', style({opacity: 0, transform: 'scale(0)'})),\r\n    state('visible', style({transform: 'scale(1)'})),\r\n    transition('* => visible', animate('200ms cubic-bezier(0, 0, 0.2, 1)', keyframes([\r\n      style({opacity: 0, transform: 'scale(0)', offset: 0}),\r\n      style({opacity: 0.5, transform: 'scale(0.99)', offset: 0.5}),\r\n      style({opacity: 1, transform: 'scale(1)', offset: 1})\r\n    ]))),\r\n    transition('* => hidden', animate('100ms cubic-bezier(0, 0, 0.2, 1)', style({opacity: 0}))),\r\n  ])\r\n};\r\n"],"names":["tslib_1.__assign"],"mappings":"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"}