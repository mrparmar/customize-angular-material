{"version":3,"file":"material-slider.umd.js","sources":["../../src/lib/slider/slider-module.ts","../../src/lib/slider/slider.ts","../../node_modules/tslib/tslib.es6.js"],"sourcesContent":["/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport {CommonModule} from '@angular/common';\r\nimport {NgModule} from '@angular/core';\r\nimport {GestureConfig, MatCommonModule} from '@angular/material/core';\r\nimport {HAMMER_GESTURE_CONFIG} from '@angular/platform-browser';\r\nimport {MatSlider} from './slider';\r\n\r\n\r\n@NgModule({\r\n  imports: [CommonModule, MatCommonModule],\r\n  exports: [MatSlider, MatCommonModule],\r\n  declarations: [MatSlider],\r\n  providers: [{provide: HAMMER_GESTURE_CONFIG, useClass: GestureConfig}]\r\n})\r\nexport class MatSliderModule {}\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport {FocusMonitor, FocusOrigin} from '@angular/cdk/a11y';\r\nimport {Directionality} from '@angular/cdk/bidi';\r\nimport {coerceBooleanProperty, coerceNumberProperty} from '@angular/cdk/coercion';\r\nimport {\r\n  DOWN_ARROW,\r\n  END,\r\n  HOME,\r\n  LEFT_ARROW,\r\n  PAGE_DOWN,\r\n  PAGE_UP,\r\n  RIGHT_ARROW,\r\n  UP_ARROW,\r\n  hasModifierKey,\r\n} from '@angular/cdk/keycodes';\r\nimport {\r\n  Attribute,\r\n  ChangeDetectionStrategy,\r\n  ChangeDetectorRef,\r\n  Component,\r\n  ElementRef,\r\n  EventEmitter,\r\n  forwardRef,\r\n  Inject,\r\n  Input,\r\n  OnDestroy,\r\n  OnInit,\r\n  Optional,\r\n  Output,\r\n  ViewChild,\r\n  ViewEncapsulation,\r\n} from '@angular/core';\r\nimport {ControlValueAccessor, NG_VALUE_ACCESSOR} from '@angular/forms';\r\nimport {\r\n  CanColor,\r\n  CanColorCtor,\r\n  CanDisable,\r\n  CanDisableCtor,\r\n  HammerInput,\r\n  HasTabIndex,\r\n  HasTabIndexCtor,\r\n  mixinColor,\r\n  mixinDisabled,\r\n  mixinTabIndex,\r\n} from '@angular/material/core';\r\nimport {ANIMATION_MODULE_TYPE} from '@angular/platform-browser/animations';\r\nimport {Subscription} from 'rxjs';\r\n\r\n/**\r\n * Visually, a 30px separation between tick marks looks best. This is very subjective but it is\r\n * the default separation we chose.\r\n */\r\nconst MIN_AUTO_TICK_SEPARATION = 30;\r\n\r\n/** The thumb gap size for a disabled slider. */\r\nconst DISABLED_THUMB_GAP = 7;\r\n\r\n/** The thumb gap size for a non-active slider at its minimum value. */\r\nconst MIN_VALUE_NONACTIVE_THUMB_GAP = 7;\r\n\r\n/** The thumb gap size for an active slider at its minimum value. */\r\nconst MIN_VALUE_ACTIVE_THUMB_GAP = 10;\r\n\r\n/**\r\n * Provider Expression that allows mat-slider to register as a ControlValueAccessor.\r\n * This allows it to support [(ngModel)] and [formControl].\r\n * @docs-private\r\n */\r\nexport const MAT_SLIDER_VALUE_ACCESSOR: any = {\r\n  provide: NG_VALUE_ACCESSOR,\r\n  useExisting: forwardRef(() => MatSlider),\r\n  multi: true\r\n};\r\n\r\n/** A simple change event emitted by the MatSlider component. */\r\nexport class MatSliderChange {\r\n  /** The MatSlider that changed. */\r\n  source: MatSlider;\r\n\r\n  /** The new value of the source slider. */\r\n  value: number | null;\r\n}\r\n\r\n\r\n// Boilerplate for applying mixins to MatSlider.\r\n/** @docs-private */\r\nexport class MatSliderBase {\r\n  constructor(public _elementRef: ElementRef) {}\r\n}\r\nexport const _MatSliderMixinBase:\r\n    HasTabIndexCtor &\r\n    CanColorCtor &\r\n    CanDisableCtor &\r\n    typeof MatSliderBase =\r\n        mixinTabIndex(mixinColor(mixinDisabled(MatSliderBase), 'accent'));\r\n\r\n/**\r\n * Allows users to select from a range of values by moving the slider thumb. It is similar in\r\n * behavior to the native `<input type=\"range\">` element.\r\n */\r\n@Component({\r\n  moduleId: module.id,\r\n  selector: 'mat-slider',\r\n  exportAs: 'matSlider',\r\n  providers: [MAT_SLIDER_VALUE_ACCESSOR],\r\n  host: {\r\n    '(focus)': '_onFocus()',\r\n    '(blur)': '_onBlur()',\r\n    '(mousedown)': '_onMousedown($event)',\r\n    '(keydown)': '_onKeydown($event)',\r\n    '(keyup)': '_onKeyup()',\r\n    '(mouseenter)': '_onMouseenter()',\r\n    '(slide)': '_onSlide($event)',\r\n    '(slideend)': '_onSlideEnd()',\r\n    '(slidestart)': '_onSlideStart($event)',\r\n    'class': 'mat-slider',\r\n    'role': 'slider',\r\n    '[tabIndex]': 'tabIndex',\r\n    '[attr.aria-disabled]': 'disabled',\r\n    '[attr.aria-valuemax]': 'max',\r\n    '[attr.aria-valuemin]': 'min',\r\n    '[attr.aria-valuenow]': 'value',\r\n    '[attr.aria-orientation]': 'vertical ? \"vertical\" : \"horizontal\"',\r\n    '[class.mat-slider-disabled]': 'disabled',\r\n    '[class.mat-slider-has-ticks]': 'tickInterval',\r\n    '[class.mat-slider-horizontal]': '!vertical',\r\n    '[class.mat-slider-axis-inverted]': '_invertAxis',\r\n    '[class.mat-slider-sliding]': '_isSliding',\r\n    '[class.mat-slider-thumb-label-showing]': 'thumbLabel',\r\n    '[class.mat-slider-vertical]': 'vertical',\r\n    '[class.mat-slider-min-value]': '_isMinValue',\r\n    '[class.mat-slider-hide-last-tick]': 'disabled || _isMinValue && _thumbGap && _invertAxis',\r\n    '[class._mat-animation-noopable]': '_animationMode === \"NoopAnimations\"',\r\n  },\r\n  templateUrl: 'slider.html',\r\n  styleUrls: ['slider.css'],\r\n  inputs: ['disabled', 'color', 'tabIndex'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class MatSlider extends _MatSliderMixinBase\r\n    implements ControlValueAccessor, OnDestroy, CanDisable, CanColor, OnInit, HasTabIndex {\r\n  /** Whether the slider is inverted. */\r\n  @Input()\r\n  get invert(): boolean { return this._invert; }\r\n  set invert(value: boolean) {\r\n    this._invert = coerceBooleanProperty(value);\r\n  }\r\n  private _invert = false;\r\n\r\n  /** The maximum value that the slider can have. */\r\n  @Input()\r\n  get max(): number { return this._max; }\r\n  set max(v: number) {\r\n    this._max = coerceNumberProperty(v, this._max);\r\n    this._percent = this._calculatePercentage(this._value);\r\n\r\n    // Since this also modifies the percentage, we need to let the change detection know.\r\n    this._changeDetectorRef.markForCheck();\r\n  }\r\n  private _max: number = 100;\r\n\r\n  /** The minimum value that the slider can have. */\r\n  @Input()\r\n  get min(): number { return this._min; }\r\n  set min(v: number) {\r\n    this._min = coerceNumberProperty(v, this._min);\r\n\r\n    // If the value wasn't explicitly set by the user, set it to the min.\r\n    if (this._value === null) {\r\n      this.value = this._min;\r\n    }\r\n    this._percent = this._calculatePercentage(this._value);\r\n\r\n    // Since this also modifies the percentage, we need to let the change detection know.\r\n    this._changeDetectorRef.markForCheck();\r\n  }\r\n  private _min: number = 0;\r\n\r\n  /** The values at which the thumb will snap. */\r\n  @Input()\r\n  get step(): number { return this._step; }\r\n  set step(v: number) {\r\n    this._step = coerceNumberProperty(v, this._step);\r\n\r\n    if (this._step % 1 !== 0) {\r\n      this._roundToDecimal = this._step.toString().split('.').pop()!.length;\r\n    }\r\n\r\n    // Since this could modify the label, we need to notify the change detection.\r\n    this._changeDetectorRef.markForCheck();\r\n  }\r\n  private _step: number = 1;\r\n\r\n  /** Whether or not to show the thumb label. */\r\n  @Input()\r\n  get thumbLabel(): boolean { return this._thumbLabel; }\r\n  set thumbLabel(value: boolean) { this._thumbLabel = coerceBooleanProperty(value); }\r\n  private _thumbLabel: boolean = false;\r\n\r\n  /**\r\n   * How often to show ticks. Relative to the step so that a tick always appears on a step.\r\n   * Ex: Tick interval of 4 with a step of 3 will draw a tick every 4 steps (every 12 values).\r\n   */\r\n  @Input()\r\n  get tickInterval() { return this._tickInterval; }\r\n  set tickInterval(value: 'auto' | number) {\r\n    if (value === 'auto') {\r\n      this._tickInterval = 'auto';\r\n    } else if (typeof value === 'number' || typeof value === 'string') {\r\n      this._tickInterval = coerceNumberProperty(value, this._tickInterval as number);\r\n    } else {\r\n      this._tickInterval = 0;\r\n    }\r\n  }\r\n  private _tickInterval: 'auto' | number = 0;\r\n\r\n  /** Value of the slider. */\r\n  @Input()\r\n  get value(): number | null {\r\n    // If the value needs to be read and it is still uninitialized, initialize it to the min.\r\n    if (this._value === null) {\r\n      this.value = this._min;\r\n    }\r\n    return this._value;\r\n  }\r\n  set value(v: number | null) {\r\n    if (v !== this._value) {\r\n      let value = coerceNumberProperty(v);\r\n\r\n      // While incrementing by a decimal we can end up with values like 33.300000000000004.\r\n      // Truncate it to ensure that it matches the label and to make it easier to work with.\r\n      if (this._roundToDecimal) {\r\n        value = parseFloat(value.toFixed(this._roundToDecimal));\r\n      }\r\n\r\n      this._value = value;\r\n      this._percent = this._calculatePercentage(this._value);\r\n\r\n      // Since this also modifies the percentage, we need to let the change detection know.\r\n      this._changeDetectorRef.markForCheck();\r\n    }\r\n  }\r\n  private _value: number | null = null;\r\n\r\n  /**\r\n   * Function that will be used to format the value before it is displayed\r\n   * in the thumb label. Can be used to format very large number in order\r\n   * for them to fit into the slider thumb.\r\n   */\r\n  @Input() displayWith: (value: number | null) => string | number;\r\n\r\n  /** Whether the slider is vertical. */\r\n  @Input()\r\n  get vertical(): boolean { return this._vertical; }\r\n  set vertical(value: boolean) {\r\n    this._vertical = coerceBooleanProperty(value);\r\n  }\r\n  private _vertical = false;\r\n\r\n  /** Event emitted when the slider value has changed. */\r\n  @Output() readonly change: EventEmitter<MatSliderChange> = new EventEmitter<MatSliderChange>();\r\n\r\n  /** Event emitted when the slider thumb moves. */\r\n  @Output() readonly input: EventEmitter<MatSliderChange> = new EventEmitter<MatSliderChange>();\r\n\r\n  /**\r\n   * Emits when the raw value of the slider changes. This is here primarily\r\n   * to facilitate the two-way binding for the `value` input.\r\n   * @docs-private\r\n   */\r\n  @Output() readonly valueChange: EventEmitter<number | null> = new EventEmitter<number | null>();\r\n\r\n  /** The value to be used for display purposes. */\r\n  get displayValue(): string | number {\r\n    if (this.displayWith) {\r\n      return this.displayWith(this.value);\r\n    }\r\n\r\n    // Note that this could be improved further by rounding something like 0.999 to 1 or\r\n    // 0.899 to 0.9, however it is very performance sensitive, because it gets called on\r\n    // every change detection cycle.\r\n    if (this._roundToDecimal && this.value && this.value % 1 !== 0) {\r\n      return this.value.toFixed(this._roundToDecimal);\r\n    }\r\n\r\n    return this.value || 0;\r\n  }\r\n\r\n  /** set focus to the host element */\r\n  focus() {\r\n    this._focusHostElement();\r\n  }\r\n\r\n  /** blur the host element */\r\n  blur() {\r\n    this._blurHostElement();\r\n  }\r\n\r\n  /** onTouch function registered via registerOnTouch (ControlValueAccessor). */\r\n  onTouched: () => any = () => {};\r\n\r\n  /** The percentage of the slider that coincides with the value. */\r\n  get percent(): number { return this._clamp(this._percent); }\r\n  private _percent: number = 0;\r\n\r\n  /**\r\n   * Whether or not the thumb is sliding.\r\n   * Used to determine if there should be a transition for the thumb and fill track.\r\n   */\r\n  _isSliding: boolean = false;\r\n\r\n  /**\r\n   * Whether or not the slider is active (clicked or sliding).\r\n   * Used to shrink and grow the thumb as according to the Material Design spec.\r\n   */\r\n  _isActive: boolean = false;\r\n\r\n  /**\r\n   * Whether the axis of the slider is inverted.\r\n   * (i.e. whether moving the thumb in the positive x or y direction decreases the slider's value).\r\n   */\r\n  get _invertAxis() {\r\n    // Standard non-inverted mode for a vertical slider should be dragging the thumb from bottom to\r\n    // top. However from a y-axis standpoint this is inverted.\r\n    return this.vertical ? !this.invert : this.invert;\r\n  }\r\n\r\n\r\n  /** Whether the slider is at its minimum value. */\r\n  get _isMinValue() {\r\n    return this.percent === 0;\r\n  }\r\n\r\n  /**\r\n   * The amount of space to leave between the slider thumb and the track fill & track background\r\n   * elements.\r\n   */\r\n  get _thumbGap() {\r\n    if (this.disabled) {\r\n      return DISABLED_THUMB_GAP;\r\n    }\r\n    if (this._isMinValue && !this.thumbLabel) {\r\n      return this._isActive ? MIN_VALUE_ACTIVE_THUMB_GAP : MIN_VALUE_NONACTIVE_THUMB_GAP;\r\n    }\r\n    return 0;\r\n  }\r\n\r\n  /** CSS styles for the track background element. */\r\n  get _trackBackgroundStyles(): { [key: string]: string } {\r\n    const axis = this.vertical ? 'Y' : 'X';\r\n    const scale = this.vertical ? `1, ${1 - this.percent}, 1` : `${1 - this.percent}, 1, 1`;\r\n    const sign = this._shouldInvertMouseCoords() ? '-' : '';\r\n\r\n    return {\r\n      // scale3d avoids some rendering issues in Chrome. See #12071.\r\n      transform: `translate${axis}(${sign}${this._thumbGap}px) scale3d(${scale})`\r\n    };\r\n  }\r\n\r\n  /** CSS styles for the track fill element. */\r\n  get _trackFillStyles(): { [key: string]: string } {\r\n    const axis = this.vertical ? 'Y' : 'X';\r\n    const scale = this.vertical ? `1, ${this.percent}, 1` : `${this.percent}, 1, 1`;\r\n    const sign = this._shouldInvertMouseCoords() ? '' : '-';\r\n\r\n    return {\r\n      // scale3d avoids some rendering issues in Chrome. See #12071.\r\n      transform: `translate${axis}(${sign}${this._thumbGap}px) scale3d(${scale})`\r\n    };\r\n  }\r\n\r\n  /** CSS styles for the ticks container element. */\r\n  get _ticksContainerStyles(): { [key: string]: string } {\r\n    let axis = this.vertical ? 'Y' : 'X';\r\n    // For a horizontal slider in RTL languages we push the ticks container off the left edge\r\n    // instead of the right edge to avoid causing a horizontal scrollbar to appear.\r\n    let sign = !this.vertical && this._getDirection() == 'rtl' ? '' : '-';\r\n    let offset = this._tickIntervalPercent / 2 * 100;\r\n    return {\r\n      'transform': `translate${axis}(${sign}${offset}%)`\r\n    };\r\n  }\r\n\r\n  /** CSS styles for the ticks element. */\r\n  get _ticksStyles(): { [key: string]: string } {\r\n    let tickSize = this._tickIntervalPercent * 100;\r\n    let backgroundSize = this.vertical ? `2px ${tickSize}%` : `${tickSize}% 2px`;\r\n    let axis = this.vertical ? 'Y' : 'X';\r\n    // Depending on the direction we pushed the ticks container, push the ticks the opposite\r\n    // direction to re-center them but clip off the end edge. In RTL languages we need to flip the\r\n    // ticks 180 degrees so we're really cutting off the end edge abd not the start.\r\n    let sign = !this.vertical && this._getDirection() == 'rtl' ? '-' : '';\r\n    let rotate = !this.vertical && this._getDirection() == 'rtl' ? ' rotate(180deg)' : '';\r\n    let styles: { [key: string]: string } = {\r\n      'backgroundSize': backgroundSize,\r\n      // Without translateZ ticks sometimes jitter as the slider moves on Chrome & Firefox.\r\n      'transform': `translateZ(0) translate${axis}(${sign}${tickSize / 2}%)${rotate}`\r\n    };\r\n\r\n    if (this._isMinValue && this._thumbGap) {\r\n      let side = this.vertical ?\r\n          (this._invertAxis ? 'Bottom' : 'Top') :\r\n          (this._invertAxis ? 'Right' : 'Left');\r\n      styles[`padding${side}`] = `${this._thumbGap}px`;\r\n    }\r\n\r\n    return styles;\r\n  }\r\n\r\n  get _thumbContainerStyles(): { [key: string]: string } {\r\n    let axis = this.vertical ? 'Y' : 'X';\r\n    // For a horizontal slider in RTL languages we push the thumb container off the left edge\r\n    // instead of the right edge to avoid causing a horizontal scrollbar to appear.\r\n    let invertOffset =\r\n        (this._getDirection() == 'rtl' && !this.vertical) ? !this._invertAxis : this._invertAxis;\r\n    let offset = (invertOffset ? this.percent : 1 - this.percent) * 100;\r\n    return {\r\n      'transform': `translate${axis}(-${offset}%)`\r\n    };\r\n  }\r\n\r\n  /** The size of a tick interval as a percentage of the size of the track. */\r\n  private _tickIntervalPercent: number = 0;\r\n\r\n  /** The dimensions of the slider. */\r\n  private _sliderDimensions: ClientRect | null = null;\r\n\r\n  private _controlValueAccessorChangeFn: (value: any) => void = () => {};\r\n\r\n  /** Decimal places to round to, based on the step amount. */\r\n  private _roundToDecimal: number;\r\n\r\n  /** Subscription to the Directionality change EventEmitter. */\r\n  private _dirChangeSubscription = Subscription.EMPTY;\r\n\r\n  /** The value of the slider when the slide start event fires. */\r\n  private _valueOnSlideStart: number | null;\r\n\r\n  /** Reference to the inner slider wrapper element. */\r\n  @ViewChild('sliderWrapper') private _sliderWrapper: ElementRef;\r\n\r\n  /**\r\n   * Whether mouse events should be converted to a slider position by calculating their distance\r\n   * from the right or bottom edge of the slider as opposed to the top or left.\r\n   */\r\n  private _shouldInvertMouseCoords() {\r\n    return (this._getDirection() == 'rtl' && !this.vertical) ? !this._invertAxis : this._invertAxis;\r\n  }\r\n\r\n  /** The language direction for this slider element. */\r\n  private _getDirection() {\r\n    return (this._dir && this._dir.value == 'rtl') ? 'rtl' : 'ltr';\r\n  }\r\n\r\n  constructor(elementRef: ElementRef,\r\n              private _focusMonitor: FocusMonitor,\r\n              private _changeDetectorRef: ChangeDetectorRef,\r\n              @Optional() private _dir: Directionality,\r\n              @Attribute('tabindex') tabIndex: string,\r\n              // @breaking-change 8.0.0 `_animationMode` parameter to be made required.\r\n              @Optional() @Inject(ANIMATION_MODULE_TYPE) public _animationMode?: string) {\r\n    super(elementRef);\r\n\r\n    this.tabIndex = parseInt(tabIndex) || 0;\r\n  }\r\n\r\n  ngOnInit() {\r\n    this._focusMonitor\r\n        .monitor(this._elementRef, true)\r\n        .subscribe((origin: FocusOrigin) => {\r\n          this._isActive = !!origin && origin !== 'keyboard';\r\n          this._changeDetectorRef.detectChanges();\r\n        });\r\n    if (this._dir) {\r\n      this._dirChangeSubscription = this._dir.change.subscribe(() => {\r\n        this._changeDetectorRef.markForCheck();\r\n      });\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this._focusMonitor.stopMonitoring(this._elementRef);\r\n    this._dirChangeSubscription.unsubscribe();\r\n  }\r\n\r\n  _onMouseenter() {\r\n    if (this.disabled) {\r\n      return;\r\n    }\r\n\r\n    // We save the dimensions of the slider here so we can use them to update the spacing of the\r\n    // ticks and determine where on the slider click and slide events happen.\r\n    this._sliderDimensions = this._getSliderDimensions();\r\n    this._updateTickIntervalPercent();\r\n  }\r\n\r\n  _onMousedown(event: MouseEvent) {\r\n    // Don't do anything if the slider is disabled or the\r\n    // user is using anything other than the main mouse button.\r\n    if (this.disabled || event.button !== 0) {\r\n      return;\r\n    }\r\n\r\n    const oldValue = this.value;\r\n    this._isSliding = false;\r\n    this._focusHostElement();\r\n    this._updateValueFromPosition({x: event.clientX, y: event.clientY});\r\n\r\n    // Emit a change and input event if the value changed.\r\n    if (oldValue != this.value) {\r\n      this._emitInputEvent();\r\n      this._emitChangeEvent();\r\n    }\r\n  }\r\n\r\n  _onSlide(event: HammerInput) {\r\n    if (this.disabled) {\r\n      return;\r\n    }\r\n\r\n    // The slide start event sometimes fails to fire on iOS, so if we're not already in the sliding\r\n    // state, call the slide start handler manually.\r\n    if (!this._isSliding) {\r\n      this._onSlideStart(null);\r\n    }\r\n\r\n    // Prevent the slide from selecting anything else.\r\n    event.preventDefault();\r\n\r\n    let oldValue = this.value;\r\n    this._updateValueFromPosition({x: event.center.x, y: event.center.y});\r\n\r\n    // Native range elements always emit `input` events when the value changed while sliding.\r\n    if (oldValue != this.value) {\r\n      this._emitInputEvent();\r\n    }\r\n  }\r\n\r\n  _onSlideStart(event: HammerInput | null) {\r\n    if (this.disabled || this._isSliding) {\r\n      return;\r\n    }\r\n\r\n    // Simulate mouseenter in case this is a mobile device.\r\n    this._onMouseenter();\r\n\r\n    this._isSliding = true;\r\n    this._focusHostElement();\r\n    this._valueOnSlideStart = this.value;\r\n\r\n    if (event) {\r\n      this._updateValueFromPosition({x: event.center.x, y: event.center.y});\r\n      event.preventDefault();\r\n    }\r\n  }\r\n\r\n  _onSlideEnd() {\r\n    this._isSliding = false;\r\n\r\n    if (this._valueOnSlideStart != this.value && !this.disabled) {\r\n      this._emitChangeEvent();\r\n    }\r\n    this._valueOnSlideStart = null;\r\n  }\r\n\r\n  _onFocus() {\r\n    // We save the dimensions of the slider here so we can use them to update the spacing of the\r\n    // ticks and determine where on the slider click and slide events happen.\r\n    this._sliderDimensions = this._getSliderDimensions();\r\n    this._updateTickIntervalPercent();\r\n  }\r\n\r\n  _onBlur() {\r\n    this.onTouched();\r\n  }\r\n\r\n  _onKeydown(event: KeyboardEvent) {\r\n    if (this.disabled || hasModifierKey(event)) {\r\n      return;\r\n    }\r\n\r\n    const oldValue = this.value;\r\n\r\n    switch (event.keyCode) {\r\n      case PAGE_UP:\r\n        this._increment(10);\r\n        break;\r\n      case PAGE_DOWN:\r\n        this._increment(-10);\r\n        break;\r\n      case END:\r\n        this.value = this.max;\r\n        break;\r\n      case HOME:\r\n        this.value = this.min;\r\n        break;\r\n      case LEFT_ARROW:\r\n        // NOTE: For a sighted user it would make more sense that when they press an arrow key on an\r\n        // inverted slider the thumb moves in that direction. However for a blind user, nothing\r\n        // about the slider indicates that it is inverted. They will expect left to be decrement,\r\n        // regardless of how it appears on the screen. For speakers ofRTL languages, they probably\r\n        // expect left to mean increment. Therefore we flip the meaning of the side arrow keys for\r\n        // RTL. For inverted sliders we prefer a good a11y experience to having it \"look right\" for\r\n        // sighted users, therefore we do not swap the meaning.\r\n        this._increment(this._getDirection() == 'rtl' ? 1 : -1);\r\n        break;\r\n      case UP_ARROW:\r\n        this._increment(1);\r\n        break;\r\n      case RIGHT_ARROW:\r\n        // See comment on LEFT_ARROW about the conditions under which we flip the meaning.\r\n        this._increment(this._getDirection() == 'rtl' ? -1 : 1);\r\n        break;\r\n      case DOWN_ARROW:\r\n        this._increment(-1);\r\n        break;\r\n      default:\r\n        // Return if the key is not one that we explicitly handle to avoid calling preventDefault on\r\n        // it.\r\n        return;\r\n    }\r\n\r\n    if (oldValue != this.value) {\r\n      this._emitInputEvent();\r\n      this._emitChangeEvent();\r\n    }\r\n\r\n    this._isSliding = true;\r\n    event.preventDefault();\r\n  }\r\n\r\n  _onKeyup() {\r\n    this._isSliding = false;\r\n  }\r\n\r\n  /** Increments the slider by the given number of steps (negative number decrements). */\r\n  private _increment(numSteps: number) {\r\n    this.value = this._clamp((this.value || 0) + this.step * numSteps, this.min, this.max);\r\n  }\r\n\r\n  /** Calculate the new value from the new physical location. The value will always be snapped. */\r\n  private _updateValueFromPosition(pos: {x: number, y: number}) {\r\n    if (!this._sliderDimensions) {\r\n      return;\r\n    }\r\n\r\n    let offset = this.vertical ? this._sliderDimensions.top : this._sliderDimensions.left;\r\n    let size = this.vertical ? this._sliderDimensions.height : this._sliderDimensions.width;\r\n    let posComponent = this.vertical ? pos.y : pos.x;\r\n\r\n    // The exact value is calculated from the event and used to find the closest snap value.\r\n    let percent = this._clamp((posComponent - offset) / size);\r\n\r\n    if (this._shouldInvertMouseCoords()) {\r\n      percent = 1 - percent;\r\n    }\r\n\r\n    // Since the steps may not divide cleanly into the max value, if the user\r\n    // slid to 0 or 100 percent, we jump to the min/max value. This approach\r\n    // is slightly more intuitive than using `Math.ceil` below, because it\r\n    // follows the user's pointer closer.\r\n    if (percent === 0) {\r\n      this.value = this.min;\r\n    } else if (percent === 1) {\r\n      this.value = this.max;\r\n    } else {\r\n      const exactValue = this._calculateValue(percent);\r\n\r\n      // This calculation finds the closest step by finding the closest\r\n      // whole number divisible by the step relative to the min.\r\n      const closestValue = Math.round((exactValue - this.min) / this.step) * this.step + this.min;\r\n\r\n      // The value needs to snap to the min and max.\r\n      this.value = this._clamp(closestValue, this.min, this.max);\r\n    }\r\n  }\r\n\r\n  /** Emits a change event if the current value is different from the last emitted value. */\r\n  private _emitChangeEvent() {\r\n    this._controlValueAccessorChangeFn(this.value);\r\n    this.valueChange.emit(this.value);\r\n    this.change.emit(this._createChangeEvent());\r\n  }\r\n\r\n  /** Emits an input event when the current value is different from the last emitted value. */\r\n  private _emitInputEvent() {\r\n    this.input.emit(this._createChangeEvent());\r\n  }\r\n\r\n  /** Updates the amount of space between ticks as a percentage of the width of the slider. */\r\n  private _updateTickIntervalPercent() {\r\n    if (!this.tickInterval || !this._sliderDimensions) {\r\n      return;\r\n    }\r\n\r\n    if (this.tickInterval == 'auto') {\r\n      let trackSize = this.vertical ? this._sliderDimensions.height : this._sliderDimensions.width;\r\n      let pixelsPerStep = trackSize * this.step / (this.max - this.min);\r\n      let stepsPerTick = Math.ceil(MIN_AUTO_TICK_SEPARATION / pixelsPerStep);\r\n      let pixelsPerTick = stepsPerTick * this.step;\r\n      this._tickIntervalPercent = pixelsPerTick / trackSize;\r\n    } else {\r\n      this._tickIntervalPercent = this.tickInterval * this.step / (this.max - this.min);\r\n    }\r\n  }\r\n\r\n  /** Creates a slider change object from the specified value. */\r\n  private _createChangeEvent(value = this.value): MatSliderChange {\r\n    let event = new MatSliderChange();\r\n\r\n    event.source = this;\r\n    event.value = value;\r\n\r\n    return event;\r\n  }\r\n\r\n  /** Calculates the percentage of the slider that a value is. */\r\n  private _calculatePercentage(value: number | null) {\r\n    return ((value || 0) - this.min) / (this.max - this.min);\r\n  }\r\n\r\n  /** Calculates the value a percentage of the slider corresponds to. */\r\n  private _calculateValue(percentage: number) {\r\n    return this.min + percentage * (this.max - this.min);\r\n  }\r\n\r\n  /** Return a number between two numbers. */\r\n  private _clamp(value: number, min = 0, max = 1) {\r\n    return Math.max(min, Math.min(value, max));\r\n  }\r\n\r\n  /**\r\n   * Get the bounding client rect of the slider track element.\r\n   * The track is used rather than the native element to ignore the extra space that the thumb can\r\n   * take up.\r\n   */\r\n  private _getSliderDimensions() {\r\n    return this._sliderWrapper ? this._sliderWrapper.nativeElement.getBoundingClientRect() : null;\r\n  }\r\n\r\n  /**\r\n   * Focuses the native element.\r\n   * Currently only used to allow a blur event to fire but will be used with keyboard input later.\r\n   */\r\n  private _focusHostElement() {\r\n    this._elementRef.nativeElement.focus();\r\n  }\r\n\r\n  /** Blurs the native element. */\r\n  private _blurHostElement() {\r\n    this._elementRef.nativeElement.blur();\r\n  }\r\n\r\n  /**\r\n   * Sets the model value. Implemented as part of ControlValueAccessor.\r\n   * @param value\r\n   */\r\n  writeValue(value: any) {\r\n    this.value = value;\r\n  }\r\n\r\n  /**\r\n   * Registers a callback to be triggered when the value has changed.\r\n   * Implemented as part of ControlValueAccessor.\r\n   * @param fn Callback to be registered.\r\n   */\r\n  registerOnChange(fn: (value: any) => void) {\r\n    this._controlValueAccessorChangeFn = fn;\r\n  }\r\n\r\n  /**\r\n   * Registers a callback to be triggered when the component is touched.\r\n   * Implemented as part of ControlValueAccessor.\r\n   * @param fn Callback to be registered.\r\n   */\r\n  registerOnTouched(fn: any) {\r\n    this.onTouched = fn;\r\n  }\r\n\r\n  /**\r\n   * Sets whether the component should be disabled.\r\n   * Implemented as part of ControlValueAccessor.\r\n   * @param isDisabled\r\n   */\r\n  setDisabledState(isDisabled: boolean) {\r\n    this.disabled = isDisabled;\r\n  }\r\n}\r\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n"],"names":["HAMMER_GESTURE_CONFIG","GestureConfig","MatCommonModule","CommonModule","NgModule","ViewChild","Output","Input","Optional","Inject","ANIMATION_MODULE_TYPE","Attribute","Directionality","ChangeDetectorRef","ChangeDetectionStrategy","ViewEncapsulation","Component","DOWN_ARROW","RIGHT_ARROW","UP_ARROW","LEFT_ARROW","HOME","END","PAGE_DOWN","PAGE_UP","hasModifierKey","coerceBooleanProperty","coerceNumberProperty","Subscription","EventEmitter","tslib_1.__extends","mixinTabIndex","mixinColor","mixinDisabled","forwardRef","NG_VALUE_ACCESSOR"],"mappings":"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"}