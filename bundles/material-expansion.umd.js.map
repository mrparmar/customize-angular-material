{"version":3,"file":"material-expansion.umd.js","sources":["../../src/lib/expansion/expansion-module.ts","../../src/lib/expansion/accordion.ts","../../src/lib/expansion/expansion-panel-header.ts","../../src/lib/expansion/expansion-panel.ts","../../src/lib/expansion/expansion-panel-content.ts","../../src/lib/expansion/expansion-animations.ts","../../src/lib/expansion/accordion-base.ts","../../node_modules/tslib/tslib.es6.js"],"sourcesContent":["/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport {CdkAccordionModule} from '@angular/cdk/accordion';\r\nimport {PortalModule} from '@angular/cdk/portal';\r\nimport {CommonModule} from '@angular/common';\r\nimport {NgModule} from '@angular/core';\r\nimport {MatAccordion} from './accordion';\r\nimport {MatExpansionPanel, MatExpansionPanelActionRow} from './expansion-panel';\r\nimport {MatExpansionPanelContent} from './expansion-panel-content';\r\nimport {\r\n  MatExpansionPanelDescription,\r\n  MatExpansionPanelHeader,\r\n  MatExpansionPanelTitle,\r\n} from './expansion-panel-header';\r\n\r\n\r\n@NgModule({\r\n  imports: [CommonModule, CdkAccordionModule, PortalModule],\r\n  exports: [\r\n    MatAccordion,\r\n    MatExpansionPanel,\r\n    MatExpansionPanelActionRow,\r\n    MatExpansionPanelHeader,\r\n    MatExpansionPanelTitle,\r\n    MatExpansionPanelDescription,\r\n    MatExpansionPanelContent,\r\n  ],\r\n  declarations: [\r\n    MatAccordion,\r\n    MatExpansionPanel,\r\n    MatExpansionPanelActionRow,\r\n    MatExpansionPanelHeader,\r\n    MatExpansionPanelTitle,\r\n    MatExpansionPanelDescription,\r\n    MatExpansionPanelContent,\r\n  ],\r\n})\r\nexport class MatExpansionModule {}\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport {Directive, Input, ContentChildren, QueryList, AfterContentInit} from '@angular/core';\r\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\r\nimport {CdkAccordion} from '@angular/cdk/accordion';\r\nimport {FocusKeyManager} from '@angular/cdk/a11y';\r\nimport {HOME, END} from '@angular/cdk/keycodes';\r\nimport {MAT_ACCORDION, MatAccordionBase, MatAccordionDisplayMode} from './accordion-base';\r\nimport {MatExpansionPanelHeader} from './expansion-panel-header';\r\n\r\n/**\r\n * Directive for a Material Design Accordion.\r\n */\r\n@Directive({\r\n  selector: 'mat-accordion',\r\n  exportAs: 'matAccordion',\r\n  inputs: ['multi'],\r\n  providers: [{\r\n    provide: MAT_ACCORDION,\r\n    useExisting: MatAccordion\r\n  }],\r\n  host: {\r\n    class: 'mat-accordion'\r\n  }\r\n})\r\nexport class MatAccordion extends CdkAccordion implements MatAccordionBase, AfterContentInit {\r\n  private _keyManager: FocusKeyManager<MatExpansionPanelHeader>;\r\n\r\n  @ContentChildren(MatExpansionPanelHeader, {descendants: true})\r\n  _headers: QueryList<MatExpansionPanelHeader>;\r\n\r\n  /** Whether the expansion indicator should be hidden. */\r\n  @Input()\r\n  get hideToggle(): boolean { return this._hideToggle; }\r\n  set hideToggle(show: boolean) { this._hideToggle = coerceBooleanProperty(show); }\r\n  private _hideToggle: boolean = false;\r\n\r\n  /**\r\n   * Display mode used for all expansion panels in the accordion. Currently two display\r\n   * modes exist:\r\n   *  default - a gutter-like spacing is placed around any expanded panel, placing the expanded\r\n   *     panel at a different elevation from the rest of the accordion.\r\n   *  flat - no spacing is placed around expanded panels, showing all panels at the same\r\n   *     elevation.\r\n   */\r\n  @Input() displayMode: MatAccordionDisplayMode = 'default';\r\n\r\n  ngAfterContentInit() {\r\n    this._keyManager = new FocusKeyManager(this._headers).withWrap();\r\n  }\r\n\r\n  /** Handles keyboard events coming in from the panel headers. */\r\n  _handleHeaderKeydown(event: KeyboardEvent) {\r\n    const {keyCode} = event;\r\n    const manager = this._keyManager;\r\n\r\n    if (keyCode === HOME) {\r\n      manager.setFirstItemActive();\r\n      event.preventDefault();\r\n    } else if (keyCode === END) {\r\n      manager.setLastItemActive();\r\n      event.preventDefault();\r\n    } else {\r\n      this._keyManager.onKeydown(event);\r\n    }\r\n  }\r\n\r\n  _handleHeaderFocus(header: MatExpansionPanelHeader) {\r\n    this._keyManager.updateActiveItem(header);\r\n  }\r\n}\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport {FocusMonitor, FocusableOption, FocusOrigin} from '@angular/cdk/a11y';\r\nimport {ENTER, SPACE, hasModifierKey} from '@angular/cdk/keycodes';\r\nimport {\r\n  ChangeDetectionStrategy,\r\n  ChangeDetectorRef,\r\n  Component,\r\n  Directive,\r\n  ElementRef,\r\n  Host,\r\n  Input,\r\n  OnDestroy,\r\n  ViewEncapsulation,\r\n  Optional,\r\n  Inject,\r\n} from '@angular/core';\r\nimport {merge, Subscription, EMPTY} from 'rxjs';\r\nimport {filter} from 'rxjs/operators';\r\nimport {matExpansionAnimations} from './expansion-animations';\r\nimport {\r\n  MatExpansionPanel,\r\n  MatExpansionPanelDefaultOptions,\r\n  MAT_EXPANSION_PANEL_DEFAULT_OPTIONS,\r\n} from './expansion-panel';\r\n\r\n\r\n/**\r\n * `<mat-expansion-panel-header>`\r\n *\r\n * This component corresponds to the header element of an `<mat-expansion-panel>`.\r\n */\r\n@Component({\r\n  moduleId: module.id,\r\n  selector: 'mat-expansion-panel-header',\r\n  styleUrls: ['./expansion-panel-header.css'],\r\n  templateUrl: './expansion-panel-header.html',\r\n  encapsulation: ViewEncapsulation.None,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  animations: [\r\n    matExpansionAnimations.indicatorRotate,\r\n    matExpansionAnimations.expansionHeaderHeight\r\n  ],\r\n  host: {\r\n    'class': 'mat-expansion-panel-header',\r\n    'role': 'button',\r\n    '[attr.id]': 'panel._headerId',\r\n    '[attr.tabindex]': 'disabled ? -1 : 0',\r\n    '[attr.aria-controls]': '_getPanelId()',\r\n    '[attr.aria-expanded]': '_isExpanded()',\r\n    '[attr.aria-disabled]': 'panel.disabled',\r\n    '[class.mat-expanded]': '_isExpanded()',\r\n    '(click)': '_toggle()',\r\n    '(keydown)': '_keydown($event)',\r\n    '[@expansionHeight]': `{\r\n        value: _getExpandedState(),\r\n        params: {\r\n          collapsedHeight: collapsedHeight,\r\n          expandedHeight: expandedHeight\r\n        }\r\n    }`,\r\n  },\r\n})\r\nexport class MatExpansionPanelHeader implements OnDestroy, FocusableOption {\r\n  private _parentChangeSubscription = Subscription.EMPTY;\r\n\r\n  constructor(\r\n      @Host() public panel: MatExpansionPanel,\r\n      private _element: ElementRef,\r\n      private _focusMonitor: FocusMonitor,\r\n      private _changeDetectorRef: ChangeDetectorRef,\r\n      @Inject(MAT_EXPANSION_PANEL_DEFAULT_OPTIONS) @Optional()\r\n          defaultOptions?: MatExpansionPanelDefaultOptions) {\r\n    const accordionHideToggleChange = panel.accordion ?\r\n        panel.accordion._stateChanges.pipe(\r\n            filter(changes => !!changes['hideToggle'])) :\r\n        EMPTY;\r\n\r\n    // Since the toggle state depends on an @Input on the panel, we\r\n    // need to subscribe and trigger change detection manually.\r\n    this._parentChangeSubscription =\r\n        merge(\r\n            panel.opened, panel.closed, accordionHideToggleChange,\r\n            panel._inputChanges.pipe(filter(\r\n                changes => !!(changes['hideToggle'] || changes['disabled']))))\r\n    .subscribe(() => this._changeDetectorRef.markForCheck());\r\n\r\n    // Avoids focus being lost if the panel contained the focused element and was closed.\r\n    panel.closed\r\n      .pipe(filter(() => panel._containsFocus()))\r\n      .subscribe(() => _focusMonitor.focusVia(_element, 'program'));\r\n\r\n    _focusMonitor.monitor(_element).subscribe(origin => {\r\n      if (origin && panel.accordion) {\r\n        panel.accordion._handleHeaderFocus(this);\r\n      }\r\n    });\r\n\r\n    if (defaultOptions) {\r\n      this.expandedHeight = defaultOptions.expandedHeight;\r\n      this.collapsedHeight = defaultOptions.collapsedHeight;\r\n    }\r\n  }\r\n\r\n  /** Height of the header while the panel is expanded. */\r\n  @Input() expandedHeight: string;\r\n\r\n  /** Height of the header while the panel is collapsed. */\r\n  @Input() collapsedHeight: string;\r\n\r\n  /**\r\n   * Whether the associated panel is disabled. Implemented as a part of `FocusableOption`.\r\n   * @docs-private\r\n   */\r\n  get disabled() {\r\n    return this.panel.disabled;\r\n  }\r\n\r\n  /** Toggles the expanded state of the panel. */\r\n  _toggle(): void {\r\n    this.panel.toggle();\r\n  }\r\n\r\n  /** Gets whether the panel is expanded. */\r\n  _isExpanded(): boolean {\r\n    return this.panel.expanded;\r\n  }\r\n\r\n  /** Gets the expanded state string of the panel. */\r\n  _getExpandedState(): string {\r\n    return this.panel._getExpandedState();\r\n  }\r\n\r\n  /** Gets the panel id. */\r\n  _getPanelId(): string {\r\n    return this.panel.id;\r\n  }\r\n\r\n  /** Gets whether the expand indicator should be shown. */\r\n  _showToggle(): boolean {\r\n    return !this.panel.hideToggle && !this.panel.disabled;\r\n  }\r\n\r\n  /** Handle keydown event calling to toggle() if appropriate. */\r\n  _keydown(event: KeyboardEvent) {\r\n    switch (event.keyCode) {\r\n      // Toggle for space and enter keys.\r\n      case SPACE:\r\n      case ENTER:\r\n        if (!hasModifierKey(event)) {\r\n          event.preventDefault();\r\n          this._toggle();\r\n        }\r\n\r\n        break;\r\n      default:\r\n        if (this.panel.accordion) {\r\n          this.panel.accordion._handleHeaderKeydown(event);\r\n        }\r\n\r\n        return;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Focuses the panel header. Implemented as a part of `FocusableOption`.\r\n   * @param origin Origin of the action that triggered the focus.\r\n   * @docs-private\r\n   */\r\n  focus(origin: FocusOrigin = 'program') {\r\n    this._focusMonitor.focusVia(this._element, origin);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this._parentChangeSubscription.unsubscribe();\r\n    this._focusMonitor.stopMonitoring(this._element);\r\n  }\r\n}\r\n\r\n/**\r\n * `<mat-panel-description>`\r\n *\r\n * This directive is to be used inside of the MatExpansionPanelHeader component.\r\n */\r\n@Directive({\r\n  selector: 'mat-panel-description',\r\n  host: {\r\n    class: 'mat-expansion-panel-header-description'\r\n  }\r\n})\r\nexport class MatExpansionPanelDescription {}\r\n\r\n/**\r\n * `<mat-panel-title>`\r\n *\r\n * This directive is to be used inside of the MatExpansionPanelHeader component.\r\n */\r\n@Directive({\r\n  selector: 'mat-panel-title',\r\n  host: {\r\n    class: 'mat-expansion-panel-header-title'\r\n  }\r\n})\r\nexport class MatExpansionPanelTitle {}\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport {AnimationEvent} from '@angular/animations';\r\nimport {CdkAccordionItem} from '@angular/cdk/accordion';\r\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\r\nimport {UniqueSelectionDispatcher} from '@angular/cdk/collections';\r\nimport {TemplatePortal} from '@angular/cdk/portal';\r\nimport {\r\n  AfterContentInit,\r\n  ChangeDetectionStrategy,\r\n  ChangeDetectorRef,\r\n  Component,\r\n  ContentChild,\r\n  Directive,\r\n  EventEmitter,\r\n  ElementRef,\r\n  Input,\r\n  Inject,\r\n  OnChanges,\r\n  OnDestroy,\r\n  Optional,\r\n  Output,\r\n  SimpleChanges,\r\n  SkipSelf,\r\n  ViewContainerRef,\r\n  ViewEncapsulation,\r\n  ViewChild,\r\n  InjectionToken,\r\n} from '@angular/core';\r\nimport {DOCUMENT} from '@angular/common';\r\nimport {ANIMATION_MODULE_TYPE} from '@angular/platform-browser/animations';\r\nimport {Subject} from 'rxjs';\r\nimport {filter, startWith, take, distinctUntilChanged} from 'rxjs/operators';\r\nimport {matExpansionAnimations} from './expansion-animations';\r\nimport {MatExpansionPanelContent} from './expansion-panel-content';\r\nimport {MAT_ACCORDION, MatAccordionBase} from './accordion-base';\r\n\r\n/** MatExpansionPanel's states. */\r\nexport type MatExpansionPanelState = 'expanded' | 'collapsed';\r\n\r\n/** Counter for generating unique element ids. */\r\nlet uniqueId = 0;\r\n\r\n/**\r\n * Object that can be used to override the default options\r\n * for all of the expansion panels in a module.\r\n */\r\nexport interface MatExpansionPanelDefaultOptions {\r\n  /** Height of the header while the panel is expanded. */\r\n  expandedHeight: string;\r\n\r\n  /** Height of the header while the panel is collapsed. */\r\n  collapsedHeight: string;\r\n\r\n  /** Whether the toggle indicator should be hidden. */\r\n  hideToggle: boolean;\r\n}\r\n\r\n/**\r\n * Injection token that can be used to configure the defalt\r\n * options for the expansion panel component.\r\n */\r\nexport const MAT_EXPANSION_PANEL_DEFAULT_OPTIONS =\r\n    new InjectionToken<MatExpansionPanelDefaultOptions>('MAT_EXPANSION_PANEL_DEFAULT_OPTIONS');\r\n\r\n/**\r\n * `<mat-expansion-panel>`\r\n *\r\n * This component can be used as a single element to show expandable content, or as one of\r\n * multiple children of an element with the MatAccordion directive attached.\r\n */\r\n@Component({\r\n  moduleId: module.id,\r\n  styleUrls: ['./expansion-panel.css'],\r\n  selector: 'mat-expansion-panel',\r\n  exportAs: 'matExpansionPanel',\r\n  templateUrl: './expansion-panel.html',\r\n  encapsulation: ViewEncapsulation.None,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  inputs: ['disabled', 'expanded'],\r\n  outputs: ['opened', 'closed', 'expandedChange'],\r\n  animations: [matExpansionAnimations.bodyExpansion],\r\n  providers: [\r\n    // Provide MatAccordion as undefined to prevent nested expansion panels from registering\r\n    // to the same accordion.\r\n    {provide: MAT_ACCORDION, useValue: undefined},\r\n  ],\r\n  host: {\r\n    'class': 'mat-expansion-panel',\r\n    '[class.mat-expanded]': 'expanded',\r\n    '[class._mat-animation-noopable]': '_animationMode === \"NoopAnimations\"',\r\n    '[class.mat-expansion-panel-spacing]': '_hasSpacing()',\r\n  }\r\n})\r\nexport class MatExpansionPanel extends CdkAccordionItem implements AfterContentInit, OnChanges,\r\n  OnDestroy {\r\n\r\n  // @breaking-change 8.0.0 Remove `| undefined` from here\r\n  // when the `_document` constructor param is required.\r\n  private _document: Document | undefined;\r\n\r\n  /** Whether the toggle indicator should be hidden. */\r\n  @Input()\r\n  get hideToggle(): boolean {\r\n    return this._hideToggle || (this.accordion && this.accordion.hideToggle);\r\n  }\r\n  set hideToggle(value: boolean) {\r\n    this._hideToggle = coerceBooleanProperty(value);\r\n  }\r\n  private _hideToggle = false;\r\n\r\n  /** An event emitted after the body's expansion animation happens. */\r\n  @Output() afterExpand = new EventEmitter<void>();\r\n\r\n  /** An event emitted after the body's collapse animation happens. */\r\n  @Output() afterCollapse = new EventEmitter<void>();\r\n\r\n  /** Stream that emits for changes in `@Input` properties. */\r\n  readonly _inputChanges = new Subject<SimpleChanges>();\r\n\r\n  /** Optionally defined accordion the expansion panel belongs to. */\r\n  accordion: MatAccordionBase;\r\n\r\n  /** Content that will be rendered lazily. */\r\n  @ContentChild(MatExpansionPanelContent) _lazyContent: MatExpansionPanelContent;\r\n\r\n  /** Element containing the panel's user-provided content. */\r\n  @ViewChild('body') _body: ElementRef<HTMLElement>;\r\n\r\n  /** Portal holding the user's content. */\r\n  _portal: TemplatePortal;\r\n\r\n  /** ID for the associated header element. Used for a11y labelling. */\r\n  _headerId = `mat-expansion-panel-header-${uniqueId++}`;\r\n\r\n  /** Stream of body animation done events. */\r\n  _bodyAnimationDone = new Subject<AnimationEvent>();\r\n\r\n  constructor(@Optional() @SkipSelf() @Inject(MAT_ACCORDION) accordion: MatAccordionBase,\r\n              _changeDetectorRef: ChangeDetectorRef,\r\n              _uniqueSelectionDispatcher: UniqueSelectionDispatcher,\r\n              private _viewContainerRef: ViewContainerRef,\r\n              // @breaking-change 8.0.0 _document and _animationMode to be made required\r\n              @Inject(DOCUMENT) _document?: any,\r\n              @Optional() @Inject(ANIMATION_MODULE_TYPE) public _animationMode?: string,\r\n              @Inject(MAT_EXPANSION_PANEL_DEFAULT_OPTIONS) @Optional()\r\n                  defaultOptions?: MatExpansionPanelDefaultOptions) {\r\n    super(accordion, _changeDetectorRef, _uniqueSelectionDispatcher);\r\n    this.accordion = accordion;\r\n    this._document = _document;\r\n\r\n    // We need a Subject with distinctUntilChanged, because the `done` event\r\n    // fires twice on some browsers. See https://github.com/angular/angular/issues/24084\r\n    this._bodyAnimationDone.pipe(distinctUntilChanged((x, y) => {\r\n      return x.fromState === y.fromState && x.toState === y.toState;\r\n    })).subscribe(event => {\r\n      if (event.fromState !== 'void') {\r\n        if (event.toState === 'expanded') {\r\n          this.afterExpand.emit();\r\n        } else if (event.toState === 'collapsed') {\r\n          this.afterCollapse.emit();\r\n        }\r\n      }\r\n    });\r\n\r\n    if (defaultOptions) {\r\n      this.hideToggle = defaultOptions.hideToggle;\r\n    }\r\n  }\r\n\r\n  /** Determines whether the expansion panel should have spacing between it and its siblings. */\r\n  _hasSpacing(): boolean {\r\n    if (this.accordion) {\r\n      // We don't need to subscribe to the `stateChanges` of the parent accordion because each time\r\n      // the [displayMode] input changes, the change detection will also cover the host bindings\r\n      // of this expansion panel.\r\n      return (this.expanded ? this.accordion.displayMode : this._getExpandedState()) === 'default';\r\n    }\r\n    return false;\r\n  }\r\n\r\n  /** Gets the expanded state string. */\r\n  _getExpandedState(): MatExpansionPanelState {\r\n    return this.expanded ? 'expanded' : 'collapsed';\r\n  }\r\n\r\n  ngAfterContentInit() {\r\n    if (this._lazyContent) {\r\n      // Render the content as soon as the panel becomes open.\r\n      this.opened.pipe(\r\n        startWith<void>(null!),\r\n        filter(() => this.expanded && !this._portal),\r\n        take(1)\r\n      ).subscribe(() => {\r\n        this._portal = new TemplatePortal(this._lazyContent._template, this._viewContainerRef);\r\n      });\r\n    }\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    this._inputChanges.next(changes);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    super.ngOnDestroy();\r\n    this._bodyAnimationDone.complete();\r\n    this._inputChanges.complete();\r\n  }\r\n\r\n  /** Checks whether the expansion panel's content contains the currently-focused element. */\r\n  _containsFocus(): boolean {\r\n    if (this._body && this._document) {\r\n      const focusedElement = this._document.activeElement;\r\n      const bodyElement = this._body.nativeElement;\r\n      return focusedElement === bodyElement || bodyElement.contains(focusedElement);\r\n    }\r\n\r\n    return false;\r\n  }\r\n}\r\n\r\n@Directive({\r\n  selector: 'mat-action-row',\r\n  host: {\r\n    class: 'mat-action-row'\r\n  }\r\n})\r\nexport class MatExpansionPanelActionRow {}\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport {Directive, TemplateRef} from '@angular/core';\r\n\r\n/**\r\n * Expansion panel content that will be rendered lazily\r\n * after the panel is opened for the first time.\r\n */\r\n@Directive({\r\n  selector: 'ng-template[matExpansionPanelContent]'\r\n})\r\nexport class MatExpansionPanelContent {\r\n  constructor(public _template: TemplateRef<any>) {}\r\n}\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\nimport {\r\n  animate,\r\n  animateChild,\r\n  group,\r\n  state,\r\n  style,\r\n  transition,\r\n  trigger,\r\n  query,\r\n  AnimationTriggerMetadata,\r\n} from '@angular/animations';\r\n\r\n/** Time and timing curve for expansion panel animations. */\r\nexport const EXPANSION_PANEL_ANIMATION_TIMING = '225ms cubic-bezier(0.4,0.0,0.2,1)';\r\n\r\n/**\r\n * Animations used by the Material expansion panel.\r\n *\r\n * A bug in angular animation's `state` when ViewContainers are moved using ViewContainerRef.move()\r\n * causes the animation state of moved components to become `void` upon exit, and not update again\r\n * upon reentry into the DOM.  This can lead a to situation for the expansion panel where the state\r\n * of the panel is `expanded` or `collapsed` but the animation state is `void`.\r\n *\r\n * To correctly handle animating to the next state, we animate between `void` and `collapsed` which\r\n * are defined to have the same styles. Since angular animates from the current styles to the\r\n * destination state's style definition, in situations where we are moving from `void`'s styles to\r\n * `collapsed` this acts a noop since no style values change.\r\n *\r\n * In the case where angular's animation state is out of sync with the expansion panel's state, the\r\n * expansion panel being `expanded` and angular animations being `void`, the animation from the\r\n * `expanded`'s effective styles (though in a `void` animation state) to the collapsed state will\r\n * occur as expected.\r\n *\r\n * Angular Bug: https://github.com/angular/angular/issues/18847\r\n *\r\n * @docs-private\r\n */\r\nexport const matExpansionAnimations: {\r\n  readonly indicatorRotate: AnimationTriggerMetadata;\r\n  readonly expansionHeaderHeight: AnimationTriggerMetadata;\r\n  readonly bodyExpansion: AnimationTriggerMetadata;\r\n} = {\r\n  /** Animation that rotates the indicator arrow. */\r\n  indicatorRotate: trigger('indicatorRotate', [\r\n    state('collapsed, void', style({transform: 'rotate(0deg)'})),\r\n    state('expanded', style({transform: 'rotate(180deg)'})),\r\n    transition('expanded <=> collapsed, void => collapsed',\r\n      animate(EXPANSION_PANEL_ANIMATION_TIMING)),\r\n  ]),\r\n\r\n  /** Animation that expands and collapses the panel header height. */\r\n  expansionHeaderHeight: trigger('expansionHeight', [\r\n    state('collapsed, void', style({\r\n      height: '{{collapsedHeight}}',\r\n    }), {\r\n      params: {collapsedHeight: '48px'},\r\n    }),\r\n    state('expanded', style({\r\n      height: '{{expandedHeight}}'\r\n    }), {\r\n      params: {expandedHeight: '64px'}\r\n    }),\r\n    transition('expanded <=> collapsed, void => collapsed', group([\r\n      query('@indicatorRotate', animateChild(), {optional: true}),\r\n      animate(EXPANSION_PANEL_ANIMATION_TIMING),\r\n    ])),\r\n  ]),\r\n\r\n  /** Animation that expands and collapses the panel content. */\r\n  bodyExpansion: trigger('bodyExpansion', [\r\n    state('collapsed, void', style({height: '0px', visibility: 'hidden'})),\r\n    state('expanded', style({height: '*', visibility: 'visible'})),\r\n    transition('expanded <=> collapsed, void => collapsed',\r\n      animate(EXPANSION_PANEL_ANIMATION_TIMING)),\r\n  ])\r\n};\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport {InjectionToken} from '@angular/core';\r\nimport {CdkAccordion} from '@angular/cdk/accordion';\r\n\r\n/** MatAccordion's display modes. */\r\nexport type MatAccordionDisplayMode = 'default' | 'flat';\r\n\r\n/**\r\n * Base interface for a `MatAccordion`.\r\n * @docs-private\r\n */\r\nexport interface MatAccordionBase extends CdkAccordion {\r\n  /** Whether the expansion indicator should be hidden. */\r\n  hideToggle: boolean;\r\n\r\n  /** Display mode used for all expansion panels in the accordion. */\r\n  displayMode: MatAccordionDisplayMode;\r\n\r\n  /** Handles keyboard events coming in from the panel headers. */\r\n  _handleHeaderKeydown: (event: KeyboardEvent) => void;\r\n\r\n  /** Handles focus events on the panel headers. */\r\n  _handleHeaderFocus: (header: any) => void;\r\n}\r\n\r\n\r\n/**\r\n * Token used to provide a `MatAccordion` to `MatExpansionPanel`.\r\n * Used primarily to avoid circular imports between `MatAccordion` and `MatExpansionPanel`.\r\n */\r\nexport const MAT_ACCORDION = new InjectionToken<MatAccordionBase>('MAT_ACCORDION');\r\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n"],"names":["CommonModule","CdkAccordionModule","PortalModule","NgModule","CdkAccordion","Input","ContentChildren","Directive","END","HOME","FocusKeyManager","coerceBooleanProperty","tslib_1.__extends","Inject","Optional","ChangeDetectorRef","FocusMonitor","ChangeDetectionStrategy","ViewEncapsulation","Component","hasModifierKey","ENTER","SPACE","filter","merge","EMPTY","Subscription","ViewChild","ContentChild","Output","ANIMATION_MODULE_TYPE","DOCUMENT","ViewContainerRef","UniqueSelectionDispatcher","TemplatePortal","startWith","take","distinctUntilChanged","accordion","Subject","EventEmitter","InjectionToken","TemplateRef","transition","animate","state","style","trigger","query","animateChild","group"],"mappings":"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"}