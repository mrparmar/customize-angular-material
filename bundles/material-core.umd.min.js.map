{"version":3,"file":"material-core.umd.min.js","sources":["../../node_modules/tslib/tslib.es6.js","../../src/lib/core/common-behaviors/common-module.ts","../../src/lib/core/common-behaviors/disabled.ts","../../src/lib/core/common-behaviors/color.ts","../../src/lib/core/common-behaviors/disable-ripple.ts","../../src/lib/core/common-behaviors/tabindex.ts","../../src/lib/core/common-behaviors/error-state.ts","../../src/lib/core/common-behaviors/initialized.ts","../../src/lib/core/datetime/date-adapter.ts","../../src/lib/core/datetime/native-date-adapter.ts","../../src/lib/core/line/line.ts","../../src/lib/core/ripple/ripple-renderer.ts","../../src/lib/core/option/option.ts","../../src/lib/core/animation/animation.ts","../../src/lib/core/datetime/date-formats.ts","../../src/lib/core/datetime/native-date-formats.ts","../../src/lib/core/datetime/index.ts","../../src/lib/core/error/error-options.ts","../../src/lib/core/gestures/gesture-config.ts","../../src/lib/core/ripple/ripple-ref.ts","../../src/lib/core/ripple/ripple.ts","../../src/lib/core/ripple/index.ts","../../src/lib/core/selection/pseudo-checkbox/pseudo-checkbox.ts","../../src/lib/core/selection/index.ts","../../src/lib/core/option/optgroup.ts","../../src/lib/core/option/index.ts","../../src/lib/core/label/label-options.ts","../../src/lib/core/month-constants.ts"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport {NgModule, InjectionToken, Optional, Inject, isDevMode} from '@angular/core';\r\nimport {HammerLoader, HAMMER_LOADER} from '@angular/platform-browser';\r\nimport {BidiModule} from '@angular/cdk/bidi';\r\n\r\n\r\n/** Injection token that configures whether the Material sanity checks are enabled. */\r\nexport const MATERIAL_SANITY_CHECKS = new InjectionToken<boolean>('mat-sanity-checks', {\r\n  providedIn: 'root',\r\n  factory: MATERIAL_SANITY_CHECKS_FACTORY,\r\n});\r\n\r\n/** @docs-private */\r\nexport function MATERIAL_SANITY_CHECKS_FACTORY(): boolean {\r\n  return true;\r\n}\r\n\r\n/**\r\n * Module that captures anything that should be loaded and/or run for *all* Angular Material\r\n * components. This includes Bidi, etc.\r\n *\r\n * This module should be imported to each top-level component module (e.g., MatTabsModule).\r\n */\r\n@NgModule({\r\n  imports: [BidiModule],\r\n  exports: [BidiModule],\r\n})\r\nexport class MatCommonModule {\r\n  /** Whether we've done the global sanity checks (e.g. a theme is loaded, there is a doctype). */\r\n  private _hasDoneGlobalChecks = false;\r\n\r\n  /** Whether we've already checked for HammerJs availability. */\r\n  private _hasCheckedHammer = false;\r\n\r\n  /** Reference to the global `document` object. */\r\n  private _document = typeof document === 'object' && document ? document : null;\r\n\r\n  /** Reference to the global 'window' object. */\r\n  private _window = typeof window === 'object' && window ? window : null;\r\n\r\n  constructor(\r\n    @Optional() @Inject(MATERIAL_SANITY_CHECKS) private _sanityChecksEnabled: boolean,\r\n    @Optional() @Inject(HAMMER_LOADER) private _hammerLoader?: HammerLoader) {\r\n\r\n    if (this._areChecksEnabled() && !this._hasDoneGlobalChecks) {\r\n      this._checkDoctypeIsDefined();\r\n      this._checkThemeIsPresent();\r\n      this._hasDoneGlobalChecks = true;\r\n    }\r\n  }\r\n\r\n  /** Whether any sanity checks are enabled */\r\n  private _areChecksEnabled(): boolean {\r\n    return this._sanityChecksEnabled && isDevMode() && !this._isTestEnv();\r\n  }\r\n\r\n  /** Whether the code is running in tests. */\r\n  private _isTestEnv() {\r\n    const window = this._window as any;\r\n    return window && (window.__karma__ || window.jasmine);\r\n  }\r\n\r\n  private _checkDoctypeIsDefined(): void {\r\n    if (this._document && !this._document.doctype) {\r\n      console.warn(\r\n        'Current document does not have a doctype. This may cause ' +\r\n        'some Angular Material components not to behave as expected.'\r\n      );\r\n    }\r\n  }\r\n\r\n  private _checkThemeIsPresent(): void {\r\n    // We need to assert that the `body` is defined, because these checks run very early\r\n    // and the `body` won't be defined if the consumer put their scripts in the `head`.\r\n    if (!this._document || !this._document.body || typeof getComputedStyle !== 'function') {\r\n      return;\r\n    }\r\n\r\n    const testElement = this._document.createElement('div');\r\n\r\n    testElement.classList.add('mat-theme-loaded-marker');\r\n    this._document.body.appendChild(testElement);\r\n\r\n    const computedStyle = getComputedStyle(testElement);\r\n\r\n    // In some situations the computed style of the test element can be null. For example in\r\n    // Firefox, the computed style is null if an application is running inside of a hidden iframe.\r\n    // See: https://bugzilla.mozilla.org/show_bug.cgi?id=548397\r\n    if (computedStyle && computedStyle.display !== 'none') {\r\n      console.warn(\r\n        'Could not find Angular Material core theme. Most Material ' +\r\n        'components may not work as expected. For more info refer ' +\r\n        'to the theming guide: https://material.angular.io/guide/theming'\r\n      );\r\n    }\r\n\r\n    this._document.body.removeChild(testElement);\r\n  }\r\n\r\n  /** Checks whether HammerJS is available. */\r\n  _checkHammerIsAvailable(): void {\r\n    if (this._hasCheckedHammer || !this._window) {\r\n      return;\r\n    }\r\n\r\n    if (this._areChecksEnabled() && !(this._window as any)['Hammer'] && !this._hammerLoader) {\r\n      console.warn(\r\n        'Could not find HammerJS. Certain Angular Material components may not work correctly.');\r\n    }\r\n    this._hasCheckedHammer = true;\r\n  }\r\n}\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\r\nimport {Constructor} from './constructor';\r\n\r\n/** @docs-private */\r\nexport interface CanDisable {\r\n  /** Whether the component is disabled. */\r\n  disabled: boolean;\r\n}\r\n\r\n/** @docs-private */\r\nexport type CanDisableCtor = Constructor<CanDisable>;\r\n\r\n/** Mixin to augment a directive with a `disabled` property. */\r\nexport function mixinDisabled<T extends Constructor<{}>>(base: T): CanDisableCtor & T {\r\n  return class extends base {\r\n    private _disabled: boolean = false;\r\n\r\n    get disabled() { return this._disabled; }\r\n    set disabled(value: any) { this._disabled = coerceBooleanProperty(value); }\r\n\r\n    constructor(...args: any[]) { super(...args); }\r\n  };\r\n}\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport {Constructor} from './constructor';\r\nimport {ElementRef} from '@angular/core';\r\n\r\n/** @docs-private */\r\nexport interface CanColor {\r\n  /** Theme color palette for the component. */\r\n  color: ThemePalette;\r\n}\r\n\r\n/** @docs-private */\r\nexport type CanColorCtor = Constructor<CanColor>;\r\n\r\n/** @docs-private */\r\nexport interface HasElementRef {\r\n  _elementRef: ElementRef;\r\n}\r\n\r\n/** Possible color palette values. */\r\nexport type ThemePalette = 'primary' | 'accent' | 'warn' | undefined;\r\n\r\n/** Mixin to augment a directive with a `color` property. */\r\nexport function mixinColor<T extends Constructor<HasElementRef>>(\r\n    base: T, defaultColor?: ThemePalette): CanColorCtor & T {\r\n  return class extends base {\r\n    private _color: ThemePalette;\r\n\r\n    get color(): ThemePalette { return this._color; }\r\n    set color(value: ThemePalette) {\r\n      const colorPalette = value || defaultColor;\r\n\r\n      if (colorPalette !== this._color) {\r\n        if (this._color) {\r\n          this._elementRef.nativeElement.classList.remove(`mat-${this._color}`);\r\n        }\r\n        if (colorPalette) {\r\n          this._elementRef.nativeElement.classList.add(`mat-${colorPalette}`);\r\n        }\r\n\r\n        this._color = colorPalette;\r\n      }\r\n    }\r\n\r\n    constructor(...args: any[]) {\r\n      super(...args);\r\n\r\n      // Set the default color that can be specified from the mixin.\r\n      this.color = defaultColor;\r\n    }\r\n  };\r\n}\r\n\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\r\nimport {Constructor} from './constructor';\r\n\r\n/** @docs-private */\r\nexport interface CanDisableRipple {\r\n  /** Whether ripples are disabled. */\r\n  disableRipple: boolean;\r\n}\r\n\r\n/** @docs-private */\r\nexport type CanDisableRippleCtor = Constructor<CanDisableRipple>;\r\n\r\n/** Mixin to augment a directive with a `disableRipple` property. */\r\nexport function mixinDisableRipple<T extends Constructor<{}>>(base: T): CanDisableRippleCtor & T {\r\n  return class extends base {\r\n    private _disableRipple: boolean = false;\r\n\r\n    /** Whether the ripple effect is disabled or not. */\r\n    get disableRipple() { return this._disableRipple; }\r\n    set disableRipple(value: any) { this._disableRipple = coerceBooleanProperty(value); }\r\n\r\n    constructor(...args: any[]) { super(...args); }\r\n  };\r\n}\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport {Constructor} from './constructor';\r\nimport {CanDisable} from './disabled';\r\n\r\n\r\n/** @docs-private */\r\nexport interface HasTabIndex {\r\n  /** Tabindex of the component. */\r\n  tabIndex: number;\r\n}\r\n\r\n/** @docs-private */\r\nexport type HasTabIndexCtor = Constructor<HasTabIndex>;\r\n\r\n/** Mixin to augment a directive with a `tabIndex` property. */\r\nexport function mixinTabIndex<T extends Constructor<CanDisable>>(base: T, defaultTabIndex = 0)\r\n    : HasTabIndexCtor & T {\r\n  return class extends base {\r\n    private _tabIndex: number = defaultTabIndex;\r\n\r\n    get tabIndex(): number { return this.disabled ? -1 : this._tabIndex; }\r\n    set tabIndex(value: number) {\r\n      // If the specified tabIndex value is null or undefined, fall back to the default value.\r\n      this._tabIndex = value != null ? value : defaultTabIndex;\r\n    }\r\n\r\n    constructor(...args: any[]) {\r\n      super(...args);\r\n    }\r\n  };\r\n}\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport {FormControl, FormGroupDirective, NgControl, NgForm} from '@angular/forms';\r\nimport {Subject} from 'rxjs';\r\nimport {ErrorStateMatcher} from '../error/error-options';\r\nimport {Constructor} from './constructor';\r\n\r\n\r\n/** @docs-private */\r\nexport interface CanUpdateErrorState {\r\n  updateErrorState(): void;\r\n  readonly stateChanges: Subject<void>;\r\n  errorState: boolean;\r\n  errorStateMatcher: ErrorStateMatcher;\r\n}\r\n\r\n/** @docs-private */\r\nexport type CanUpdateErrorStateCtor = Constructor<CanUpdateErrorState>;\r\n\r\n/** @docs-private */\r\nexport interface HasErrorState {\r\n  _parentFormGroup: FormGroupDirective;\r\n  _parentForm: NgForm;\r\n  _defaultErrorStateMatcher: ErrorStateMatcher;\r\n  ngControl: NgControl;\r\n}\r\n\r\n/**\r\n * Mixin to augment a directive with updateErrorState method.\r\n * For component with `errorState` and need to update `errorState`.\r\n */\r\nexport function mixinErrorState<T extends Constructor<HasErrorState>>(base: T)\r\n: CanUpdateErrorStateCtor & T {\r\n  return class extends base {\r\n    /** Whether the component is in an error state. */\r\n    errorState: boolean = false;\r\n\r\n    /**\r\n     * Stream that emits whenever the state of the input changes such that the wrapping\r\n     * `MatFormField` needs to run change detection.\r\n     */\r\n    readonly stateChanges = new Subject<void>();\r\n\r\n    errorStateMatcher: ErrorStateMatcher;\r\n\r\n    updateErrorState() {\r\n      const oldState = this.errorState;\r\n      const parent = this._parentFormGroup || this._parentForm;\r\n      const matcher = this.errorStateMatcher || this._defaultErrorStateMatcher;\r\n      const control = this.ngControl ? this.ngControl.control as FormControl : null;\r\n      const newState = matcher.isErrorState(control, parent);\r\n\r\n      if (newState !== oldState) {\r\n        this.errorState = newState;\r\n        this.stateChanges.next();\r\n      }\r\n    }\r\n\r\n    constructor(...args: any[]) {\r\n      super(...args);\r\n    }\r\n  };\r\n}\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport {Observable, Subscriber} from 'rxjs';\r\nimport {Constructor} from './constructor';\r\n\r\n\r\n/**\r\n * Mixin that adds an initialized property to a directive which, when subscribed to, will emit a\r\n * value once markInitialized has been called, which should be done during the ngOnInit function.\r\n * If the subscription is made after it has already been marked as initialized, then it will trigger\r\n * an emit immediately.\r\n * @docs-private\r\n */\r\nexport interface HasInitialized {\r\n  /** Stream that emits once during the directive/component's ngOnInit. */\r\n  initialized: Observable<void>;\r\n\r\n  /**\r\n   * Sets the state as initialized and must be called during ngOnInit to notify subscribers that\r\n   * the directive has been initialized.\r\n   * @docs-private\r\n   */\r\n  _markInitialized: () => void;\r\n}\r\n\r\n/** @docs-private */\r\nexport type HasInitializedCtor = Constructor<HasInitialized>;\r\n\r\n/** Mixin to augment a directive with an initialized property that will emits when ngOnInit ends. */\r\nexport function mixinInitialized<T extends Constructor<{}>>(base: T):\r\n    HasInitializedCtor & T {\r\n  return class extends base {\r\n    /** Whether this directive has been marked as initialized. */\r\n    _isInitialized = false;\r\n\r\n    /**\r\n     * List of subscribers that subscribed before the directive was initialized. Should be notified\r\n     * during _markInitialized. Set to null after pending subscribers are notified, and should\r\n     * not expect to be populated after.\r\n     */\r\n    _pendingSubscribers: Subscriber<void>[] | null = [];\r\n\r\n    /**\r\n     * Observable stream that emits when the directive initializes. If already initialized, the\r\n     * subscriber is stored to be notified once _markInitialized is called.\r\n     */\r\n    initialized = new Observable<void>(subscriber => {\r\n      // If initialized, immediately notify the subscriber. Otherwise store the subscriber to notify\r\n      // when _markInitialized is called.\r\n      if (this._isInitialized) {\r\n        this._notifySubscriber(subscriber);\r\n      } else {\r\n        this._pendingSubscribers!.push(subscriber);\r\n      }\r\n    });\r\n\r\n    constructor(...args: any[]) { super(...args); }\r\n\r\n    /**\r\n     * Marks the state as initialized and notifies pending subscribers. Should be called at the end\r\n     * of ngOnInit.\r\n     * @docs-private\r\n     */\r\n    _markInitialized(): void {\r\n      if (this._isInitialized) {\r\n        throw Error('This directive has already been marked as initialized and ' +\r\n            'should not be called twice.');\r\n      }\r\n\r\n      this._isInitialized = true;\r\n\r\n      this._pendingSubscribers!.forEach(this._notifySubscriber);\r\n      this._pendingSubscribers = null;\r\n    }\r\n\r\n    /** Emits and completes the subscriber stream (should only emit once). */\r\n    _notifySubscriber(subscriber: Subscriber<void>): void {\r\n      subscriber.next();\r\n      subscriber.complete();\r\n    }\r\n  };\r\n}\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport {inject, InjectionToken, LOCALE_ID} from '@angular/core';\r\nimport {Observable, Subject} from 'rxjs';\r\n\r\n/** InjectionToken for datepicker that can be used to override default locale code. */\r\nexport const MAT_DATE_LOCALE = new InjectionToken<string>('MAT_DATE_LOCALE', {\r\n  providedIn: 'root',\r\n  factory: MAT_DATE_LOCALE_FACTORY,\r\n});\r\n\r\n/** @docs-private */\r\nexport function MAT_DATE_LOCALE_FACTORY(): string {\r\n  return inject(LOCALE_ID);\r\n}\r\n\r\n/**\r\n * No longer needed since MAT_DATE_LOCALE has been changed to a scoped injectable.\r\n * If you are importing and providing this in your code you can simply remove it.\r\n * @deprecated\r\n * @breaking-change 8.0.0\r\n */\r\nexport const MAT_DATE_LOCALE_PROVIDER = {provide: MAT_DATE_LOCALE, useExisting: LOCALE_ID};\r\n\r\n/** Adapts type `D` to be usable as a date by cdk-based components that work with dates. */\r\nexport abstract class DateAdapter<D> {\r\n  /** The locale to use for all dates. */\r\n  protected locale: any;\r\n\r\n  /** A stream that emits when the locale changes. */\r\n  get localeChanges(): Observable<void> { return this._localeChanges; }\r\n  protected _localeChanges = new Subject<void>();\r\n\r\n  /**\r\n   * Gets the year component of the given date.\r\n   * @param date The date to extract the year from.\r\n   * @returns The year component.\r\n   */\r\n  abstract getYear(date: D): number;\r\n\r\n  /**\r\n   * Gets the month component of the given date.\r\n   * @param date The date to extract the month from.\r\n   * @returns The month component (0-indexed, 0 = January).\r\n   */\r\n  abstract getMonth(date: D): number;\r\n\r\n  /**\r\n   * Gets the date of the month component of the given date.\r\n   * @param date The date to extract the date of the month from.\r\n   * @returns The month component (1-indexed, 1 = first of month).\r\n   */\r\n  abstract getDate(date: D): number;\r\n\r\n  /**\r\n   * Gets the day of the week component of the given date.\r\n   * @param date The date to extract the day of the week from.\r\n   * @returns The month component (0-indexed, 0 = Sunday).\r\n   */\r\n  abstract getDayOfWeek(date: D): number;\r\n\r\n  /**\r\n   * Gets a list of names for the months.\r\n   * @param style The naming style (e.g. long = 'January', short = 'Jan', narrow = 'J').\r\n   * @returns An ordered list of all month names, starting with January.\r\n   */\r\n  abstract getMonthNames(style: 'long' | 'short' | 'narrow'): string[];\r\n\r\n  /**\r\n   * Gets a list of names for the dates of the month.\r\n   * @returns An ordered list of all date of the month names, starting with '1'.\r\n   */\r\n  abstract getDateNames(): string[];\r\n\r\n  /**\r\n   * Gets a list of names for the days of the week.\r\n   * @param style The naming style (e.g. long = 'Sunday', short = 'Sun', narrow = 'S').\r\n   * @returns An ordered list of all weekday names, starting with Sunday.\r\n   */\r\n  abstract getDayOfWeekNames(style: 'long' | 'short' | 'narrow'): string[];\r\n\r\n  /**\r\n   * Gets the name for the year of the given date.\r\n   * @param date The date to get the year name for.\r\n   * @returns The name of the given year (e.g. '2017').\r\n   */\r\n  abstract getYearName(date: D): string;\r\n\r\n  /**\r\n   * Gets the first day of the week.\r\n   * @returns The first day of the week (0-indexed, 0 = Sunday).\r\n   */\r\n  abstract getFirstDayOfWeek(): number;\r\n\r\n  /**\r\n   * Gets the number of days in the month of the given date.\r\n   * @param date The date whose month should be checked.\r\n   * @returns The number of days in the month of the given date.\r\n   */\r\n  abstract getNumDaysInMonth(date: D): number;\r\n\r\n  /**\r\n   * Clones the given date.\r\n   * @param date The date to clone\r\n   * @returns A new date equal to the given date.\r\n   */\r\n  abstract clone(date: D): D;\r\n\r\n  /**\r\n   * Creates a date with the given year, month, and date. Does not allow over/under-flow of the\r\n   * month and date.\r\n   * @param year The full year of the date. (e.g. 89 means the year 89, not the year 1989).\r\n   * @param month The month of the date (0-indexed, 0 = January). Must be an integer 0 - 11.\r\n   * @param date The date of month of the date. Must be an integer 1 - length of the given month.\r\n   * @returns The new date, or null if invalid.\r\n   */\r\n  abstract createDate(year: number, month: number, date: number): D;\r\n\r\n  /**\r\n   * Gets today's date.\r\n   * @returns Today's date.\r\n   */\r\n  abstract today(): D;\r\n\r\n  /**\r\n   * Parses a date from a user-provided value.\r\n   * @param value The value to parse.\r\n   * @param parseFormat The expected format of the value being parsed\r\n   *     (type is implementation-dependent).\r\n   * @returns The parsed date.\r\n   */\r\n  abstract parse(value: any, parseFormat: any): D | null;\r\n\r\n  /**\r\n   * Formats a date as a string according to the given format.\r\n   * @param date The value to format.\r\n   * @param displayFormat The format to use to display the date as a string.\r\n   * @returns The formatted date string.\r\n   */\r\n  abstract format(date: D, displayFormat: any): string;\r\n\r\n  /**\r\n   * Adds the given number of years to the date. Years are counted as if flipping 12 pages on the\r\n   * calendar for each year and then finding the closest date in the new month. For example when\r\n   * adding 1 year to Feb 29, 2016, the resulting date will be Feb 28, 2017.\r\n   * @param date The date to add years to.\r\n   * @param years The number of years to add (may be negative).\r\n   * @returns A new date equal to the given one with the specified number of years added.\r\n   */\r\n  abstract addCalendarYears(date: D, years: number): D;\r\n\r\n  /**\r\n   * Adds the given number of months to the date. Months are counted as if flipping a page on the\r\n   * calendar for each month and then finding the closest date in the new month. For example when\r\n   * adding 1 month to Jan 31, 2017, the resulting date will be Feb 28, 2017.\r\n   * @param date The date to add months to.\r\n   * @param months The number of months to add (may be negative).\r\n   * @returns A new date equal to the given one with the specified number of months added.\r\n   */\r\n  abstract addCalendarMonths(date: D, months: number): D;\r\n\r\n  /**\r\n   * Adds the given number of days to the date. Days are counted as if moving one cell on the\r\n   * calendar for each day.\r\n   * @param date The date to add days to.\r\n   * @param days The number of days to add (may be negative).\r\n   * @returns A new date equal to the given one with the specified number of days added.\r\n   */\r\n  abstract addCalendarDays(date: D, days: number): D;\r\n\r\n  /**\r\n   * Gets the RFC 3339 compatible string (https://tools.ietf.org/html/rfc3339) for the given date.\r\n   * This method is used to generate date strings that are compatible with native HTML attributes\r\n   * such as the `min` or `max` attribute of an `<input>`.\r\n   * @param date The date to get the ISO date string for.\r\n   * @returns The ISO date string date string.\r\n   */\r\n  abstract toIso8601(date: D): string;\r\n\r\n  /**\r\n   * Checks whether the given object is considered a date instance by this DateAdapter.\r\n   * @param obj The object to check\r\n   * @returns Whether the object is a date instance.\r\n   */\r\n  abstract isDateInstance(obj: any): boolean;\r\n\r\n  /**\r\n   * Checks whether the given date is valid.\r\n   * @param date The date to check.\r\n   * @returns Whether the date is valid.\r\n   */\r\n  abstract isValid(date: D): boolean;\r\n\r\n  /**\r\n   * Gets date instance that is not valid.\r\n   * @returns An invalid date.\r\n   */\r\n  abstract invalid(): D;\r\n\r\n  /**\r\n   * Attempts to deserialize a value to a valid date object. This is different from parsing in that\r\n   * deserialize should only accept non-ambiguous, locale-independent formats (e.g. a ISO 8601\r\n   * string). The default implementation does not allow any deserialization, it simply checks that\r\n   * the given value is already a valid date object or null. The `<mat-datepicker>` will call this\r\n   * method on all of it's `@Input()` properties that accept dates. It is therefore possible to\r\n   * support passing values from your backend directly to these properties by overriding this method\r\n   * to also deserialize the format used by your backend.\r\n   * @param value The value to be deserialized into a date object.\r\n   * @returns The deserialized date object, either a valid date, null if the value can be\r\n   *     deserialized into a null date (e.g. the empty string), or an invalid date.\r\n   */\r\n  deserialize(value: any): D | null {\r\n    if (value == null || this.isDateInstance(value) && this.isValid(value)) {\r\n      return value;\r\n    }\r\n    return this.invalid();\r\n  }\r\n\r\n  /**\r\n   * Sets the locale used for all dates.\r\n   * @param locale The new locale.\r\n   */\r\n  setLocale(locale: any) {\r\n    this.locale = locale;\r\n    this._localeChanges.next();\r\n  }\r\n\r\n  /**\r\n   * Compares two dates.\r\n   * @param first The first date to compare.\r\n   * @param second The second date to compare.\r\n   * @returns 0 if the dates are equal, a number less than 0 if the first date is earlier,\r\n   *     a number greater than 0 if the first date is later.\r\n   */\r\n  compareDate(first: D, second: D): number {\r\n    return this.getYear(first) - this.getYear(second) ||\r\n        this.getMonth(first) - this.getMonth(second) ||\r\n        this.getDate(first) - this.getDate(second);\r\n  }\r\n\r\n  /**\r\n   * Checks if two dates are equal.\r\n   * @param first The first date to check.\r\n   * @param second The second date to check.\r\n   * @returns Whether the two dates are equal.\r\n   *     Null dates are considered equal to other null dates.\r\n   */\r\n  sameDate(first: D | null, second: D | null): boolean {\r\n    if (first && second) {\r\n      let firstValid = this.isValid(first);\r\n      let secondValid = this.isValid(second);\r\n      if (firstValid && secondValid) {\r\n        return !this.compareDate(first, second);\r\n      }\r\n      return firstValid == secondValid;\r\n    }\r\n    return first == second;\r\n  }\r\n\r\n  /**\r\n   * Clamp the given date between min and max dates.\r\n   * @param date The date to clamp.\r\n   * @param min The minimum value to allow. If null or omitted no min is enforced.\r\n   * @param max The maximum value to allow. If null or omitted no max is enforced.\r\n   * @returns `min` if `date` is less than `min`, `max` if date is greater than `max`,\r\n   *     otherwise `date`.\r\n   */\r\n  clampDate(date: D, min?: D | null, max?: D | null): D {\r\n    if (min && this.compareDate(date, min) < 0) {\r\n      return min;\r\n    }\r\n    if (max && this.compareDate(date, max) > 0) {\r\n      return max;\r\n    }\r\n    return date;\r\n  }\r\n}\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport {Platform} from '@angular/cdk/platform';\r\nimport {Inject, Injectable, Optional} from '@angular/core';\r\nimport {DateAdapter, MAT_DATE_LOCALE} from './date-adapter';\r\n\r\n// TODO(mmalerba): Remove when we no longer support safari 9.\r\n/** Whether the browser supports the Intl API. */\r\nlet SUPPORTS_INTL_API: boolean;\r\n\r\n// We need a try/catch around the reference to `Intl`, because accessing it in some cases can\r\n// cause IE to throw. These cases are tied to particular versions of Windows and can happen if\r\n// the consumer is providing a polyfilled `Map`. See:\r\n// https://github.com/Microsoft/ChakraCore/issues/3189\r\n// https://github.com/angular/material2/issues/15687\r\ntry {\r\n  SUPPORTS_INTL_API = typeof Intl != 'undefined';\r\n} catch {\r\n  SUPPORTS_INTL_API = false;\r\n}\r\n\r\n/** The default month names to use if Intl API is not available. */\r\nconst DEFAULT_MONTH_NAMES = {\r\n  'long': [\r\n    'January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September',\r\n    'October', 'November', 'December'\r\n  ],\r\n  'short': ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\r\n  'narrow': ['J', 'F', 'M', 'A', 'M', 'J', 'J', 'A', 'S', 'O', 'N', 'D']\r\n};\r\n\r\n\r\n/** The default date names to use if Intl API is not available. */\r\nconst DEFAULT_DATE_NAMES = range(31, i => String(i + 1));\r\n\r\n\r\n/** The default day of the week names to use if Intl API is not available. */\r\nconst DEFAULT_DAY_OF_WEEK_NAMES = {\r\n  'long': ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'],\r\n  'short': ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\r\n  'narrow': ['S', 'M', 'T', 'W', 'T', 'F', 'S']\r\n};\r\n\r\n\r\n/**\r\n * Matches strings that have the form of a valid RFC 3339 string\r\n * (https://tools.ietf.org/html/rfc3339). Note that the string may not actually be a valid date\r\n * because the regex will match strings an with out of bounds month, date, etc.\r\n */\r\nconst ISO_8601_REGEX =\r\n    /^\\d{4}-\\d{2}-\\d{2}(?:T\\d{2}:\\d{2}:\\d{2}(?:\\.\\d+)?(?:Z|(?:(?:\\+|-)\\d{2}:\\d{2}))?)?$/;\r\n\r\n\r\n/** Creates an array and fills it with values. */\r\nfunction range<T>(length: number, valueFunction: (index: number) => T): T[] {\r\n  const valuesArray = Array(length);\r\n  for (let i = 0; i < length; i++) {\r\n    valuesArray[i] = valueFunction(i);\r\n  }\r\n  return valuesArray;\r\n}\r\n\r\n/** Adapts the native JS Date for use with cdk-based components that work with dates. */\r\n@Injectable()\r\nexport class NativeDateAdapter extends DateAdapter<Date> {\r\n  /** Whether to clamp the date between 1 and 9999 to avoid IE and Edge errors. */\r\n  private readonly _clampDate: boolean;\r\n\r\n  /**\r\n   * Whether to use `timeZone: 'utc'` with `Intl.DateTimeFormat` when formatting dates.\r\n   * Without this `Intl.DateTimeFormat` sometimes chooses the wrong timeZone, which can throw off\r\n   * the result. (e.g. in the en-US locale `new Date(1800, 7, 14).toLocaleDateString()`\r\n   * will produce `'8/13/1800'`.\r\n   *\r\n   * TODO(mmalerba): drop this variable. It's not being used in the code right now. We're now\r\n   * getting the string representation of a Date object from it's utc representation. We're keeping\r\n   * it here for sometime, just for precaution, in case we decide to revert some of these changes\r\n   * though.\r\n   */\r\n  useUtcForDisplay: boolean = true;\r\n\r\n  constructor(@Optional() @Inject(MAT_DATE_LOCALE) matDateLocale: string, platform: Platform) {\r\n    super();\r\n    super.setLocale(matDateLocale);\r\n\r\n    // IE does its own time zone correction, so we disable this on IE.\r\n    this.useUtcForDisplay = !platform.TRIDENT;\r\n    this._clampDate = platform.TRIDENT || platform.EDGE;\r\n  }\r\n\r\n  getYear(date: Date): number {\r\n    return date.getFullYear();\r\n  }\r\n\r\n  getMonth(date: Date): number {\r\n    return date.getMonth();\r\n  }\r\n\r\n  getDate(date: Date): number {\r\n    return date.getDate();\r\n  }\r\n\r\n  getDayOfWeek(date: Date): number {\r\n    return date.getDay();\r\n  }\r\n\r\n  getMonthNames(style: 'long' | 'short' | 'narrow'): string[] {\r\n    if (SUPPORTS_INTL_API) {\r\n      const dtf = new Intl.DateTimeFormat(this.locale, {month: style, timeZone: 'utc'});\r\n      return range(12, i =>\r\n          this._stripDirectionalityCharacters(this._format(dtf, new Date(2017, i, 1))));\r\n    }\r\n    return DEFAULT_MONTH_NAMES[style];\r\n  }\r\n\r\n  getDateNames(): string[] {\r\n    if (SUPPORTS_INTL_API) {\r\n      const dtf = new Intl.DateTimeFormat(this.locale, {day: 'numeric', timeZone: 'utc'});\r\n      return range(31, i => this._stripDirectionalityCharacters(\r\n          this._format(dtf, new Date(2017, 0, i + 1))));\r\n    }\r\n    return DEFAULT_DATE_NAMES;\r\n  }\r\n\r\n  getDayOfWeekNames(style: 'long' | 'short' | 'narrow'): string[] {\r\n    if (SUPPORTS_INTL_API) {\r\n      const dtf = new Intl.DateTimeFormat(this.locale, {weekday: style, timeZone: 'utc'});\r\n      return range(7, i => this._stripDirectionalityCharacters(\r\n          this._format(dtf, new Date(2017, 0, i + 1))));\r\n    }\r\n    return DEFAULT_DAY_OF_WEEK_NAMES[style];\r\n  }\r\n\r\n  getYearName(date: Date): string {\r\n    if (SUPPORTS_INTL_API) {\r\n      const dtf = new Intl.DateTimeFormat(this.locale, {year: 'numeric', timeZone: 'utc'});\r\n      return this._stripDirectionalityCharacters(this._format(dtf, date));\r\n    }\r\n    return String(this.getYear(date));\r\n  }\r\n\r\n  getFirstDayOfWeek(): number {\r\n    // We can't tell using native JS Date what the first day of the week is, we default to Sunday.\r\n    return 0;\r\n  }\r\n\r\n  getNumDaysInMonth(date: Date): number {\r\n    return this.getDate(this._createDateWithOverflow(\r\n        this.getYear(date), this.getMonth(date) + 1, 0));\r\n  }\r\n\r\n  clone(date: Date): Date {\r\n    return new Date(date.getTime());\r\n  }\r\n\r\n  createDate(year: number, month: number, date: number): Date {\r\n    // Check for invalid month and date (except upper bound on date which we have to check after\r\n    // creating the Date).\r\n    if (month < 0 || month > 11) {\r\n      throw Error(`Invalid month index \"${month}\". Month index has to be between 0 and 11.`);\r\n    }\r\n\r\n    if (date < 1) {\r\n      throw Error(`Invalid date \"${date}\". Date has to be greater than 0.`);\r\n    }\r\n\r\n    let result = this._createDateWithOverflow(year, month, date);\r\n    // Check that the date wasn't above the upper bound for the month, causing the month to overflow\r\n    if (result.getMonth() != month) {\r\n      throw Error(`Invalid date \"${date}\" for month with index \"${month}\".`);\r\n    }\r\n\r\n    return result;\r\n  }\r\n\r\n  today(): Date {\r\n    return new Date();\r\n  }\r\n\r\n  parse(value: any): Date | null {\r\n    // We have no way using the native JS Date to set the parse format or locale, so we ignore these\r\n    // parameters.\r\n    if (typeof value == 'number') {\r\n      return new Date(value);\r\n    }\r\n    return value ? new Date(Date.parse(value)) : null;\r\n  }\r\n\r\n  format(date: Date, displayFormat: Object): string {\r\n    if (!this.isValid(date)) {\r\n      throw Error('NativeDateAdapter: Cannot format invalid date.');\r\n    }\r\n\r\n    if (SUPPORTS_INTL_API) {\r\n      // On IE and Edge the i18n API will throw a hard error that can crash the entire app\r\n      // if we attempt to format a date whose year is less than 1 or greater than 9999.\r\n      if (this._clampDate && (date.getFullYear() < 1 || date.getFullYear() > 9999)) {\r\n        date = this.clone(date);\r\n        date.setFullYear(Math.max(1, Math.min(9999, date.getFullYear())));\r\n      }\r\n\r\n      displayFormat = {...displayFormat, timeZone: 'utc'};\r\n\r\n      const dtf = new Intl.DateTimeFormat(this.locale, displayFormat);\r\n      return this._stripDirectionalityCharacters(this._format(dtf, date));\r\n    }\r\n    return this._stripDirectionalityCharacters(date.toDateString());\r\n  }\r\n\r\n  addCalendarYears(date: Date, years: number): Date {\r\n    return this.addCalendarMonths(date, years * 12);\r\n  }\r\n\r\n  addCalendarMonths(date: Date, months: number): Date {\r\n    let newDate = this._createDateWithOverflow(\r\n        this.getYear(date), this.getMonth(date) + months, this.getDate(date));\r\n\r\n    // It's possible to wind up in the wrong month if the original month has more days than the new\r\n    // month. In this case we want to go to the last day of the desired month.\r\n    // Note: the additional + 12 % 12 ensures we end up with a positive number, since JS % doesn't\r\n    // guarantee this.\r\n    if (this.getMonth(newDate) != ((this.getMonth(date) + months) % 12 + 12) % 12) {\r\n      newDate = this._createDateWithOverflow(this.getYear(newDate), this.getMonth(newDate), 0);\r\n    }\r\n\r\n    return newDate;\r\n  }\r\n\r\n  addCalendarDays(date: Date, days: number): Date {\r\n    return this._createDateWithOverflow(\r\n        this.getYear(date), this.getMonth(date), this.getDate(date) + days);\r\n  }\r\n\r\n  toIso8601(date: Date): string {\r\n    return [\r\n      date.getUTCFullYear(),\r\n      this._2digit(date.getUTCMonth() + 1),\r\n      this._2digit(date.getUTCDate())\r\n    ].join('-');\r\n  }\r\n\r\n  /**\r\n   * Returns the given value if given a valid Date or null. Deserializes valid ISO 8601 strings\r\n   * (https://www.ietf.org/rfc/rfc3339.txt) into valid Dates and empty string into null. Returns an\r\n   * invalid date for all other values.\r\n   */\r\n  deserialize(value: any): Date | null {\r\n    if (typeof value === 'string') {\r\n      if (!value) {\r\n        return null;\r\n      }\r\n      // The `Date` constructor accepts formats other than ISO 8601, so we need to make sure the\r\n      // string is the right format first.\r\n      if (ISO_8601_REGEX.test(value)) {\r\n        let date = new Date(value);\r\n        if (this.isValid(date)) {\r\n          return date;\r\n        }\r\n      }\r\n    }\r\n    return super.deserialize(value);\r\n  }\r\n\r\n  isDateInstance(obj: any) {\r\n    return obj instanceof Date;\r\n  }\r\n\r\n  isValid(date: Date) {\r\n    return !isNaN(date.getTime());\r\n  }\r\n\r\n  invalid(): Date {\r\n    return new Date(NaN);\r\n  }\r\n\r\n  /** Creates a date but allows the month and date to overflow. */\r\n  private _createDateWithOverflow(year: number, month: number, date: number) {\r\n    const result = new Date(year, month, date);\r\n\r\n    // We need to correct for the fact that JS native Date treats years in range [0, 99] as\r\n    // abbreviations for 19xx.\r\n    if (year >= 0 && year < 100) {\r\n      result.setFullYear(this.getYear(result) - 1900);\r\n    }\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Pads a number to make it two digits.\r\n   * @param n The number to pad.\r\n   * @returns The padded number.\r\n   */\r\n  private _2digit(n: number) {\r\n    return ('00' + n).slice(-2);\r\n  }\r\n\r\n  /**\r\n   * Strip out unicode LTR and RTL characters. Edge and IE insert these into formatted dates while\r\n   * other browsers do not. We remove them to make output consistent and because they interfere with\r\n   * date parsing.\r\n   * @param str The string to strip direction characters from.\r\n   * @returns The stripped string.\r\n   */\r\n  private _stripDirectionalityCharacters(str: string) {\r\n    return str.replace(/[\\u200e\\u200f]/g, '');\r\n  }\r\n\r\n  /**\r\n   * When converting Date object to string, javascript built-in functions may return wrong\r\n   * results because it applies its internal DST rules. The DST rules around the world change\r\n   * very frequently, and the current valid rule is not always valid in previous years though.\r\n   * We work around this problem building a new Date object which has its internal UTC\r\n   * representation with the local date and time.\r\n   * @param dtf Intl.DateTimeFormat object, containg the desired string format. It must have\r\n   *    timeZone set to 'utc' to work fine.\r\n   * @param date Date from which we want to get the string representation according to dtf\r\n   * @returns A Date object with its UTC representation based on the passed in date info\r\n   */\r\n  private _format(dtf: Intl.DateTimeFormat, date: Date) {\r\n    const d = new Date(Date.UTC(\r\n        date.getFullYear(), date.getMonth(), date.getDate(), date.getHours(),\r\n        date.getMinutes(), date.getSeconds(), date.getMilliseconds()));\r\n    return dtf.format(d);\r\n  }\r\n}\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport {\r\n  NgModule,\r\n  Directive,\r\n  ElementRef,\r\n  QueryList,\r\n} from '@angular/core';\r\nimport {startWith} from 'rxjs/operators';\r\nimport {MatCommonModule} from '../common-behaviors/common-module';\r\n\r\n\r\n/**\r\n * Shared directive to count lines inside a text area, such as a list item.\r\n * Line elements can be extracted with a @ContentChildren(MatLine) query, then\r\n * counted by checking the query list's length.\r\n */\r\n@Directive({\r\n  selector: '[mat-line], [matLine]',\r\n  host: {'class': 'mat-line'}\r\n})\r\nexport class MatLine {}\r\n\r\n/**\r\n * Helper that takes a query list of lines and sets the correct class on the host.\r\n * @docs-private\r\n */\r\nexport function setLines(lines: QueryList<MatLine>, element: ElementRef<HTMLElement>) {\r\n  // Note: doesn't need to unsubscribe, because `changes`\r\n  // gets completed by Angular when the view is destroyed.\r\n  lines.changes.pipe(startWith<QueryList<MatLine>>(lines)).subscribe(({length}) => {\r\n    setClass(element, 'mat-2-line', false);\r\n    setClass(element, 'mat-3-line', false);\r\n    setClass(element, 'mat-multi-line', false);\r\n\r\n    if (length === 2 || length === 3) {\r\n      setClass(element, `mat-${length}-line`, true);\r\n    } else if (length > 3) {\r\n      setClass(element, `mat-multi-line`, true);\r\n    }\r\n  });\r\n}\r\n\r\n/** Adds or removes a class from an element. */\r\nfunction setClass(element: ElementRef<HTMLElement>, className: string, isAdd: boolean): void {\r\n  const classList = element.nativeElement.classList;\r\n  isAdd ? classList.add(className) : classList.remove(className);\r\n}\r\n\r\n/**\r\n * Helper that takes a query list of lines and sets the correct class on the host.\r\n * @docs-private\r\n * @deprecated Use `setLines` instead.\r\n * @breaking-change 8.0.0\r\n */\r\nexport class MatLineSetter {\r\n  constructor(lines: QueryList<MatLine>, element: ElementRef<HTMLElement>) {\r\n    setLines(lines, element);\r\n  }\r\n}\r\n\r\n@NgModule({\r\n  imports: [MatCommonModule],\r\n  exports: [MatLine, MatCommonModule],\r\n  declarations: [MatLine],\r\n})\r\nexport class MatLineModule { }\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\nimport {ElementRef, NgZone} from '@angular/core';\r\nimport {Platform, normalizePassiveListenerOptions} from '@angular/cdk/platform';\r\nimport {isFakeMousedownFromScreenReader} from '@angular/cdk/a11y';\r\nimport {RippleRef, RippleState} from './ripple-ref';\r\n\r\nexport type RippleConfig = {\r\n  color?: string;\r\n  centered?: boolean;\r\n  radius?: number;\r\n  persistent?: boolean;\r\n  animation?: RippleAnimationConfig;\r\n  terminateOnPointerUp?: boolean;\r\n};\r\n\r\n/**\r\n * Interface that describes the configuration for the animation of a ripple.\r\n * There are two animation phases with different durations for the ripples.\r\n */\r\nexport interface RippleAnimationConfig {\r\n  /** Duration in milliseconds for the enter animation (expansion from point of contact). */\r\n  enterDuration?: number;\r\n  /** Duration in milliseconds for the exit animation (fade-out). */\r\n  exitDuration?: number;\r\n}\r\n\r\n/**\r\n * Interface that describes the target for launching ripples.\r\n * It defines the ripple configuration and disabled state for interaction ripples.\r\n * @docs-private\r\n */\r\nexport interface RippleTarget {\r\n  /** Configuration for ripples that are launched on pointer down. */\r\n  rippleConfig: RippleConfig;\r\n  /** Whether ripples on pointer down should be disabled. */\r\n  rippleDisabled: boolean;\r\n}\r\n\r\n/**\r\n * Default ripple animation configuration for ripples without an explicit\r\n * animation config specified.\r\n */\r\nexport const defaultRippleAnimationConfig = {\r\n  enterDuration: 450,\r\n  exitDuration: 400\r\n};\r\n\r\n/**\r\n * Timeout for ignoring mouse events. Mouse events will be temporary ignored after touch\r\n * events to avoid synthetic mouse events.\r\n */\r\nconst ignoreMouseEventsTimeout = 800;\r\n\r\n/** Options that apply to all the event listeners that are bound by the ripple renderer. */\r\nconst passiveEventOptions = normalizePassiveListenerOptions({passive: true});\r\n\r\n/**\r\n * Helper service that performs DOM manipulations. Not intended to be used outside this module.\r\n * The constructor takes a reference to the ripple directive's host element and a map of DOM\r\n * event handlers to be installed on the element that triggers ripple animations.\r\n * This will eventually become a custom renderer once Angular support exists.\r\n * @docs-private\r\n */\r\nexport class RippleRenderer {\r\n  /** Element where the ripples are being added to. */\r\n  private _containerElement: HTMLElement;\r\n\r\n  /** Element which triggers the ripple elements on mouse events. */\r\n  private _triggerElement: HTMLElement | null;\r\n\r\n  /** Whether the pointer is currently down or not. */\r\n  private _isPointerDown = false;\r\n\r\n  /** Events to be registered on the trigger element. */\r\n  private _triggerEvents = new Map<string, any>();\r\n\r\n  /** Set of currently active ripple references. */\r\n  private _activeRipples = new Set<RippleRef>();\r\n\r\n  /** Latest non-persistent ripple that was triggered. */\r\n  private _mostRecentTransientRipple: RippleRef | null;\r\n\r\n  /** Time in milliseconds when the last touchstart event happened. */\r\n  private _lastTouchStartEvent: number;\r\n\r\n  /**\r\n   * Cached dimensions of the ripple container. Set when the first\r\n   * ripple is shown and cleared once no more ripples are visible.\r\n   */\r\n  private _containerRect: ClientRect | null;\r\n\r\n  constructor(private _target: RippleTarget,\r\n              private _ngZone: NgZone,\r\n              elementRef: ElementRef<HTMLElement>,\r\n              platform: Platform) {\r\n\r\n    // Only do anything if we're on the browser.\r\n    if (platform.isBrowser) {\r\n      this._containerElement = elementRef.nativeElement;\r\n\r\n      // Specify events which need to be registered on the trigger.\r\n      this._triggerEvents\r\n        .set('mousedown', this.onMousedown)\r\n        .set('mouseup', this.onPointerUp)\r\n        .set('mouseleave', this.onPointerUp)\r\n\r\n        .set('touchstart', this.onTouchStart)\r\n        .set('touchend', this.onPointerUp)\r\n        .set('touchcancel', this.onPointerUp);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Fades in a ripple at the given coordinates.\r\n   * @param x Coordinate within the element, along the X axis at which to start the ripple.\r\n   * @param y Coordinate within the element, along the Y axis at which to start the ripple.\r\n   * @param config Extra ripple options.\r\n   */\r\n  fadeInRipple(x: number, y: number, config: RippleConfig = {}): RippleRef {\r\n    const containerRect = this._containerRect =\r\n                          this._containerRect || this._containerElement.getBoundingClientRect();\r\n    const animationConfig = {...defaultRippleAnimationConfig, ...config.animation};\r\n\r\n    if (config.centered) {\r\n      x = containerRect.left + containerRect.width / 2;\r\n      y = containerRect.top + containerRect.height / 2;\r\n    }\r\n\r\n    const radius = config.radius || distanceToFurthestCorner(x, y, containerRect);\r\n    const offsetX = x - containerRect.left;\r\n    const offsetY = y - containerRect.top;\r\n    const duration = animationConfig.enterDuration;\r\n\r\n    const ripple = document.createElement('div');\r\n    ripple.classList.add('mat-ripple-element');\r\n\r\n    ripple.style.left = `${offsetX - radius}px`;\r\n    ripple.style.top = `${offsetY - radius}px`;\r\n    ripple.style.height = `${radius * 2}px`;\r\n    ripple.style.width = `${radius * 2}px`;\r\n\r\n    // If the color is not set, the default CSS color will be used.\r\n    ripple.style.backgroundColor = config.color || null;\r\n    ripple.style.transitionDuration = `${duration}ms`;\r\n\r\n    this._containerElement.appendChild(ripple);\r\n\r\n    // By default the browser does not recalculate the styles of dynamically created\r\n    // ripple elements. This is critical because then the `scale` would not animate properly.\r\n    enforceStyleRecalculation(ripple);\r\n\r\n    ripple.style.transform = 'scale(1)';\r\n\r\n    // Exposed reference to the ripple that will be returned.\r\n    const rippleRef = new RippleRef(this, ripple, config);\r\n\r\n    rippleRef.state = RippleState.FADING_IN;\r\n\r\n    // Add the ripple reference to the list of all active ripples.\r\n    this._activeRipples.add(rippleRef);\r\n\r\n    if (!config.persistent) {\r\n      this._mostRecentTransientRipple = rippleRef;\r\n    }\r\n\r\n    // Wait for the ripple element to be completely faded in.\r\n    // Once it's faded in, the ripple can be hidden immediately if the mouse is released.\r\n    this.runTimeoutOutsideZone(() => {\r\n      const isMostRecentTransientRipple = rippleRef === this._mostRecentTransientRipple;\r\n\r\n      rippleRef.state = RippleState.VISIBLE;\r\n\r\n      // When the timer runs out while the user has kept their pointer down, we want to\r\n      // keep only the persistent ripples and the latest transient ripple. We do this,\r\n      // because we don't want stacked transient ripples to appear after their enter\r\n      // animation has finished.\r\n      if (!config.persistent && (!isMostRecentTransientRipple || !this._isPointerDown)) {\r\n        rippleRef.fadeOut();\r\n      }\r\n    }, duration);\r\n\r\n    return rippleRef;\r\n  }\r\n\r\n  /** Fades out a ripple reference. */\r\n  fadeOutRipple(rippleRef: RippleRef) {\r\n    const wasActive = this._activeRipples.delete(rippleRef);\r\n\r\n    if (rippleRef === this._mostRecentTransientRipple) {\r\n      this._mostRecentTransientRipple = null;\r\n    }\r\n\r\n    // Clear out the cached bounding rect if we have no more ripples.\r\n    if (!this._activeRipples.size) {\r\n      this._containerRect = null;\r\n    }\r\n\r\n    // For ripples that are not active anymore, don't re-run the fade-out animation.\r\n    if (!wasActive) {\r\n      return;\r\n    }\r\n\r\n    const rippleEl = rippleRef.element;\r\n    const animationConfig = {...defaultRippleAnimationConfig, ...rippleRef.config.animation};\r\n\r\n    rippleEl.style.transitionDuration = `${animationConfig.exitDuration}ms`;\r\n    rippleEl.style.opacity = '0';\r\n    rippleRef.state = RippleState.FADING_OUT;\r\n\r\n    // Once the ripple faded out, the ripple can be safely removed from the DOM.\r\n    this.runTimeoutOutsideZone(() => {\r\n      rippleRef.state = RippleState.HIDDEN;\r\n      rippleEl.parentNode!.removeChild(rippleEl);\r\n    }, animationConfig.exitDuration);\r\n  }\r\n\r\n  /** Fades out all currently active ripples. */\r\n  fadeOutAll() {\r\n    this._activeRipples.forEach(ripple => ripple.fadeOut());\r\n  }\r\n\r\n  /** Sets up the trigger event listeners */\r\n  setupTriggerEvents(element: HTMLElement) {\r\n    if (!element || element === this._triggerElement) {\r\n      return;\r\n    }\r\n\r\n    // Remove all previously registered event listeners from the trigger element.\r\n    this._removeTriggerEvents();\r\n\r\n    this._ngZone.runOutsideAngular(() => {\r\n      this._triggerEvents.forEach((fn, type) => {\r\n        element.addEventListener(type, fn, passiveEventOptions);\r\n      });\r\n    });\r\n\r\n    this._triggerElement = element;\r\n  }\r\n\r\n  /** Function being called whenever the trigger is being pressed using mouse. */\r\n  private onMousedown = (event: MouseEvent) => {\r\n    // Screen readers will fire fake mouse events for space/enter. Skip launching a\r\n    // ripple in this case for consistency with the non-screen-reader experience.\r\n    const isFakeMousedown = isFakeMousedownFromScreenReader(event);\r\n    const isSyntheticEvent = this._lastTouchStartEvent &&\r\n        Date.now() < this._lastTouchStartEvent + ignoreMouseEventsTimeout;\r\n\r\n    if (!this._target.rippleDisabled && !isFakeMousedown && !isSyntheticEvent) {\r\n      this._isPointerDown = true;\r\n      this.fadeInRipple(event.clientX, event.clientY, this._target.rippleConfig);\r\n    }\r\n  }\r\n\r\n  /** Function being called whenever the trigger is being pressed using touch. */\r\n  private onTouchStart = (event: TouchEvent) => {\r\n    if (!this._target.rippleDisabled) {\r\n      // Some browsers fire mouse events after a `touchstart` event. Those synthetic mouse\r\n      // events will launch a second ripple if we don't ignore mouse events for a specific\r\n      // time after a touchstart event.\r\n      this._lastTouchStartEvent = Date.now();\r\n      this._isPointerDown = true;\r\n\r\n      // Use `changedTouches` so we skip any touches where the user put\r\n      // their finger down, but used another finger to tap the element again.\r\n      const touches = event.changedTouches;\r\n\r\n      for (let i = 0; i < touches.length; i++) {\r\n        this.fadeInRipple(touches[i].clientX, touches[i].clientY, this._target.rippleConfig);\r\n      }\r\n    }\r\n  }\r\n\r\n  /** Function being called whenever the trigger is being released. */\r\n  private onPointerUp = () => {\r\n    if (!this._isPointerDown) {\r\n      return;\r\n    }\r\n\r\n    this._isPointerDown = false;\r\n\r\n    // Fade-out all ripples that are visible and not persistent.\r\n    this._activeRipples.forEach(ripple => {\r\n      // By default, only ripples that are completely visible will fade out on pointer release.\r\n      // If the `terminateOnPointerUp` option is set, ripples that still fade in will also fade out.\r\n      const isVisible = ripple.state === RippleState.VISIBLE ||\r\n        ripple.config.terminateOnPointerUp && ripple.state === RippleState.FADING_IN;\r\n\r\n      if (!ripple.config.persistent && isVisible) {\r\n        ripple.fadeOut();\r\n      }\r\n    });\r\n  }\r\n\r\n  /** Runs a timeout outside of the Angular zone to avoid triggering the change detection. */\r\n  private runTimeoutOutsideZone(fn: Function, delay = 0) {\r\n    this._ngZone.runOutsideAngular(() => setTimeout(fn, delay));\r\n  }\r\n\r\n  /** Removes previously registered event listeners from the trigger element. */\r\n  _removeTriggerEvents() {\r\n    if (this._triggerElement) {\r\n      this._triggerEvents.forEach((fn, type) => {\r\n        this._triggerElement!.removeEventListener(type, fn, passiveEventOptions);\r\n      });\r\n    }\r\n  }\r\n}\r\n\r\n/** Enforces a style recalculation of a DOM element by computing its styles. */\r\nfunction enforceStyleRecalculation(element: HTMLElement) {\r\n  // Enforce a style recalculation by calling `getComputedStyle` and accessing any property.\r\n  // Calling `getPropertyValue` is important to let optimizers know that this is not a noop.\r\n  // See: https://gist.github.com/paulirish/5d52fb081b3570c81e3a\r\n  window.getComputedStyle(element).getPropertyValue('opacity');\r\n}\r\n\r\n/**\r\n * Returns the distance from the point (x, y) to the furthest corner of a rectangle.\r\n */\r\nfunction distanceToFurthestCorner(x: number, y: number, rect: ClientRect) {\r\n  const distX = Math.max(Math.abs(x - rect.left), Math.abs(x - rect.right));\r\n  const distY = Math.max(Math.abs(y - rect.top), Math.abs(y - rect.bottom));\r\n  return Math.sqrt(distX * distX + distY * distY);\r\n}\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\r\nimport {ENTER, SPACE, hasModifierKey} from '@angular/cdk/keycodes';\r\nimport {\r\n  AfterViewChecked,\r\n  ChangeDetectionStrategy,\r\n  ChangeDetectorRef,\r\n  Component,\r\n  ElementRef,\r\n  EventEmitter,\r\n  Inject,\r\n  InjectionToken,\r\n  Input,\r\n  OnDestroy,\r\n  Optional,\r\n  Output,\r\n  QueryList,\r\n  ViewEncapsulation,\r\n} from '@angular/core';\r\nimport {Subject} from 'rxjs';\r\nimport {MatOptgroup} from './optgroup';\r\n\r\n/**\r\n * Option IDs need to be unique across components, so this counter exists outside of\r\n * the component definition.\r\n */\r\nlet _uniqueIdCounter = 0;\r\n\r\n/** Event object emitted by MatOption when selected or deselected. */\r\nexport class MatOptionSelectionChange {\r\n  constructor(\r\n    /** Reference to the option that emitted the event. */\r\n    public source: MatOption,\r\n    /** Whether the change in the option's value was a result of a user action. */\r\n    public isUserInput = false) { }\r\n}\r\n\r\n/**\r\n * Describes a parent component that manages a list of options.\r\n * Contains properties that the options can inherit.\r\n * @docs-private\r\n */\r\nexport interface MatOptionParentComponent {\r\n  disableRipple?: boolean;\r\n  multiple?: boolean;\r\n}\r\n\r\n/**\r\n * Injection token used to provide the parent component to options.\r\n */\r\nexport const MAT_OPTION_PARENT_COMPONENT =\r\n    new InjectionToken<MatOptionParentComponent>('MAT_OPTION_PARENT_COMPONENT');\r\n\r\n/**\r\n * Single option inside of a `<mat-select>` element.\r\n */\r\n@Component({\r\n  moduleId: module.id,\r\n  selector: 'mat-option',\r\n  exportAs: 'matOption',\r\n  host: {\r\n    'role': 'option',\r\n    '[attr.tabindex]': '_getTabIndex()',\r\n    '[class.mat-selected]': 'selected',\r\n    '[class.mat-option-multiple]': 'multiple',\r\n    '[class.mat-active]': 'active',\r\n    '[id]': 'id',\r\n    '[attr.aria-selected]': '_getAriaSelected()',\r\n    '[attr.aria-disabled]': 'disabled.toString()',\r\n    '[class.mat-option-disabled]': 'disabled',\r\n    '(click)': '_selectViaInteraction()',\r\n    '(keydown)': '_handleKeydown($event)',\r\n    'class': 'mat-option',\r\n  },\r\n  styleUrls: ['option.css'],\r\n  templateUrl: 'option.html',\r\n  encapsulation: ViewEncapsulation.None,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class MatOption implements AfterViewChecked, OnDestroy {\r\n  private _selected = false;\r\n  private _active = false;\r\n  private _disabled = false;\r\n  private _mostRecentViewValue = '';\r\n\r\n  /** Whether the wrapping component is in multiple selection mode. */\r\n  get multiple() { return this._parent && this._parent.multiple; }\r\n\r\n  /** Whether or not the option is currently selected. */\r\n  get selected(): boolean { return this._selected; }\r\n\r\n  /** The form value of the option. */\r\n  @Input() value: any;\r\n\r\n  /** The unique ID of the option. */\r\n  @Input() id: string = `mat-option-${_uniqueIdCounter++}`;\r\n\r\n  /** Whether the option is disabled. */\r\n  @Input()\r\n  get disabled() { return (this.group && this.group.disabled) || this._disabled; }\r\n  set disabled(value: any) { this._disabled = coerceBooleanProperty(value); }\r\n\r\n  /** Whether ripples for the option are disabled. */\r\n  get disableRipple() { return this._parent && this._parent.disableRipple; }\r\n\r\n  /** Event emitted when the option is selected or deselected. */\r\n  // tslint:disable-next-line:no-output-on-prefix\r\n  @Output() readonly onSelectionChange = new EventEmitter<MatOptionSelectionChange>();\r\n\r\n  /** Emits when the state of the option changes and any parents have to be notified. */\r\n  readonly _stateChanges = new Subject<void>();\r\n\r\n  constructor(\r\n    private _element: ElementRef<HTMLElement>,\r\n    private _changeDetectorRef: ChangeDetectorRef,\r\n    @Optional() @Inject(MAT_OPTION_PARENT_COMPONENT) private _parent: MatOptionParentComponent,\r\n    @Optional() readonly group: MatOptgroup) {}\r\n\r\n  /**\r\n   * Whether or not the option is currently active and ready to be selected.\r\n   * An active option displays styles as if it is focused, but the\r\n   * focus is actually retained somewhere else. This comes in handy\r\n   * for components like autocomplete where focus must remain on the input.\r\n   */\r\n  get active(): boolean {\r\n    return this._active;\r\n  }\r\n\r\n  /**\r\n   * The displayed value of the option. It is necessary to show the selected option in the\r\n   * select's trigger.\r\n   */\r\n  get viewValue(): string {\r\n    // TODO(kara): Add input property alternative for node envs.\r\n    return (this._getHostElement().textContent || '').trim();\r\n  }\r\n\r\n  /** Selects the option. */\r\n  select(): void {\r\n    if (!this._selected) {\r\n      this._selected = true;\r\n      this._changeDetectorRef.markForCheck();\r\n      this._emitSelectionChangeEvent();\r\n    }\r\n  }\r\n\r\n  /** Deselects the option. */\r\n  deselect(): void {\r\n    if (this._selected) {\r\n      this._selected = false;\r\n      this._changeDetectorRef.markForCheck();\r\n      this._emitSelectionChangeEvent();\r\n    }\r\n  }\r\n\r\n  /** Sets focus onto this option. */\r\n  focus(): void {\r\n    const element = this._getHostElement();\r\n\r\n    if (typeof element.focus === 'function') {\r\n      element.focus();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * This method sets display styles on the option to make it appear\r\n   * active. This is used by the ActiveDescendantKeyManager so key\r\n   * events will display the proper options as active on arrow key events.\r\n   */\r\n  setActiveStyles(): void {\r\n    if (!this._active) {\r\n      this._active = true;\r\n      this._changeDetectorRef.markForCheck();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * This method removes display styles on the option that made it appear\r\n   * active. This is used by the ActiveDescendantKeyManager so key\r\n   * events will display the proper options as active on arrow key events.\r\n   */\r\n  setInactiveStyles(): void {\r\n    if (this._active) {\r\n      this._active = false;\r\n      this._changeDetectorRef.markForCheck();\r\n    }\r\n  }\r\n\r\n  /** Gets the label to be used when determining whether the option should be focused. */\r\n  getLabel(): string {\r\n    return this.viewValue;\r\n  }\r\n\r\n  /** Ensures the option is selected when activated from the keyboard. */\r\n  _handleKeydown(event: KeyboardEvent): void {\r\n    if ((event.keyCode === ENTER || event.keyCode === SPACE) && !hasModifierKey(event)) {\r\n      this._selectViaInteraction();\r\n\r\n      // Prevent the page from scrolling down and form submits.\r\n      event.preventDefault();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * `Selects the option while indicating the selection came from the user. Used to\r\n   * determine if the select's view -> model callback should be invoked.`\r\n   */\r\n  _selectViaInteraction(): void {\r\n    if (!this.disabled) {\r\n      this._selected = this.multiple ? !this._selected : true;\r\n      this._changeDetectorRef.markForCheck();\r\n      this._emitSelectionChangeEvent(true);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Gets the `aria-selected` value for the option. We explicitly omit the `aria-selected`\r\n   * attribute from single-selection, unselected options. Including the `aria-selected=\"false\"`\r\n   * attributes adds a significant amount of noise to screen-reader users without providing useful\r\n   * information.\r\n   */\r\n  _getAriaSelected(): boolean|null {\r\n    return this.selected || (this.multiple ? false : null);\r\n  }\r\n\r\n  /** Returns the correct tabindex for the option depending on disabled state. */\r\n  _getTabIndex(): string {\r\n    return this.disabled ? '-1' : '0';\r\n  }\r\n\r\n  /** Gets the host DOM element. */\r\n  _getHostElement(): HTMLElement {\r\n    return this._element.nativeElement;\r\n  }\r\n\r\n  ngAfterViewChecked() {\r\n    // Since parent components could be using the option's label to display the selected values\r\n    // (e.g. `mat-select`) and they don't have a way of knowing if the option's label has changed\r\n    // we have to check for changes in the DOM ourselves and dispatch an event. These checks are\r\n    // relatively cheap, however we still limit them only to selected options in order to avoid\r\n    // hitting the DOM too often.\r\n    if (this._selected) {\r\n      const viewValue = this.viewValue;\r\n\r\n      if (viewValue !== this._mostRecentViewValue) {\r\n        this._mostRecentViewValue = viewValue;\r\n        this._stateChanges.next();\r\n      }\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this._stateChanges.complete();\r\n  }\r\n\r\n  /** Emits the selection change event. */\r\n  private _emitSelectionChangeEvent(isUserInput = false): void {\r\n    this.onSelectionChange.emit(new MatOptionSelectionChange(this, isUserInput));\r\n  }\r\n}\r\n\r\n/**\r\n * Counts the amount of option group labels that precede the specified option.\r\n * @param optionIndex Index of the option at which to start counting.\r\n * @param options Flat list of all of the options.\r\n * @param optionGroups Flat list of all of the option groups.\r\n * @docs-private\r\n */\r\nexport function _countGroupLabelsBeforeOption(optionIndex: number, options: QueryList<MatOption>,\r\n  optionGroups: QueryList<MatOptgroup>): number {\r\n\r\n  if (optionGroups.length) {\r\n    let optionsArray = options.toArray();\r\n    let groups = optionGroups.toArray();\r\n    let groupCounter = 0;\r\n\r\n    for (let i = 0; i < optionIndex + 1; i++) {\r\n      if (optionsArray[i].group && optionsArray[i].group === groups[groupCounter]) {\r\n        groupCounter++;\r\n      }\r\n    }\r\n\r\n    return groupCounter;\r\n  }\r\n\r\n  return 0;\r\n}\r\n\r\n/**\r\n * Determines the position to which to scroll a panel in order for an option to be into view.\r\n * @param optionIndex Index of the option to be scrolled into the view.\r\n * @param optionHeight Height of the options.\r\n * @param currentScrollPosition Current scroll position of the panel.\r\n * @param panelHeight Height of the panel.\r\n * @docs-private\r\n */\r\nexport function _getOptionScrollPosition(optionIndex: number, optionHeight: number,\r\n    currentScrollPosition: number, panelHeight: number): number {\r\n  const optionOffset = optionIndex * optionHeight;\r\n\r\n  if (optionOffset < currentScrollPosition) {\r\n    return optionOffset;\r\n  }\r\n\r\n  if (optionOffset + optionHeight > currentScrollPosition + panelHeight) {\r\n    return Math.max(0, optionOffset - panelHeight + optionHeight);\r\n  }\r\n\r\n  return currentScrollPosition;\r\n}\r\n\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\n/** @docs-private */\r\nexport class AnimationCurves {\r\n  static STANDARD_CURVE = 'cubic-bezier(0.4,0.0,0.2,1)';\r\n  static DECELERATION_CURVE = 'cubic-bezier(0.0,0.0,0.2,1)';\r\n  static ACCELERATION_CURVE = 'cubic-bezier(0.4,0.0,1,1)';\r\n  static SHARP_CURVE = 'cubic-bezier(0.4,0.0,0.6,1)';\r\n}\r\n\r\n\r\n/** @docs-private */\r\nexport class AnimationDurations {\r\n  static COMPLEX = '375ms';\r\n  static ENTERING = '225ms';\r\n  static EXITING = '195ms';\r\n}\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport {InjectionToken} from '@angular/core';\r\n\r\n\r\nexport type MatDateFormats = {\r\n  parse: {\r\n    dateInput: any\r\n  },\r\n  display: {\r\n    dateInput: any,\r\n    monthYearLabel: any,\r\n    dateA11yLabel: any,\r\n    monthYearA11yLabel: any,\r\n  }\r\n};\r\n\r\n\r\nexport const MAT_DATE_FORMATS = new InjectionToken<MatDateFormats>('mat-date-formats');\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport {MatDateFormats} from './date-formats';\r\n\r\n\r\nexport const MAT_NATIVE_DATE_FORMATS: MatDateFormats = {\r\n  parse: {\r\n    dateInput: null,\r\n  },\r\n  display: {\r\n    dateInput: {year: 'numeric', month: 'numeric', day: 'numeric'},\r\n    monthYearLabel: {year: 'numeric', month: 'short'},\r\n    dateA11yLabel: {year: 'numeric', month: 'long', day: 'numeric'},\r\n    monthYearA11yLabel: {year: 'numeric', month: 'long'},\r\n  }\r\n};\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport {PlatformModule} from '@angular/cdk/platform';\r\nimport {NgModule} from '@angular/core';\r\nimport {DateAdapter} from './date-adapter';\r\nimport {MAT_DATE_FORMATS} from './date-formats';\r\nimport {NativeDateAdapter} from './native-date-adapter';\r\nimport {MAT_NATIVE_DATE_FORMATS} from './native-date-formats';\r\n\r\nexport * from './date-adapter';\r\nexport * from './date-formats';\r\nexport * from './native-date-adapter';\r\nexport * from './native-date-formats';\r\n\r\n\r\n@NgModule({\r\n  imports: [PlatformModule],\r\n  providers: [\r\n    {provide: DateAdapter, useClass: NativeDateAdapter},\r\n  ],\r\n})\r\nexport class NativeDateModule {}\r\n\r\n\r\n@NgModule({\r\n  imports: [NativeDateModule],\r\n  providers: [{provide: MAT_DATE_FORMATS, useValue: MAT_NATIVE_DATE_FORMATS}],\r\n})\r\nexport class MatNativeDateModule {}\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport {Injectable} from '@angular/core';\r\nimport {FormGroupDirective, NgForm, FormControl} from '@angular/forms';\r\n\r\n/** Error state matcher that matches when a control is invalid and dirty. */\r\n@Injectable()\r\nexport class ShowOnDirtyErrorStateMatcher implements ErrorStateMatcher {\r\n  isErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\r\n    return !!(control && control.invalid && (control.dirty || (form && form.submitted)));\r\n  }\r\n}\r\n\r\n/** Provider that defines how form controls behave with regards to displaying error messages. */\r\n@Injectable({providedIn: 'root'})\r\nexport class ErrorStateMatcher {\r\n  isErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\r\n    return !!(control && control.invalid && (control.touched || (form && form.submitted)));\r\n  }\r\n}\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport {Injectable, InjectionToken, Inject, Optional} from '@angular/core';\r\nimport {HammerGestureConfig} from '@angular/platform-browser';\r\nimport {MatCommonModule} from '../common-behaviors/common-module';\r\nimport {\r\n  HammerStatic,\r\n  HammerInstance,\r\n  Recognizer,\r\n  RecognizerStatic,\r\n  HammerOptions,\r\n} from './gesture-annotations';\r\n\r\n/**\r\n * Injection token that can be used to provide options to the Hammerjs instance.\r\n * More info at http://hammerjs.github.io/api/.\r\n */\r\nexport const MAT_HAMMER_OPTIONS = new InjectionToken<HammerOptions>('MAT_HAMMER_OPTIONS');\r\n\r\nconst ANGULAR_MATERIAL_SUPPORTED_HAMMER_GESTURES = [\r\n  'longpress',\r\n  'slide',\r\n  'slidestart',\r\n  'slideend',\r\n  'slideright',\r\n  'slideleft'\r\n];\r\n\r\n/**\r\n * Fake HammerInstance that is used when a Hammer instance is requested when HammerJS has not\r\n * been loaded on the page.\r\n */\r\nconst noopHammerInstance: HammerInstance = {\r\n  on: () => {},\r\n  off: () => {},\r\n};\r\n\r\n/** Adjusts configuration of our gesture library, Hammer. */\r\n@Injectable()\r\nexport class GestureConfig extends HammerGestureConfig {\r\n  /** List of new event names to add to the gesture support list */\r\n  events = ANGULAR_MATERIAL_SUPPORTED_HAMMER_GESTURES;\r\n\r\n  constructor(\r\n    @Optional() @Inject(MAT_HAMMER_OPTIONS) private _hammerOptions?: HammerOptions,\r\n    @Optional() commonModule?: MatCommonModule) {\r\n    super();\r\n    if (commonModule) {\r\n      commonModule._checkHammerIsAvailable();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Builds Hammer instance manually to add custom recognizers that match the Material Design spec.\r\n   *\r\n   * Our gesture names come from the Material Design gestures spec:\r\n   * https://material.io/design/#gestures-touch-mechanics\r\n   *\r\n   * More information on default recognizers can be found in Hammer docs:\r\n   * http://hammerjs.github.io/recognizer-pan/\r\n   * http://hammerjs.github.io/recognizer-press/\r\n   *\r\n   * @param element Element to which to assign the new HammerJS gestures.\r\n   * @returns Newly-created HammerJS instance.\r\n   */\r\n  buildHammer(element: HTMLElement): HammerInstance {\r\n    const hammer: HammerStatic = typeof window !== 'undefined' ? (window as any).Hammer : null;\r\n\r\n    if (!hammer) {\r\n      // If HammerJS is not loaded here, return the noop HammerInstance. This is necessary to\r\n      // ensure that omitting HammerJS completely will not cause any errors while *also* supporting\r\n      // the lazy-loading of HammerJS via the HAMMER_LOADER token introduced in Angular 6.1.\r\n      // Because we can't depend on HAMMER_LOADER's existance until 7.0, we have to always set\r\n      // `this.events` to the set we support, instead of conditionally setting it to `[]` if\r\n      // `HAMMER_LOADER` is present (and then throwing an Error here if `window.Hammer` is\r\n      // undefined).\r\n      // @breaking-change 8.0.0\r\n      return noopHammerInstance;\r\n    }\r\n\r\n    const mc = new hammer(element, this._hammerOptions || undefined);\r\n\r\n    // Default Hammer Recognizers.\r\n    const pan = new hammer.Pan();\r\n    const swipe = new hammer.Swipe();\r\n    const press = new hammer.Press();\r\n\r\n    // Notice that a HammerJS recognizer can only depend on one other recognizer once.\r\n    // Otherwise the previous `recognizeWith` will be dropped.\r\n    // TODO: Confirm threshold numbers with Material Design UX Team\r\n    const slide = this._createRecognizer(pan, {event: 'slide', threshold: 0}, swipe);\r\n    const longpress = this._createRecognizer(press, {event: 'longpress', time: 500});\r\n\r\n    // Overwrite the default `pan` event to use the swipe event.\r\n    pan.recognizeWith(swipe);\r\n\r\n    // Since the slide event threshold is set to zero, the slide recognizer can fire and\r\n    // accidentally reset the longpress recognizer. In order to make sure that the two\r\n    // recognizers can run simultaneously but don't affect each other, we allow the slide\r\n    // recognizer to recognize while a longpress is being processed.\r\n    // See: https://github.com/hammerjs/hammer.js/blob/master/src/manager.js#L123-L124\r\n    longpress.recognizeWith(slide);\r\n\r\n    // Add customized gestures to Hammer manager\r\n    mc.add([swipe, press, pan, slide, longpress]);\r\n\r\n    return mc as HammerInstance;\r\n  }\r\n\r\n  /** Creates a new recognizer, without affecting the default recognizers of HammerJS */\r\n  private _createRecognizer(base: Recognizer, options: any, ...inheritances: Recognizer[]) {\r\n    let recognizer = new (base.constructor as RecognizerStatic)(options);\r\n\r\n    inheritances.push(base);\r\n    inheritances.forEach(item => recognizer.recognizeWith(item));\r\n\r\n    return recognizer;\r\n  }\r\n\r\n}\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport {RippleConfig, RippleRenderer} from './ripple-renderer';\r\n\r\n/** Possible states for a ripple element. */\r\nexport enum RippleState {\r\n  FADING_IN, VISIBLE, FADING_OUT, HIDDEN\r\n}\r\n\r\n/**\r\n * Reference to a previously launched ripple element.\r\n */\r\nexport class RippleRef {\r\n\r\n  /** Current state of the ripple. */\r\n  state: RippleState = RippleState.HIDDEN;\r\n\r\n  constructor(\r\n    private _renderer: RippleRenderer,\r\n    /** Reference to the ripple HTML element. */\r\n    public element: HTMLElement,\r\n    /** Ripple configuration used for the ripple. */\r\n    public config: RippleConfig) {\r\n  }\r\n\r\n  /** Fades out the ripple element. */\r\n  fadeOut() {\r\n    this._renderer.fadeOutRipple(this);\r\n  }\r\n}\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport {Platform} from '@angular/cdk/platform';\r\nimport {\r\n  Directive,\r\n  ElementRef,\r\n  Inject,\r\n  InjectionToken,\r\n  Input,\r\n  NgZone,\r\n  OnDestroy,\r\n  OnInit,\r\n  Optional,\r\n} from '@angular/core';\r\nimport {RippleRef} from './ripple-ref';\r\nimport {RippleAnimationConfig, RippleConfig, RippleRenderer, RippleTarget} from './ripple-renderer';\r\nimport {ANIMATION_MODULE_TYPE} from '@angular/platform-browser/animations';\r\n\r\n/** Configurable options for `matRipple`. */\r\nexport interface RippleGlobalOptions {\r\n  /**\r\n   * Whether ripples should be disabled. Ripples can be still launched manually by using\r\n   * the `launch()` method. Therefore focus indicators will still show up.\r\n   */\r\n  disabled?: boolean;\r\n\r\n  /**\r\n   * Configuration for the animation duration of the ripples. There are two phases with different\r\n   * durations for the ripples. The animation durations will be overwritten if the\r\n   * `NoopAnimationsModule` is being used.\r\n   */\r\n  animation?: RippleAnimationConfig;\r\n\r\n  /**\r\n   * Whether ripples should start fading out immediately after the mouse our touch is released. By\r\n   * default, ripples will wait for the enter animation to complete and for mouse or touch release.\r\n   */\r\n  terminateOnPointerUp?: boolean;\r\n}\r\n\r\n/** Injection token that can be used to specify the global ripple options. */\r\nexport const MAT_RIPPLE_GLOBAL_OPTIONS =\r\n    new InjectionToken<RippleGlobalOptions>('mat-ripple-global-options');\r\n\r\n@Directive({\r\n  selector: '[mat-ripple], [matRipple]',\r\n  exportAs: 'matRipple',\r\n  host: {\r\n    'class': 'mat-ripple',\r\n    '[class.mat-ripple-unbounded]': 'unbounded'\r\n  }\r\n})\r\nexport class MatRipple implements OnInit, OnDestroy, RippleTarget {\r\n\r\n  /** Custom color for all ripples. */\r\n  @Input('matRippleColor') color: string;\r\n\r\n  /** Whether the ripples should be visible outside the component's bounds. */\r\n  @Input('matRippleUnbounded') unbounded: boolean;\r\n\r\n  /**\r\n   * Whether the ripple always originates from the center of the host element's bounds, rather\r\n   * than originating from the location of the click event.\r\n   */\r\n  @Input('matRippleCentered') centered: boolean;\r\n\r\n  /**\r\n   * If set, the radius in pixels of foreground ripples when fully expanded. If unset, the radius\r\n   * will be the distance from the center of the ripple to the furthest corner of the host element's\r\n   * bounding rectangle.\r\n   */\r\n  @Input('matRippleRadius') radius: number = 0;\r\n\r\n  /**\r\n   * Configuration for the ripple animation. Allows modifying the enter and exit animation\r\n   * duration of the ripples. The animation durations will be overwritten if the\r\n   * `NoopAnimationsModule` is being used.\r\n   */\r\n  @Input('matRippleAnimation') animation: RippleAnimationConfig;\r\n\r\n  /**\r\n   * Whether click events will not trigger the ripple. Ripples can be still launched manually\r\n   * by using the `launch()` method.\r\n   */\r\n  @Input('matRippleDisabled')\r\n  get disabled() { return this._disabled; }\r\n  set disabled(value: boolean) {\r\n    this._disabled = value;\r\n    this._setupTriggerEventsIfEnabled();\r\n  }\r\n  private _disabled: boolean = false;\r\n\r\n  /**\r\n   * The element that triggers the ripple when click events are received.\r\n   * Defaults to the directive's host element.\r\n   */\r\n  @Input('matRippleTrigger')\r\n  get trigger() { return this._trigger || this._elementRef.nativeElement; }\r\n  set trigger(trigger: HTMLElement) {\r\n    this._trigger = trigger;\r\n    this._setupTriggerEventsIfEnabled();\r\n  }\r\n  private _trigger: HTMLElement;\r\n\r\n  /** Renderer for the ripple DOM manipulations. */\r\n  private _rippleRenderer: RippleRenderer;\r\n\r\n  /** Options that are set globally for all ripples. */\r\n  private _globalOptions: RippleGlobalOptions;\r\n\r\n  /** Whether ripple directive is initialized and the input bindings are set. */\r\n  private _isInitialized: boolean = false;\r\n\r\n  constructor(private _elementRef: ElementRef<HTMLElement>,\r\n              ngZone: NgZone,\r\n              platform: Platform,\r\n              @Optional() @Inject(MAT_RIPPLE_GLOBAL_OPTIONS) globalOptions?: RippleGlobalOptions,\r\n              @Optional() @Inject(ANIMATION_MODULE_TYPE) animationMode?: string) {\r\n\r\n    this._globalOptions = globalOptions || {};\r\n    this._rippleRenderer = new RippleRenderer(this, ngZone, _elementRef, platform);\r\n\r\n    if (animationMode === 'NoopAnimations') {\r\n      this._globalOptions.animation = {enterDuration: 0, exitDuration: 0};\r\n    }\r\n  }\r\n\r\n  ngOnInit() {\r\n    this._isInitialized = true;\r\n    this._setupTriggerEventsIfEnabled();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this._rippleRenderer._removeTriggerEvents();\r\n  }\r\n\r\n  /** Fades out all currently showing ripple elements. */\r\n  fadeOutAll() {\r\n    this._rippleRenderer.fadeOutAll();\r\n  }\r\n\r\n  /**\r\n   * Ripple configuration from the directive's input values.\r\n   * @docs-private Implemented as part of RippleTarget\r\n   */\r\n  get rippleConfig(): RippleConfig {\r\n    return {\r\n      centered: this.centered,\r\n      radius: this.radius,\r\n      color: this.color,\r\n      animation: {...this._globalOptions.animation, ...this.animation},\r\n      terminateOnPointerUp: this._globalOptions.terminateOnPointerUp,\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Whether ripples on pointer-down are disabled or not.\r\n   * @docs-private Implemented as part of RippleTarget\r\n   */\r\n  get rippleDisabled(): boolean {\r\n    return this.disabled || !!this._globalOptions.disabled;\r\n  }\r\n\r\n  /** Sets up the trigger event listeners if ripples are enabled. */\r\n  private _setupTriggerEventsIfEnabled() {\r\n    if (!this.disabled && this._isInitialized) {\r\n      this._rippleRenderer.setupTriggerEvents(this.trigger);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Launches a manual ripple using the specified ripple configuration.\r\n   * @param config Configuration for the manual ripple.\r\n   */\r\n  launch(config: RippleConfig): RippleRef;\r\n\r\n  /**\r\n   * Launches a manual ripple at the specified coordinates within the element.\r\n   * @param x Coordinate within the element, along the X axis at which to fade-in the ripple.\r\n   * @param y Coordinate within the element, along the Y axis at which to fade-in the ripple.\r\n   * @param config Optional ripple configuration for the manual ripple.\r\n   */\r\n  launch(x: number, y: number, config?: RippleConfig): RippleRef;\r\n\r\n  /** Launches a manual ripple at the specified coordinated or just by the ripple config. */\r\n  launch(configOrX: number | RippleConfig, y: number = 0, config?: RippleConfig): RippleRef {\r\n    if (typeof configOrX === 'number') {\r\n      return this._rippleRenderer.fadeInRipple(configOrX, y, {...this.rippleConfig, ...config});\r\n    } else {\r\n      return this._rippleRenderer.fadeInRipple(0, 0, {...this.rippleConfig, ...configOrX});\r\n    }\r\n  }\r\n}\r\n\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport {NgModule} from '@angular/core';\r\nimport {PlatformModule} from '@angular/cdk/platform';\r\nimport {MatCommonModule} from '../common-behaviors/common-module';\r\nimport {MatRipple} from './ripple';\r\n\r\nexport * from './ripple';\r\nexport * from './ripple-ref';\r\nexport * from './ripple-renderer';\r\n\r\n@NgModule({\r\n  imports: [MatCommonModule, PlatformModule],\r\n  exports: [MatRipple, MatCommonModule],\r\n  declarations: [MatRipple],\r\n})\r\nexport class MatRippleModule {}\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport {\r\n  Component,\r\n  ViewEncapsulation,\r\n  Input,\r\n  ChangeDetectionStrategy,\r\n  Inject,\r\n  Optional,\r\n} from '@angular/core';\r\nimport {ANIMATION_MODULE_TYPE} from '@angular/platform-browser/animations';\r\n\r\n/**\r\n * Possible states for a pseudo checkbox.\r\n * @docs-private\r\n */\r\nexport type MatPseudoCheckboxState = 'unchecked' | 'checked' | 'indeterminate';\r\n\r\n/**\r\n * Component that shows a simplified checkbox without including any kind of \"real\" checkbox.\r\n * Meant to be used when the checkbox is purely decorative and a large number of them will be\r\n * included, such as for the options in a multi-select. Uses no SVGs or complex animations.\r\n * Note that theming is meant to be handled by the parent element, e.g.\r\n * `mat-primary .mat-pseudo-checkbox`.\r\n *\r\n * Note that this component will be completely invisible to screen-reader users. This is *not*\r\n * interchangeable with `<mat-checkbox>` and should *not* be used if the user would directly\r\n * interact with the checkbox. The pseudo-checkbox should only be used as an implementation detail\r\n * of more complex components that appropriately handle selected / checked state.\r\n * @docs-private\r\n */\r\n@Component({\r\n  moduleId: module.id,\r\n  encapsulation: ViewEncapsulation.None,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  selector: 'mat-pseudo-checkbox',\r\n  styleUrls: ['pseudo-checkbox.css'],\r\n  template: '',\r\n  host: {\r\n    'class': 'mat-pseudo-checkbox',\r\n    '[class.mat-pseudo-checkbox-indeterminate]': 'state === \"indeterminate\"',\r\n    '[class.mat-pseudo-checkbox-checked]': 'state === \"checked\"',\r\n    '[class.mat-pseudo-checkbox-disabled]': 'disabled',\r\n    '[class._mat-animation-noopable]': '_animationMode === \"NoopAnimations\"',\r\n  },\r\n})\r\nexport class MatPseudoCheckbox {\r\n  /** Display state of the checkbox. */\r\n  @Input() state: MatPseudoCheckboxState = 'unchecked';\r\n\r\n  /** Whether the checkbox is disabled. */\r\n  @Input() disabled: boolean = false;\r\n\r\n  constructor(@Optional() @Inject(ANIMATION_MODULE_TYPE) public _animationMode?: string) { }\r\n}\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport {NgModule} from '@angular/core';\r\nimport {MatPseudoCheckbox} from './pseudo-checkbox/pseudo-checkbox';\r\n\r\n\r\n@NgModule({\r\n  exports: [MatPseudoCheckbox],\r\n  declarations: [MatPseudoCheckbox]\r\n})\r\nexport class MatPseudoCheckboxModule { }\r\n\r\n\r\nexport * from './pseudo-checkbox/pseudo-checkbox';\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport {ChangeDetectionStrategy, Component, Input, ViewEncapsulation} from '@angular/core';\r\nimport {CanDisable, CanDisableCtor, mixinDisabled} from '../common-behaviors/disabled';\r\n\r\n\r\n// Boilerplate for applying mixins to MatOptgroup.\r\n/** @docs-private */\r\nexport class MatOptgroupBase { }\r\nexport const _MatOptgroupMixinBase: CanDisableCtor & typeof MatOptgroupBase =\r\n    mixinDisabled(MatOptgroupBase);\r\n\r\n// Counter for unique group ids.\r\nlet _uniqueOptgroupIdCounter = 0;\r\n\r\n/**\r\n * Component that is used to group instances of `mat-option`.\r\n */\r\n@Component({\r\n  moduleId: module.id,\r\n  selector: 'mat-optgroup',\r\n  exportAs: 'matOptgroup',\r\n  templateUrl: 'optgroup.html',\r\n  encapsulation: ViewEncapsulation.None,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  inputs: ['disabled'],\r\n  styleUrls: ['optgroup.css'],\r\n  host: {\r\n    'class': 'mat-optgroup',\r\n    'role': 'group',\r\n    '[class.mat-optgroup-disabled]': 'disabled',\r\n    '[attr.aria-disabled]': 'disabled.toString()',\r\n    '[attr.aria-labelledby]': '_labelId',\r\n  }\r\n})\r\nexport class MatOptgroup extends _MatOptgroupMixinBase implements CanDisable {\r\n  /** Label for the option group. */\r\n  @Input() label: string;\r\n\r\n  /** Unique id for the underlying label. */\r\n  _labelId: string = `mat-optgroup-label-${_uniqueOptgroupIdCounter++}`;\r\n}\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport {NgModule} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\nimport {MatRippleModule} from '../ripple/index';\r\nimport {MatPseudoCheckboxModule} from '../selection/index';\r\nimport {MatOption} from './option';\r\nimport {MatOptgroup} from './optgroup';\r\n\r\n\r\n@NgModule({\r\n  imports: [MatRippleModule, CommonModule, MatPseudoCheckboxModule],\r\n  exports: [MatOption, MatOptgroup],\r\n  declarations: [MatOption, MatOptgroup]\r\n})\r\nexport class MatOptionModule {}\r\n\r\n\r\nexport * from './option';\r\nexport * from './optgroup';\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport {InjectionToken} from '@angular/core';\r\n\r\n/** InjectionToken that can be used to specify the global label options. */\r\nexport const MAT_LABEL_GLOBAL_OPTIONS =\r\n  new InjectionToken<LabelOptions>('mat-label-global-options');\r\n\r\n/** Type for the available floatLabel values. */\r\nexport type FloatLabelType = 'always' | 'never' | 'auto';\r\n\r\n/** Configurable options for floating labels. */\r\nexport interface LabelOptions {\r\n  /**\r\n   * Whether the label should float `always`, `never`, or `auto` (only when necessary).\r\n   * Default behavior is assumed to be `auto`.\r\n   */\r\n  float?: FloatLabelType;\r\n}\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\n/**\r\n * When constructing a Date, the month is zero-based. This can be confusing, since people are\r\n * used to seeing them one-based. So we create these aliases to make writing the tests easier.\r\n * @docs-private\r\n * @breaking-change 8.0.0 Remove this with V8 since it was only targeted for testing.\r\n */\r\nexport const JAN = 0, FEB = 1, MAR = 2, APR = 3, MAY = 4, JUN = 5, JUL = 6, AUG = 7, SEP = 8,\r\n  OCT = 9, NOV = 10, DEC = 11;\r\n"],"names":["__extends","d","b","__","this","constructor","extendStatics","prototype","Object","create","MATERIAL_SANITY_CHECKS_FACTORY","mixinDisabled","base","_super","class_1","args","_i","arguments","length","_this","apply","_disabled","tslib_1.__extends","defineProperty","value","coerceBooleanProperty","mixinColor","defaultColor","color","_color","colorPalette","_elementRef","nativeElement","classList","remove","add","mixinDisableRipple","_disableRipple","mixinTabIndex","defaultTabIndex","_tabIndex","disabled","mixinErrorState","errorState","stateChanges","Subject","updateErrorState","oldState","parent","_parentFormGroup","_parentForm","matcher","errorStateMatcher","_defaultErrorStateMatcher","control","ngControl","newState","isErrorState","next","mixinInitialized","_isInitialized","_pendingSubscribers","initialized","Observable","subscriber","_notifySubscriber","push","_markInitialized","Error","forEach","complete","MAT_DATE_LOCALE_FACTORY","inject","LOCALE_ID","range","valueFunction","valuesArray","Array","i","setLines","lines","element","changes","pipe","startWith","subscribe","_a","setClass","className","isAdd","enforceStyleRecalculation","window","getComputedStyle","getPropertyValue","distanceToFurthestCorner","x","y","rect","distX","Math","max","abs","left","right","distY","top","bottom","sqrt","optionsArray","options","toArray","groups","optionGroups","groupCounter","group","optionOffset","optionIndex","optionHeight","currentScrollPosition","panelHeight","SUPPORTS_INTL_API","setPrototypeOf","__proto__","p","hasOwnProperty","__assign","assign","t","s","n","call","AnimationCurves","STANDARD_CURVE","DECELERATION_CURVE","ACCELERATION_CURVE","SHARP_CURVE","AnimationDurations","COMPLEX","ENTERING","EXITING","MATERIAL_SANITY_CHECKS","InjectionToken","providedIn","factory","MatCommonModule","_sanityChecksEnabled","_hammerLoader","_hasDoneGlobalChecks","_hasCheckedHammer","_document","document","_window","_areChecksEnabled","_checkDoctypeIsDefined","_checkThemeIsPresent","isDevMode","_isTestEnv","__karma__","jasmine","doctype","console","warn","body","testElement","createElement","appendChild","computedStyle","display","removeChild","_checkHammerIsAvailable","type","NgModule","imports","BidiModule","exports","Boolean","decorators","Optional","Inject","undefined","HAMMER_LOADER","MAT_DATE_LOCALE","MAT_DATE_LOCALE_PROVIDER","provide","useExisting","DateAdapter","_localeChanges","deserialize","isDateInstance","isValid","invalid","setLocale","locale","compareDate","first","second","getYear","getMonth","getDate","sameDate","firstValid","secondValid","clampDate","date","min","MAT_DATE_FORMATS","Intl","DEFAULT_MONTH_NAMES","long","short","narrow","ɵ0","String","DEFAULT_DATE_NAMES","DEFAULT_DAY_OF_WEEK_NAMES","ISO_8601_REGEX","NativeDateAdapter","matDateLocale","platform","useUtcForDisplay","TRIDENT","_clampDate","EDGE","getFullYear","getDayOfWeek","getDay","getMonthNames","style","dtf_1","DateTimeFormat","month","timeZone","_stripDirectionalityCharacters","_format","Date","getDateNames","dtf_2","day","getDayOfWeekNames","dtf_3","weekday","getYearName","dtf","year","getFirstDayOfWeek","getNumDaysInMonth","_createDateWithOverflow","clone","getTime","createDate","result","today","parse","format","displayFormat","setFullYear","tslib_1.__assign","toDateString","addCalendarYears","years","addCalendarMonths","months","newDate","addCalendarDays","days","toIso8601","getUTCFullYear","_2digit","getUTCMonth","getUTCDate","join","test","obj","isNaN","NaN","slice","str","replace","UTC","getHours","getMinutes","getSeconds","getMilliseconds","Injectable","Platform","MAT_NATIVE_DATE_FORMATS","dateInput","monthYearLabel","dateA11yLabel","monthYearA11yLabel","NativeDateModule","PlatformModule","providers","useClass","MatNativeDateModule","useValue","ShowOnDirtyErrorStateMatcher","form","dirty","submitted","ErrorStateMatcher","touched","MAT_HAMMER_OPTIONS","ANGULAR_MATERIAL_SUPPORTED_HAMMER_GESTURES","ɵ1","noopHammerInstance","on","off","GestureConfig","_hammerOptions","commonModule","events","buildHammer","hammer","Hammer","mc","pan","Pan","swipe","Swipe","press","Press","slide","_createRecognizer","event","threshold","longpress","time","recognizeWith","inheritances","recognizer","item","HammerGestureConfig","MatLine","Directive","selector","host","class","MatLineSetter","MatLineModule","declarations","FADING_IN","VISIBLE","FADING_OUT","HIDDEN","RippleRef","_renderer","config","state","RippleState","fadeOut","fadeOutRipple","defaultRippleAnimationConfig","enterDuration","exitDuration","ignoreMouseEventsTimeout","passiveEventOptions","normalizePassiveListenerOptions","passive","RippleRenderer","_target","_ngZone","elementRef","_isPointerDown","_triggerEvents","Map","_activeRipples","Set","onMousedown","isFakeMousedown","isFakeMousedownFromScreenReader","isSyntheticEvent","_lastTouchStartEvent","now","rippleDisabled","fadeInRipple","clientX","clientY","rippleConfig","onTouchStart","touches","changedTouches","onPointerUp","ripple","isVisible","terminateOnPointerUp","persistent","isBrowser","_containerElement","set","containerRect","_containerRect","getBoundingClientRect","animationConfig","animation","centered","width","height","radius","offsetX","offsetY","duration","backgroundColor","transitionDuration","transform","rippleRef","_mostRecentTransientRipple","runTimeoutOutsideZone","isMostRecentTransientRipple","wasActive","delete","size","rippleEl","opacity","fadeOutAll","setupTriggerEvents","_triggerElement","_removeTriggerEvents","runOutsideAngular","fn","addEventListener","delay","setTimeout","removeEventListener","MAT_RIPPLE_GLOBAL_OPTIONS","MatRipple","ngZone","globalOptions","animationMode","_globalOptions","_rippleRenderer","_setupTriggerEventsIfEnabled","_trigger","trigger","ngOnInit","ngOnDestroy","launch","configOrX","exportAs","[class.mat-ripple-unbounded]","ElementRef","NgZone","ANIMATION_MODULE_TYPE","Input","unbounded","MatRippleModule","MatPseudoCheckbox","_animationMode","Component","encapsulation","ViewEncapsulation","None","changeDetection","ChangeDetectionStrategy","OnPush","styles","template","[class.mat-pseudo-checkbox-indeterminate]","[class.mat-pseudo-checkbox-checked]","[class.mat-pseudo-checkbox-disabled]","[class._mat-animation-noopable]","propDecorators","MatPseudoCheckboxModule","MatOptgroupBase","_MatOptgroupMixinBase","_uniqueOptgroupIdCounter","MatOptgroup","_labelId","inputs","role","[class.mat-optgroup-disabled]","[attr.aria-disabled]","[attr.aria-labelledby]","_uniqueIdCounter","MatOptionSelectionChange","source","isUserInput","MAT_OPTION_PARENT_COMPONENT","MatOption","_element","_changeDetectorRef","_parent","_selected","_active","_mostRecentViewValue","id","onSelectionChange","EventEmitter","_stateChanges","multiple","disableRipple","_getHostElement","textContent","trim","select","markForCheck","_emitSelectionChangeEvent","deselect","focus","setActiveStyles","setInactiveStyles","getLabel","viewValue","_handleKeydown","keyCode","ENTER","SPACE","hasModifierKey","_selectViaInteraction","preventDefault","_getAriaSelected","selected","_getTabIndex","ngAfterViewChecked","emit","[attr.tabindex]","[class.mat-selected]","[class.mat-option-multiple]","[class.mat-active]","[id]","[attr.aria-selected]","[class.mat-option-disabled]","(click)","(keydown)","Output","MatOptionModule","CommonModule","MAT_LABEL_GLOBAL_OPTIONS"],"mappings":";;;;;;;mhCAuBA,SAAgBA,GAAUC,EAAGC,GAEzB,QAASC,KAAOC,KAAKC,YAAcJ,EADnCK,EAAcL,EAAGC,GAEjBD,EAAEM,UAAkB,OAANL,EAAaM,OAAOC,OAAOP,IAAMC,EAAGI,UAAYL,EAAEK,UAAW,GAAIJ,ICNnF,QAAgBO,KACd,OAAO,ECAT,QAAgBC,GAAyCC,GACvD,MAAF,UAAAC,GAMI,QAAJC,KAAA,IAAgB,GAAhBC,MAAAC,EAAA,EAAgBA,EAAhBC,UAAAC,OAAgBF,IAAAD,EAAhBC,GAAAC,UAAAD,EAAI,IAAJG,GAAAN,EAAAO,MAAAhB,KAA2CW,IAA3CX,WALYe,GAAZE,WAAiC,IAM/B,MAPqBC,GAAvBR,EAAAD,GAGIL,OAAJe,eAAQT,EAARP,UAAA,gBAAI,WAAiB,MAAOH,MAAKiB,eAC7B,SAAaG,GAAcpB,KAAKiB,UAAYI,EAAAA,sBAAsBD,oCAGtEV,GAPuBF,GCOvB,QAAgBc,GACZd,EAASe,GACX,MAAF,UAAAd,GAmBI,QAAJC,KAAA,IAAgB,GAAhBC,MAAAC,EAAA,EAAgBA,EAAhBC,UAAAC,OAAgBF,IAAAD,EAAhBC,GAAAC,UAAAD,EAAI,IAAJG,GAAAN,EAAAO,MAAAhB,KACeW,IADfX,WAIMe,GAAKS,MAAQD,IAEjB,MAzBqBL,GAAvBR,EAAAD,GAGIL,OAAJe,eAAQT,EAARP,UAAA,aAAI,WAA4B,MAAOH,MAAKyB,YACxC,SAAUL,GACd,GAAYM,GAAeN,GAASG,CAE1BG,KAAiB1B,KAAKyB,SACpBzB,KAAKyB,QACPzB,KAAK2B,YAAYC,cAAcC,UAAUC,OAAO,OAAO9B,KAAKyB,QAE1DC,GACF1B,KAAK2B,YAAYC,cAAcC,UAAUE,IAAI,OAAOL,GAGtD1B,KAAKyB,OAASC,oCAUtBhB,GAzBuBF,GCVvB,QAAgBwB,GAA8CxB,GAC5D,MAAF,UAAAC,GAOI,QAAJC,KAAA,IAAgB,GAAhBC,MAAAC,EAAA,EAAgBA,EAAhBC,UAAAC,OAAgBF,IAAAD,EAAhBC,GAAAC,UAAAD,EAAI,IAAJG,GAAAN,EAAAO,MAAAhB,KAA2CW,IAA3CX,WANYe,GAAZkB,gBAAsC,IAOpC,MARqBf,GAAvBR,EAAAD,GAIIL,OAAJe,eAAQT,EAARP,UAAA,qBAAI,WAAsB,MAAOH,MAAKiC,oBAClC,SAAkBb,GAAcpB,KAAKiC,eAAiBZ,EAAAA,sBAAsBD,oCAGhFV,GARuBF,GCAvB,QAAgB0B,GAAiD1B,EAAS2B,GAExE,WAFF,KAAAA,IAA0EA,EAA1E,GAEA,SAAA1B,GASI,QAAJC,KAAA,IAAgB,GAAhBC,MAAAC,EAAA,EAAgBA,EAAhBC,UAAAC,OAAgBF,IAAAD,EAAhBC,GAAAC,UAAAD,EAAI,IAAJG,GAAAN,EAAAO,MAAAhB,KACeW,IADfX,WARYe,GAAZqB,UAAgCD,IAW9B,MAZqBjB,GAAvBR,EAAAD,GAGIL,OAAJe,eAAQT,EAARP,UAAA,gBAAI,WAAyB,MAAOH,MAAKqC,UAAY,EAAIrC,KAAKoC,eAC1D,SAAahB,GAEXpB,KAAKoC,UAAqB,MAAThB,EAAgBA,EAAQe,mCAM/CzB,GAZuBF,GCavB,QAAgB8B,GAAsD9B,GAEpE,MAAF,UAAAC,GAyBI,QAAJC,KAAA,IAAgB,GAAhBC,MAAAC,EAAA,EAAgBA,EAAhBC,UAAAC,OAAgBF,IAAAD,EAAhBC,GAAAC,UAAAD,EAAI,IAAJG,GAAAN,EAAAO,MAAAhB,KACeW,IADfX,WAvBIe,GAAJwB,YAA0B,EAMbxB,EAAbyB,aAA4B,GAAIC,GAAAA,UAoB9B,MA5BqBvB,GAAvBR,EAAAD,GAYIC,EAAJP,UAAAuC,iBAAI,WACJ,GAAYC,GAAW3C,KAAKuC,WAChBK,EAAS5C,KAAK6C,kBAAoB7C,KAAK8C,YACvCC,EAAU/C,KAAKgD,mBAAqBhD,KAAKiD,0BACzCC,EAAUlD,KAAKmD,UAAYnD,KAAKmD,UAAiB,QAAkB,KACnEC,EAAWL,EAAQM,aAAaH,EAASN,EAE3CQ,KAAaT,IACf3C,KAAKuC,WAAaa,EAClBpD,KAAKwC,aAAac,SAO1B5C,GA5BuBF,GCJvB,QAAgB+C,GAA4C/C,GAE1D,MAAF,UAAAC,GAyBI,QAAJC,KAAA,IAAgB,GAAhBC,MAAAC,EAAA,EAAgBA,EAAhBC,UAAAC,OAAgBF,IAAAD,EAAhBC,GAAAC,UAAAD,EAAI,IAAJG,GAAAN,EAAAO,MAAAhB,KAA2CW,IAA3CX,WAvBIe,GAAJyC,gBAAqB,EAOjBzC,EAAJ0C,uBAMI1C,EAAJ2C,YAAkB,GAAIC,GAAAA,WAAiB,SAAAC,GAG7B7C,EAAKyC,eACPzC,EAAK8C,kBAAkBD,GAEvB7C,EAAwB,oBAAE+C,KAAKF,OA4BrC,MAjDqB1C,GAAvBR,EAAAD,GAgCIC,EAAJP,UAAA4D,iBAAI,WACE,GAAI/D,KAAKwD,eACP,KAAMQ,OAAM,wFAIdhE,MAAKwD,gBAAiB,EAEtBxD,KAAwB,oBAAEiE,QAAQjE,KAAK6D,mBACvC7D,KAAKyD,oBAAsB,MAI7B/C,EAAJP,UAAA0D,kBAAI,SAAkBD,GAChBA,EAAWN,OACXM,EAAWM,YAEjBxD,GAjDuBF,GCnBvB,QAAgB2D,KACd,MAAOC,GAAAA,OAAOC,EAAAA,WCyChB,QAASC,GAASxD,EAAgByD,GAEhC,IAAK,GADCC,GAAcC,MAAM3D,GACjB4D,EAAI,EAAGA,EAAI5D,EAAQ4D,IAC1BF,EAAYE,GAAKH,EAAcG,EAEjC,OAAOF,GChCT,QAAgBG,GAASC,EAA2BC,GAGlDD,EAAME,QAAQC,KAAKC,EAAAA,UAA8BJ,IAAQK,UAAU,SAACC,GAAtE,GAAuEpE,GAAvEoE,EAAApE,MACIqE,GAASN,EAAS,cAAc,GAChCM,EAASN,EAAS,cAAc,GAChCM,EAASN,EAAS,kBAAkB,GAErB,IAAX/D,GAA2B,IAAXA,EAClBqE,EAASN,EAAS,OAAO/D,EAA/B,SAA8C,GAC/BA,EAAS,GAClBqE,EAASN,EAAS,kBAAkB,KAM1C,QAASM,GAASN,EAAkCO,EAAmBC,GACvE,GAAQxD,GAAYgD,EAAQjD,cAAcC,SACxCwD,GAAQxD,EAAUE,IAAIqD,GAAavD,EAAUC,OAAOsD,GCuQtD,QAASE,GAA0BT,GAIjCU,OAAOC,iBAAiBX,GAASY,iBAAiB,WAMpD,QAASC,GAAyBC,EAAWC,EAAWC,GACxD,GAAQC,GAAQC,KAAKC,IAAID,KAAKE,IAAIN,EAAIE,EAAKK,MAAOH,KAAKE,IAAIN,EAAIE,EAAKM,QAC5DC,EAAQL,KAAKC,IAAID,KAAKE,IAAIL,EAAIC,EAAKQ,KAAMN,KAAKE,IAAIL,EAAIC,EAAKS,QACjE,OAAOP,MAAKQ,KAAKT,EAAQA,EAAQM,EAAQA,yCClD3CI,GAAyBC,EAAzBC,UACQC,EAARC,EAA8BF,UACtBG,EAAR,gBACAL,EAAA9B,GAAAoC,OAAAN,EAAA9B,GAAAoC,QAAAH,EAAAE,IAEAA,GAGA,OAAAA,GAGA,MAAA,uBAcA,GAAAE,GAAAC,EAAAC,aAEAF,EAGIA,EAAJE,EAAAC,EAAAC,EACApB,KAAAC,IAAA,EAAAe,EAAAI,EAAAF,GAGAC,EZxSA,GSFIE,GTEAlH,EAAgB,SAASL,EAAGC,GAI5B,OAHAI,EAAgBE,OAAOiH,iBAChBC,uBAA2B7C,QAAS,SAAU5E,EAAGC,GAAKD,EAAEyH,UAAYxH,IACvE,SAAUD,EAAGC,GAAK,IAAK,GAAIyH,KAAKzH,GAAOA,EAAE0H,eAAeD,KAAI1H,EAAE0H,GAAKzH,EAAEyH,MACpD1H,EAAGC,IASjB2H,EAAW,WAQlB,MAPAA,GAAWrH,OAAOsH,QAAU,SAAkBC,GAC1C,IAAK,GAAIC,GAAGlD,EAAI,EAAGmD,EAAIhH,UAAUC,OAAQ4D,EAAImD,EAAGnD,IAAK,CACjDkD,EAAI/G,UAAU6D,EACd,KAAK,GAAI6C,KAAKK,GAAOxH,OAAOD,UAAUqH,eAAeM,KAAKF,EAAGL,KAAII,EAAEJ,GAAKK,EAAEL,IAE9E,MAAOI,IAEJF,EAASzG,MAAMhB,KAAMa,Ya5BhCkH,EAAA,WAAA,QAAAA,MAKA,MAJSA,GAATC,eAA0B,8BACjBD,EAATE,mBAA8B,8BACrBF,EAATG,mBAA8B,4BACrBH,EAATI,YAAuB,8BACvBJ,KAIAK,EAAA,WAAA,QAAAA,MAIA,MAHSA,GAATC,QAAmB,QACVD,EAATE,SAAoB,QACXF,EAATG,QAAmB,QACnBH,KZRaI,EAAyB,GAAIC,GAAAA,eAAwB,qBAChEC,WAAY,OACZC,QAASrI,IAcXsI,EAAA,WAiBE,QAAFA,GACwDC,EACTC,GADS9I,KAAxD6I,qBAAwDA,EACT7I,KAA/C8I,cAA+CA,EAbrC9I,KAAV+I,sBAAiC,EAGvB/I,KAAVgJ,mBAA8B,EAGpBhJ,KAAViJ,UAA0C,gBAAbC,WAAyBA,SAAWA,SAAW,KAGlElJ,KAAVmJ,QAAsC,gBAAX5D,SAAuBA,OAASA,OAAS,KAM5DvF,KAAKoJ,sBAAwBpJ,KAAK+I,uBACpC/I,KAAKqJ,yBACLrJ,KAAKsJ,uBACLtJ,KAAK+I,sBAAuB,GAgElC,MA3DUH,GAAVzI,UAAAiJ,kBAAE,WACE,MAAOpJ,MAAK6I,sBAAwBU,EAAAA,cAAgBvJ,KAAKwJ,cAInDZ,EAAVzI,UAAAqJ,WAAE,WACF,GAAUjE,GAASvF,KAAY,OAC3B,OAAOuF,KAAWA,EAAOkE,WAAalE,EAAOmE,UAGvCd,EAAVzI,UAAAkJ,uBAAE,WACMrJ,KAAKiJ,YAAcjJ,KAAKiJ,UAAUU,SACpCC,QAAQC,KACN,yHAMEjB,EAAVzI,UAAAmJ,qBAAE,WAGE,GAAKtJ,KAAKiJ,WAAcjJ,KAAKiJ,UAAUa,MAAoC,kBAArBtE,kBAAtD,CAIJ,GAAUuE,GAAc/J,KAAKiJ,UAAUe,cAAc,MAEjDD,GAAYlI,UAAUE,IAAI,2BAC1B/B,KAAKiJ,UAAUa,KAAKG,YAAYF,EAEpC,IAAUG,GAAgB1E,iBAAiBuE,EAKnCG,IAA2C,SAA1BA,EAAcC,SACjCP,QAAQC,KACN,sLAMJ7J,KAAKiJ,UAAUa,KAAKM,YAAYL,KAIlCnB,EAAFzI,UAAAkK,wBAAE,YACMrK,KAAKgJ,mBAAsBhJ,KAAKmJ,WAIhCnJ,KAAKoJ,qBAAyBpJ,KAAY,QAAiB,QAAMA,KAAK8I,eACxEc,QAAQC,KACN,wFAEJ7J,KAAKgJ,mBAAoB,mBAtF7BsB,KAACC,EAAAA,SAAD5J,OACE6J,SAAUC,EAAAA,YACVC,SAAUD,EAAAA,oDAgBZH,KAAAK,QAAAC,aAAAN,KAAKO,EAAAA,WAALP,KAAiBQ,EAAAA,OAAjBnK,MAAwB6H,OACxB8B,SAAAS,GAAAH,aAAAN,KAAKO,EAAAA,WAALP,KAAiBQ,EAAAA,OAAjBnK,MAAwBqK,EAAAA,oBAqExBpC,KO1GaqC,EAAkB,GAAIxC,GAAAA,eAAuB,mBACxDC,WAAY,OACZC,QAASxE,IAcE+G,GAA4BC,QAASF,EAAiBG,YAAa/G,EAAAA,wBAGhF,QAAAgH,KAMYrL,KAAZsL,eAA6B,GAAI7I,GAAAA,QAqPjC,MAtPErC,QAAFe,eAAMkK,EAANlL,UAAA,qBAAE,WAAwC,MAAOH,MAAKsL,gDAqLpDD,EAAFlL,UAAAoL,YAAE,SAAYnK,GACV,MAAa,OAATA,GAAiBpB,KAAKwL,eAAepK,IAAUpB,KAAKyL,QAAQrK,GACvDA,EAEFpB,KAAK0L,WAOdL,EAAFlL,UAAAwL,UAAE,SAAUC,GACR5L,KAAK4L,OAASA,EACd5L,KAAKsL,eAAehI,QAUtB+H,EAAFlL,UAAA0L,YAAE,SAAYC,EAAUC,GACpB,MAAO/L,MAAKgM,QAAQF,GAAS9L,KAAKgM,QAAQD,IACtC/L,KAAKiM,SAASH,GAAS9L,KAAKiM,SAASF,IACrC/L,KAAKkM,QAAQJ,GAAS9L,KAAKkM,QAAQH,IAUzCV,EAAFlL,UAAAgM,SAAE,SAASL,EAAiBC,GACxB,GAAID,GAASC,EAAQ,CACzB,GAAUK,GAAapM,KAAKyL,QAAQK,GAC1BO,EAAcrM,KAAKyL,QAAQM,EAC/B,OAAIK,IAAcC,GACRrM,KAAK6L,YAAYC,EAAOC,GAE3BK,GAAcC,EAEvB,MAAOP,IAASC,GAWlBV,EAAFlL,UAAAmM,UAAE,SAAUC,EAASC,EAAgBxG,GACjC,MAAIwG,IAAOxM,KAAK6L,YAAYU,EAAMC,GAAO,EAChCA,EAELxG,GAAOhG,KAAK6L,YAAYU,EAAMvG,GAAO,EAChCA,EAEFuG,GAEXlB,KMlQaoB,EAAmB,GAAIhE,GAAAA,eAA+B,mBLHnE,KACErB,EAAmC,mBAARsF,MAC3B,MAAFxH,GACEkC,GAAoB,EAItB,GAAMuF,IACJC,MACE,UAAW,WAAY,QAAS,QAAS,MAAO,OAAQ,OAAQ,SAAU,YAC1E,UAAW,WAAY,YAEzBC,OAAU,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OACvFC,QAAW,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,MAKpEC,EAAqC,SAAArI,GAAK,MAAAsI,QAAOtI,EAAI,IAA/CuI,EAAqB3I,EAAM,GAAjCyI,GAIMG,GACJN,MAAS,SAAU,SAAU,UAAW,YAAa,WAAY,SAAU,YAC3EC,OAAU,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OACpDC,QAAW,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,MASrCK,EACF,qFAaJC,EAAA,SAAA3M,GAkBE,QAAF2M,GAAmDC,EAAuBC,GAAxE,GAAFvM,GACIN,EADJqH,KAAA9H,OAAAA,WAFEe,GAAFwM,kBAA8B,EAI1B9M,EAAJN,UAAUwL,UAAV7D,KAAA/G,EAAoBsM,GAGhBtM,EAAKwM,kBAAoBD,EAASE,QAClCzM,EAAK0M,WAAaH,EAASE,SAAWF,EAASI,OA6OnD,MApQuCxM,GAAvCkM,EAAA3M,GA0BE2M,EAAFjN,UAAA6L,QAAE,SAAQO,GACN,MAAOA,GAAKoB,eAGdP,EAAFjN,UAAA8L,SAAE,SAASM,GACP,MAAOA,GAAKN,YAGdmB,EAAFjN,UAAA+L,QAAE,SAAQK,GACN,MAAOA,GAAKL,WAGdkB,EAAFjN,UAAAyN,aAAE,SAAarB,GACX,MAAOA,GAAKsB,UAGdT,EAAFjN,UAAA2N,cAAE,SAAcC,GAAd,GAAFhN,GAAAf,IACI,IAAIoH,EAAmB,CAC3B,GAAY4G,GAAM,GAAItB,MAAKuB,eAAejO,KAAK4L,QAASsC,MAAOH,EAAOI,SAAU,OAC1E,OAAO7J,GAAM,GAAI,SAAAI,GACb,MAAA3D,GAAKqN,+BAA+BrN,EAAKsN,QAAQL,EAAK,GAAIM,MAAK,KAAM5J,EAAG,OAE9E,MAAOiI,GAAoBoB,IAG7BX,EAAFjN,UAAAoO,aAAE,WAAA,GAAFxN,GAAAf,IACI,IAAIoH,EAAmB,CAC3B,GAAYoH,GAAM,GAAI9B,MAAKuB,eAAejO,KAAK4L,QAAS6C,IAAK,UAAWN,SAAU,OAC5E,OAAO7J,GAAM,GAAI,SAAAI,GAAK,MAAA3D,GAAKqN,+BACvBrN,EAAKsN,QAAQG,EAAK,GAAIF,MAAK,KAAM,EAAG5J,EAAI,OAE9C,MAAOuI,IAGTG,EAAFjN,UAAAuO,kBAAE,SAAkBX,GAAlB,GAAFhN,GAAAf,IACI,IAAIoH,EAAmB,CAC3B,GAAYuH,GAAM,GAAIjC,MAAKuB,eAAejO,KAAK4L,QAASgD,QAASb,EAAOI,SAAU,OAC5E,OAAO7J,GAAM,EAAG,SAAAI,GAAK,MAAA3D,GAAKqN,+BACtBrN,EAAKsN,QAAQM,EAAK,GAAIL,MAAK,KAAM,EAAG5J,EAAI,OAE9C,MAAOwI,GAA0Ba,IAGnCX,EAAFjN,UAAA0O,YAAE,SAAYtC,GACV,GAAInF,EAAmB,CAC3B,GAAY0H,GAAM,GAAIpC,MAAKuB,eAAejO,KAAK4L,QAASmD,KAAM,UAAWZ,SAAU,OAC7E,OAAOnO,MAAKoO,+BAA+BpO,KAAKqO,QAAQS,EAAKvC,IAE/D,MAAOS,QAAOhN,KAAKgM,QAAQO,KAG7Ba,EAAFjN,UAAA6O,kBAAE,WAEE,MAAO,IAGT5B,EAAFjN,UAAA8O,kBAAE,SAAkB1C,GAChB,MAAOvM,MAAKkM,QAAQlM,KAAKkP,wBACrBlP,KAAKgM,QAAQO,GAAOvM,KAAKiM,SAASM,GAAQ,EAAG,KAGnDa,EAAFjN,UAAAgP,MAAE,SAAM5C,GACJ,MAAO,IAAI+B,MAAK/B,EAAK6C,YAGvBhC,EAAFjN,UAAAkP,WAAE,SAAWN,EAAcb,EAAe3B,GAGtC,GAAI2B,EAAQ,GAAKA,EAAQ,GACvB,KAAMlK,OAAM,wBAAwBkK,EAA1C,6CAGI,IAAI3B,EAAO,EACT,KAAMvI,OAAM,iBAAiBuI,EAAnC,oCAGA,IAAQ+C,GAAStP,KAAKkP,wBAAwBH,EAAMb,EAAO3B,EAEvD,IAAI+C,EAAOrD,YAAciC,EACvB,KAAMlK,OAAM,iBAAiBuI,EAAnC,2BAAkE2B,EAAlE,KAGI,OAAOoB,IAGTlC,EAAFjN,UAAAoP,MAAE,WACE,MAAO,IAAIjB,OAGblB,EAAFjN,UAAAqP,MAAE,SAAMpO,GAGJ,MAAoB,gBAATA,GACF,GAAIkN,MAAKlN,GAEXA,EAAQ,GAAIkN,MAAKA,KAAKkB,MAAMpO,IAAU,MAG/CgM,EAAFjN,UAAAsP,OAAE,SAAOlD,EAAYmD,GACjB,IAAK1P,KAAKyL,QAAQc,GAChB,KAAMvI,OAAM,iDAGd,IAAIoD,EAAmB,CAGjBpH,KAAKyN,aAAelB,EAAKoB,cAAgB,GAAKpB,EAAKoB,cAAgB,QACrEpB,EAAOvM,KAAKmP,MAAM5C,GAClBA,EAAKoD,YAAY5J,KAAKC,IAAI,EAAGD,KAAKyG,IAAI,KAAMD,EAAKoB,kBAGnD+B,EAANE,KAA0BF,GAAevB,SAAU,OAEnD,IAAYW,GAAM,GAAIpC,MAAKuB,eAAejO,KAAK4L,OAAQ8D,EACjD,OAAO1P,MAAKoO,+BAA+BpO,KAAKqO,QAAQS,EAAKvC,IAE/D,MAAOvM,MAAKoO,+BAA+B7B,EAAKsD,iBAGlDzC,EAAFjN,UAAA2P,iBAAE,SAAiBvD,EAAYwD,GAC3B,MAAO/P,MAAKgQ,kBAAkBzD,EAAc,GAARwD,IAGtC3C,EAAFjN,UAAA6P,kBAAE,SAAkBzD,EAAY0D,GAChC,GAAQC,GAAUlQ,KAAKkP,wBACflP,KAAKgM,QAAQO,GAAOvM,KAAKiM,SAASM,GAAQ0D,EAAQjQ,KAAKkM,QAAQK,GAUnE,OAJIvM,MAAKiM,SAASiE,MAAclQ,KAAKiM,SAASM,GAAQ0D,GAAU,GAAK,IAAM,KACzEC,EAAUlQ,KAAKkP,wBAAwBlP,KAAKgM,QAAQkE,GAAUlQ,KAAKiM,SAASiE,GAAU,IAGjFA,GAGT9C,EAAFjN,UAAAgQ,gBAAE,SAAgB5D,EAAY6D,GAC1B,MAAOpQ,MAAKkP,wBACRlP,KAAKgM,QAAQO,GAAOvM,KAAKiM,SAASM,GAAOvM,KAAKkM,QAAQK,GAAQ6D,IAGpEhD,EAAFjN,UAAAkQ,UAAE,SAAU9D,GACR,OACEA,EAAK+D,iBACLtQ,KAAKuQ,QAAQhE,EAAKiE,cAAgB,GAClCxQ,KAAKuQ,QAAQhE,EAAKkE,eAClBC,KAAK,MAQTtD,EAAFjN,UAAAoL,YAAE,SAAYnK,GACV,GAAqB,gBAAVA,GAAoB,CAC7B,IAAKA,EACH,MAAO,KAIT,IAAI+L,EAAewD,KAAKvP,GAAQ,CACtC,GAAYmL,GAAO,GAAI+B,MAAKlN,EACpB,IAAIpB,KAAKyL,QAAQc,GACf,MAAOA,IAIb,MAAO9L,GAAXN,UAAiBoL,YAAjBzD,KAAA9H,KAA6BoB,IAG3BgM,EAAFjN,UAAAqL,eAAE,SAAeoF,GACb,MAAOA,aAAetC,OAGxBlB,EAAFjN,UAAAsL,QAAE,SAAQc,GACN,OAAQsE,MAAMtE,EAAK6C,YAGrBhC,EAAFjN,UAAAuL,QAAE,WACE,MAAO,IAAI4C,MAAKwC,MAIV1D,EAAVjN,UAAA+O,wBAAE,SAAgCH,EAAcb,EAAe3B,GAC/D,GAAU+C,GAAS,GAAIhB,MAAKS,EAAMb,EAAO3B,EAOrC,OAHIwC,IAAQ,GAAKA,EAAO,KACtBO,EAAOK,YAAY3P,KAAKgM,QAAQsD,GAAU,MAErCA,GAQDlC,EAAVjN,UAAAoQ,QAAE,SAAgB1I,GACd,OAAQ,KAAOA,GAAGkJ,OAAO,IAUnB3D,EAAVjN,UAAAiO,+BAAE,SAAuC4C,GACrC,MAAOA,GAAIC,QAAQ,kBAAmB,KAchC7D,EAAVjN,UAAAkO,QAAE,SAAgBS,EAA0BvC,GAC5C,GAAU1M,GAAI,GAAIyO,MAAKA,KAAK4C,IACpB3E,EAAKoB,cAAepB,EAAKN,WAAYM,EAAKL,UAAWK,EAAK4E,WAC1D5E,EAAK6E,aAAc7E,EAAK8E,aAAc9E,EAAK+E,mBAC/C,OAAOxC,GAAIW,OAAO5P,mBAnQtByK,KAACiH,EAAAA,iDAkBDjH,KAAA0C,OAAApC,aAAAN,KAAeO,EAAAA,WAAfP,KAA2BQ,EAAAA,OAA3BnK,MAAkCsK,OA/ElCX,KAAQkH,EAAAA,YAkURpE,GApQuC/B,GM3D1BoG,GACXjC,OACEkC,UAAW,MAEbvH,SACEuH,WAAY3C,KAAM,UAAWb,MAAO,UAAWO,IAAK,WACpDkD,gBAAiB5C,KAAM,UAAWb,MAAO,SACzC0D,eAAgB7C,KAAM,UAAWb,MAAO,OAAQO,IAAK,WACrDoD,oBAAqB9C,KAAM,UAAWb,MAAO,UCEjD4D,EAAA,WAAA,QAAAA,MAM+B,sBAN/BxH,KAACC,EAAAA,SAAD5J,OACE6J,SAAUuH,EAAAA,gBACVC,YACG7G,QAASE,EAAa4G,SAAU7E,QAGrC0E,KAKA/E,EAAoD0E,EAFpDS,EAAA,WAAA,QAAAA,MAIkC,sBAJlC5H,KAACC,EAAAA,SAAD5J,OACE6J,SAAUsH,GACVE,YAAa7G,QAASsB,EAAkB0F,SAA1CpF,QAEAmF,KCtBAE,EAAA,WAAA,QAAAA,MAKA,MAHEA,GAAFjS,UAAAkD,aAAE,SAAaH,EAA6BmP,GACxC,SAAUnP,GAAWA,EAAQwI,UAAYxI,EAAQoP,OAAUD,GAAQA,EAAKE,4BAH5EjI,KAACiH,EAAAA,aAKDa,KAGAI,EAAA,WAAA,QAAAA,MApBA,MAsBEA,GAAFrS,UAAAkD,aAAE,SAAaH,EAA6BmP,GACxC,SAAUnP,GAAWA,EAAQwI,UAAYxI,EAAQuP,SAAYJ,GAAQA,EAAKE,4BAH9EjI,KAACiH,EAAAA,WAAD5Q,OAAa+H,WAAY,8GApBzB8J,KCuBaE,EAAqB,GAAIjK,GAAAA,eAA8B,sBAE9DkK,GACJ,YACA,QACA,aACA,WACA,aACA,aAQF5F,EAAM,aAAN6F,GACO,aAFDC,IACJC,GAAF/F,EACEgG,IAAFH,IAIAI,GAAA,SAAAvS,GAKE,QAAFuS,GACoDC,EACpCC,GAFd,GAAFnS,GAGIN,EAHJqH,KAAA9H,OAAAA,WACoDe,GAApDkS,eAAoDA,EAHlDlS,EAAFoS,OAAWR,EAMHO,GACFA,EAAa7I,4BAuEnB,MAhFmCnJ,GAAnC8R,EAAAvS,GA0BEuS,EAAF7S,UAAAiT,YAAE,SAAYvO,GACd,GAAUwO,GAAyC,mBAAX9N,QAAyB,OAAgB+N,OAAS,IAEtF,KAAKD,EASH,MAAOR,GAGb,IAAUU,GAAK,GAAIF,GAAOxO,EAAS7E,KAAKiT,oBAAkBlI,IAGhDyI,EAAM,GAAIH,GAAOI,IACjBC,EAAQ,GAAIL,GAAOM,MACnBC,EAAQ,GAAIP,GAAOQ,MAKnBC,EAAQ9T,KAAK+T,kBAAkBP,GAAMQ,MAAO,QAASC,UAAW,GAAIP,GACpEQ,EAAYlU,KAAK+T,kBAAkBH,GAAQI,MAAO,YAAaG,KAAM,KAe3E,OAZAX,GAAIY,cAAcV,GAOlBQ,EAAUE,cAAcN,GAGxBP,EAAGxR,KAAK2R,EAAOE,EAAOJ,EAAKM,EAAOI,IAElC,GAIMlB,EAAV7S,UAAA4T,kBAAE,SAA0BvT,EAAkBiG,GAA9C,IAA4D,GAA5D4N,MAAAzT,EAAA,EAA4DA,EAA5DC,UAAAC,OAA4DF,IAAAyT,EAA5DzT,EAAA,GAAAC,UAAAD,EACA,IAAQ0T,GAAa,GAAK9T,GAAgB,YAAsBiG,EAK5D,OAHA4N,GAAavQ,KAAKtD,GAClB6T,EAAapQ,QAAQ,SAAAsQ,GAAQ,MAAAD,GAAWF,cAAcG,KAE/CD,kBA9EXhK,KAACiH,EAAAA,iDAMDjH,SAAAS,GAAAH,aAAAN,KAAKO,EAAAA,WAALP,KAAiBQ,EAAAA,OAAjBnK,MAAwB+R,OAxCxBpI,KAAQ1B,EAARgC,aAAAN,KAyCKO,EAAAA,cA0ELmI,GAhFmCwB,EAAAA,qBRtBnCC,GAAA,WAAA,QAAAA,MAIsB,sBAJtBnK,KAACoK,EAAAA,UAAD/T,OACEgU,SAAU,wBACVC,MAAOC,MAAS,gBAElBJ,mBAmCE,QAAFK,GAAclQ,EAA2BC,GACrCF,EAASC,EAAOC,GAEpB,MAAAiQ,MAEAC,GAAA,WAAA,QAAAA,MAK6B,sBAL7BzK,KAACC,EAAAA,SAAD5J,OACE6J,SAAU5B,GACV8B,SAAU+J,GAAS7L,GACnBoM,cAAeP,QAEjBM,SS5DEE,UAAF,EAAaC,QAAb,EAAsBC,WAAtB,EAAkCC,OAAlC,8GAMA,mBAKE,QAAFC,GACYC,EAEDzQ,EAEA0Q,GAJCvV,KAAZsV,UAAYA,EAEDtV,KAAX6E,QAAWA,EAEA7E,KAAXuV,OAAWA,EAPTvV,KAAFwV,MAAuBC,GAAYL,OAcnC,MAHEC,GAAFlV,UAAAuV,QAAE,WACE1V,KAAKsV,UAAUK,cAAc3V,OAEjCqV,KRaaO,IACXC,cAAe,IACfC,aAAc,KAOVC,GAA2B,IAG3BC,GAAsBC,EAAAA,iCAAiCC,SAAS,kBAqCpE,QAAFC,GAAsBC,EACAC,EACRC,EACAhJ,GAHZ,GAAFvM,GAAAf,IAAsBA,MAAtBoW,QAAsBA,EACApW,KAAtBqW,QAAsBA,EArBZrW,KAAVuW,gBAA2B,EAGjBvW,KAAVwW,eAA2B,GAAIC,KAGrBzW,KAAV0W,eAA2B,GAAIC,KAmKrB3W,KAAV4W,YAAwB,SAAC5C,GAGzB,GAAU6C,GAAkBC,EAAAA,gCAAgC9C,GAClD+C,EAAmBhW,EAAKiW,sBAC1B1I,KAAK2I,MAAQlW,EAAKiW,qBAAuBjB,EAExChV,GAAKqV,QAAQc,gBAAmBL,GAAoBE,IACvDhW,EAAKwV,gBAAiB,EACtBxV,EAAKoW,aAAanD,EAAMoD,QAASpD,EAAMqD,QAAStW,EAAKqV,QAAQkB,gBAKzDtX,KAAVuX,aAAyB,SAACvD,GACtB,IAAKjT,EAAKqV,QAAQc,eAAgB,CAIhCnW,EAAKiW,qBAAuB1I,KAAK2I,MACjClW,EAAKwV,gBAAiB,CAMtB,KAAK,GAFCiB,GAAUxD,EAAMyD,eAEb/S,EAAI,EAAGA,EAAI8S,EAAQ1W,OAAQ4D,IAClC3D,EAAKoW,aAAaK,EAAQ9S,GAAG0S,QAASI,EAAQ9S,GAAG2S,QAAStW,EAAKqV,QAAQkB,gBAMrEtX,KAAV0X,YAAwB,WACf3W,EAAKwV,iBAIVxV,EAAKwV,gBAAiB,EAGtBxV,EAAK2V,eAAezS,QAAQ,SAAA0T,GAGhC,GAAYC,GAAYD,EAAOnC,QAAUC,GAAYP,SAC7CyC,EAAOpC,OAAOsC,sBAAwBF,EAAOnC,QAAUC,GAAYR,WAEhE0C,EAAOpC,OAAOuC,YAAcF,GAC/BD,EAAOjC,cA/LPpI,EAASyK,YACX/X,KAAKgY,kBAAoB1B,EAAW1U,cAGpC5B,KAAKwW,eACFyB,IAAI,YAAajY,KAAK4W,aACtBqB,IAAI,UAAWjY,KAAK0X,aACpBO,IAAI,aAAcjY,KAAK0X,aAEvBO,IAAI,aAAcjY,KAAKuX,cACvBU,IAAI,WAAYjY,KAAK0X,aACrBO,IAAI,cAAejY,KAAK0X,cAsMjC,MA5LEvB,GAAFhW,UAAAgX,aAAE,SAAaxR,EAAWC,EAAW2P,GAAnC,GAAFxU,GAAAf,SAAA,KAAAuV,IAAqCA,KACrC,IAAU2C,GAAgBlY,KAAKmY,eACLnY,KAAKmY,gBAAkBnY,KAAKgY,kBAAkBI,wBAC9DC,EAAVzI,KAAgCgG,GAAiCL,EAAO+C,UAEhE/C,GAAOgD,WACT5S,EAAIuS,EAAchS,KAAOgS,EAAcM,MAAQ,EAC/C5S,EAAIsS,EAAc7R,IAAM6R,EAAcO,OAAS,EAGrD,IAAUC,GAASnD,EAAOmD,QAAUhT,EAAyBC,EAAGC,EAAGsS,GACzDS,EAAUhT,EAAIuS,EAAchS,KAC5B0S,EAAUhT,EAAIsS,EAAc7R,IAC5BwS,EAAWR,EAAgBxC,cAE3B8B,EAASzO,SAASc,cAAc,MACtC2N,GAAO9V,UAAUE,IAAI,sBAErB4V,EAAO5J,MAAM7H,KAAUyS,EAAUD,EAArC,KACIf,EAAO5J,MAAM1H,IAASuS,EAAUF,EAApC,KACIf,EAAO5J,MAAM0K,OAAqB,EAATC,EAA7B,KACIf,EAAO5J,MAAMyK,MAAoB,EAATE,EAA5B,KAGIf,EAAO5J,MAAM+K,gBAAkBvD,EAAO/T,OAAS,KAC/CmW,EAAO5J,MAAMgL,mBAAwBF,EAAzC,KAEI7Y,KAAKgY,kBAAkB/N,YAAY0N,GAInCrS,EAA0BqS,GAE1BA,EAAO5J,MAAMiL,UAAY,UAG7B,IAAUC,GAAY,GAAI5D,IAAUrV,KAAM2X,EAAQpC,EA2B9C,OAzBA0D,GAAUzD,MAAQC,GAAYR,UAG9BjV,KAAK0W,eAAe3U,IAAIkX,GAEnB1D,EAAOuC,aACV9X,KAAKkZ,2BAA6BD,GAKpCjZ,KAAKmZ,sBAAsB,WAC/B,GAAYC,GAA8BH,IAAclY,EAAKmY,0BAEvDD,GAAUzD,MAAQC,GAAYP,QAMzBK,EAAOuC,YAAgBsB,GAAgCrY,EAAKwV,gBAC/D0C,EAAUvD,WAEXmD,GAEII,GAIT9C,EAAFhW,UAAAwV,cAAE,SAAcsD,GAChB,GAAUI,GAAYrZ,KAAK0W,eAAe4C,OAAOL,EAY7C,IAVIA,IAAcjZ,KAAKkZ,6BACrBlZ,KAAKkZ,2BAA6B,MAI/BlZ,KAAK0W,eAAe6C,OACvBvZ,KAAKmY,eAAiB,MAInBkB,EAAL,CAIJ,GAAUG,GAAWP,EAAUpU,QACrBwT,EAAVzI,KAAgCgG,GAAiCqD,EAAU1D,OAAO+C,UAE9EkB,GAASzL,MAAMgL,mBAAwBV,EAAgBvC,aAA3D,KACI0D,EAASzL,MAAM0L,QAAU,IACzBR,EAAUzD,MAAQC,GAAYN,WAG9BnV,KAAKmZ,sBAAsB,WACzBF,EAAUzD,MAAQC,GAAYL,OAC9BoE,EAAmB,WAAEpP,YAAYoP,IAChCnB,EAAgBvC,gBAIrBK,EAAFhW,UAAAuZ,WAAE,WACE1Z,KAAK0W,eAAezS,QAAQ,SAAA0T,GAAU,MAAAA,GAAOjC,aAI/CS,EAAFhW,UAAAwZ,mBAAE,SAAmB9U,GAAnB,GAAF9D,GAAAf,IACS6E,IAAWA,IAAY7E,KAAK4Z,kBAKjC5Z,KAAK6Z,uBAEL7Z,KAAKqW,QAAQyD,kBAAkB,WAC7B/Y,EAAKyV,eAAevS,QAAQ,SAAC8V,EAAIzP,GAC/BzF,EAAQmV,iBAAiB1P,EAAMyP,EAAI/D,QAIvChW,KAAK4Z,gBAAkB/U,IA0DjBsR,EAAVhW,UAAAgZ,sBAAE,SAA8BY,EAAcE,OAA9C,KAAAA,IAA8CA,EAA9C,GACIja,KAAKqW,QAAQyD,kBAAkB,WAAM,MAAAI,YAAWH,EAAIE,MAItD9D,EAAFhW,UAAA0Z,qBAAE,WAAA,GAAF9Y,GAAAf,IACQA,MAAK4Z,iBACP5Z,KAAKwW,eAAevS,QAAQ,SAAC8V,EAAIzP,GAC/BvJ,EAAoB,gBAAEoZ,oBAAoB7P,EAAMyP,EAAI/D,OAI5DG,KSzQaiE,GACT,GAAI3R,GAAAA,eAAoC,6BAE5C4R,GAAA,WAqEE,QAAFA,GAAsB1Y,EACR2Y,EACAhN,EAC+CiN,EACJC,GAJnCxa,KAAtB2B,YAAsBA,EA1CM3B,KAA5B0Y,OAA6C,EAmBnC1Y,KAAViB,WAA+B,EAqBrBjB,KAAVwD,gBAAoC,EAQhCxD,KAAKya,eAAiBF,MACtBva,KAAK0a,gBAAkB,GAAIvE,IAAenW,KAAMsa,EAAQ3Y,EAAa2L,GAE/C,mBAAlBkN,IACFxa,KAAKya,eAAenC,WAAazC,cAAe,EAAGC,aAAc,IAqEvE,MA5GE1V,QAAFe,eACMkZ,EADNla,UAAA,gBAAE,WACiB,MAAOH,MAAKiB,eAC7B,SAAaG,GACXpB,KAAKiB,UAAYG,EACjBpB,KAAK2a,gEAQPva,OAAFe,eACMkZ,EADNla,UAAA,eAAE,WACgB,MAAOH,MAAK4a,UAAY5a,KAAK2B,YAAYC,mBACzD,SAAYiZ,GACV7a,KAAK4a,SAAWC,EAChB7a,KAAK2a,gEA2BPN,EAAFla,UAAA2a,SAAE,WACE9a,KAAKwD,gBAAiB,EACtBxD,KAAK2a,gCAGPN,EAAFla,UAAA4a,YAAE,WACE/a,KAAK0a,gBAAgBb,wBAIvBQ,EAAFla,UAAAuZ,WAAE,WACE1Z,KAAK0a,gBAAgBhB,cAOvBtZ,OAAFe,eAAMkZ,EAANla,UAAA,oBAAE,WACE,OACEoY,SAAUvY,KAAKuY,SACfG,OAAQ1Y,KAAK0Y,OACblX,MAAOxB,KAAKwB,MACZ8W,UAAN1I,KAAqB5P,KAAKya,eAAenC,UAActY,KAAKsY,WACtDT,qBAAsB7X,KAAKya,eAAe5C,uDAQ9CzX,OAAFe,eAAMkZ,EAANla,UAAA,sBAAE,WACE,MAAOH,MAAKqC,YAAcrC,KAAKya,eAAepY,0CAIxCgY,EAAVla,UAAAwa,6BAAE,YACO3a,KAAKqC,UAAYrC,KAAKwD,gBACzBxD,KAAK0a,gBAAgBf,mBAAmB3Z,KAAK6a,UAmBjDR,EAAFla,UAAA6a,OAAE,SAAOC,EAAkCrV,EAAe2P,GACtD,WADJ,KAAA3P,IAA2CA,EAA3C,GAC6B,gBAAdqV,GACFjb,KAAK0a,gBAAgBvD,aAAa8D,EAAWrV,EAA1DgK,KAAiE5P,KAAKsX,aAAiB/B,IAE1EvV,KAAK0a,gBAAgBvD,aAAa,EAAG,EAAlDvH,KAAyD5P,KAAKsX,aAAiB2D,oBAjJ/E3Q,KAACoK,EAAAA,UAAD/T,OACEgU,SAAU,4BACVuG,SAAU,YACVtG,MACEC,MAAS,aACTsG,+BAAgC,qDA5CpC7Q,KAAE8Q,EAAAA,aAIF9Q,KAAE+Q,EAAAA,SAPF/Q,KAAQkH,EAAAA,WAkHRlH,SAAAS,GAAAH,aAAAN,KAAeO,EAAAA,WAAfP,KAA2BQ,EAAAA,OAA3BnK,MAAkCyZ,QAClC9P,KAAA0C,OAAApC,aAAAN,KAAeO,EAAAA,WAAfP,KAA2BQ,EAAAA,OAA3BnK,MAAkC2a,EAAAA,8CA9DlC9Z,QAAA8I,KAAGiR,EAAAA,MAAH5a,MAAS,oBAGT6a,YAAAlR,KAAGiR,EAAAA,MAAH5a,MAAS,wBAMT4X,WAAAjO,KAAGiR,EAAAA,MAAH5a,MAAS,uBAOT+X,SAAApO,KAAGiR,EAAAA,MAAH5a,MAAS,qBAOT2X,YAAAhO,KAAGiR,EAAAA,MAAH5a,MAAS,wBAMT0B,WAAAiI,KAAGiR,EAAAA,MAAH5a,MAAS,uBAYTka,UAAAvQ,KAAGiR,EAAAA,MAAH5a,MAAS,uBAgGT0Z,KCrLAoB,GAAA,WAAA,QAAAA,MAK8B,sBAL9BnR,KAACC,EAAAA,SAAD5J,OACE6J,SAAU5B,EAAiBmJ,EAAAA,gBAC3BrH,SAAU2P,GAAWzR,GACrBoM,cAAeqF,QAEjBoB,KCeAC,GAAA,WAsBE,QAAFA,GAAgEC,GAAA3b,KAAhE2b,eAAgEA,EALrD3b,KAAXwV,MAA2C,YAGhCxV,KAAXqC,UAA+B,EAA/B,sBApBAiI,KAACsR,EAAAA,UAADjb,OAAAkb,cAAAC,EAAAA,kBAAAC,KACEC,gBAAiBC,EAAAA,wBAAnBC,OACEvH,SAAF,sBACEwH,QAAF,ugCACEC,SAAU,GACVxH,MACFC,MAAA,sBACMwH,4CAAN,4BACIC,sCAAJ,sBACIC,uCAAJ,WACIC,kCAAJ,4KAYAd,EAAAe,kEAFAf,KC7CAgB,GAAA,WAAA,QAAAA,MAIuC,sBAJvCpS,KAACC,EAAAA,SAAD5J,OACE+J,SAAUgR,IACV1G,cAAe0G,QAEjBgB,mBCFA,QAAAC,MAA+B,MAA/BA,MACaC,GACTrc,EAAcoc,IAGdE,GAA2B,EAK/BC,GAAA,SAAArc,GAAA,QAAAqc,KAAA,GAAA/b,GAAA,OAAAN,GAAAA,EAAAO,MAAAhB,KAAAa,YAAAb,WAsBEe,GAAFgc,SAAqB,sBAAsBF,OAH3C,MAFiC3b,GAAjC4b,EAAArc,kBAjBA6J,KAACsR,EAAAA,UAADjb,OAAAgU,SAAA,eACEuG,SAAU,cACVkB,SAAU,4JACVP,cAAFC,EAAAA,kBAAAC,KACEC,gBAAFC,EAAAA,wBAAAC,OACEc,QAAF,YACEb,QAAF,mkBACEvH,MACFC,MAAA,eACMoI,KAAN,QACIC,gCAAJ,WACIC,uBAAJ,sBACIC,yBAAJ,gBAIAN,EAAAL,wCAGAK,OZVIO,GAAmB,gBAIrB,QAAFC,GAEWC,EAEAC,OAAX,KAAAA,IAAWA,GAAX,GAFWxd,KAAXud,OAAWA,EAEAvd,KAAXwd,YAAWA,EACX,MAAAF,MAeaG,GACT,GAAIhV,GAAAA,eAAyC,+BAKjDiV,GAAA,WAwDE,QAAFA,GACYC,EACAC,EACiDC,EACpC/W,GAHb9G,KAAZ2d,SAAYA,EACA3d,KAAZ4d,mBAAYA,EACiD5d,KAA7D6d,QAA6DA,EACpC7d,KAAzB8G,MAAyBA,EApCf9G,KAAV8d,WAAsB,EACZ9d,KAAV+d,SAAoB,EACV/d,KAAViB,WAAsB,EACZjB,KAAVge,qBAAiC,GAYtBhe,KAAXie,GAAwB,cAAcZ,KAYjBrd,KAArBke,kBAAyC,GAAIC,GAAAA,aAGlCne,KAAXoe,cAA2B,GAAI3b,GAAAA,QAH/B,MArBErC,QAAFe,eAAMuc,EAANvd,UAAA,gBAAE,WAAiB,MAAOH,MAAK6d,SAAW7d,KAAK6d,QAAQQ,0CAGrDje,OAAFe,eAAMuc,EAANvd,UAAA,gBAAE,WAA0B,MAAOH,MAAK8d,2CAStC1d,OAAFe,eACMuc,EADNvd,UAAA,gBAAE,WACiB,MAAQH,MAAK8G,OAAS9G,KAAK8G,MAAMzE,UAAarC,KAAKiB,eACpE,SAAaG,GAAcpB,KAAKiB,UAAYI,EAAAA,sBAAsBD,oCAGlEhB,OAAFe,eAAMuc,EAANvd,UAAA,qBAAE,WAAsB,MAAOH,MAAK6d,SAAW7d,KAAK6d,QAAQS,+CAqB1Dle,OAAFe,eAAMuc,EAANvd,UAAA,cAAE,WACE,MAAOH,MAAK+d,yCAOd3d,OAAFe,eAAMuc,EAANvd,UAAA,iBAAE,WAEE,OAAQH,KAAKue,kBAAkBC,aAAe,IAAIC,wCAIpDf,EAAFvd,UAAAue,OAAE,WACO1e,KAAK8d,YACR9d,KAAK8d,WAAY,EACjB9d,KAAK4d,mBAAmBe,eACxB3e,KAAK4e,8BAKTlB,EAAFvd,UAAA0e,SAAE,WACM7e,KAAK8d,YACP9d,KAAK8d,WAAY,EACjB9d,KAAK4d,mBAAmBe,eACxB3e,KAAK4e,8BAKTlB,EAAFvd,UAAA2e,MAAE,WACF,GAAUja,GAAU7E,KAAKue,iBAEQ,mBAAlB1Z,GAAQia,OACjBja,EAAQia,SASZpB,EAAFvd,UAAA4e,gBAAE,WACO/e,KAAK+d,UACR/d,KAAK+d,SAAU,EACf/d,KAAK4d,mBAAmBe,iBAS5BjB,EAAFvd,UAAA6e,kBAAE,WACMhf,KAAK+d,UACP/d,KAAK+d,SAAU,EACf/d,KAAK4d,mBAAmBe,iBAK5BjB,EAAFvd,UAAA8e,SAAE,WACE,MAAOjf,MAAKkf,WAIdxB,EAAFvd,UAAAgf,eAAE,SAAenL,GACRA,EAAMoL,UAAYC,EAAAA,OAASrL,EAAMoL,UAAYE,EAAAA,OAAWC,EAAAA,eAAevL,KAC1EhU,KAAKwf,wBAGLxL,EAAMyL,mBAQV/B,EAAFvd,UAAAqf,sBAAE,WACOxf,KAAKqC,WACRrC,KAAK8d,WAAY9d,KAAKqe,WAAYre,KAAK8d,UACvC9d,KAAK4d,mBAAmBe,eACxB3e,KAAK4e,2BAA0B,KAUnClB,EAAFvd,UAAAuf,iBAAE,WACE,MAAO1f,MAAK2f,WAAa3f,KAAKqe,UAAmB,MAInDX,EAAFvd,UAAAyf,aAAE,WACE,MAAO5f,MAAKqC,SAAW,KAAO,KAIhCqb,EAAFvd,UAAAoe,gBAAE,WACE,MAAOve,MAAK2d,SAAS/b,eAGvB8b,EAAFvd,UAAA0f,mBAAE,WAME,GAAI7f,KAAK8d,UAAW,CACxB,GAAYoB,GAAYlf,KAAKkf,SAEnBA,KAAclf,KAAKge,uBACrBhe,KAAKge,qBAAuBkB,EAC5Blf,KAAKoe,cAAc9a,UAKzBoa,EAAFvd,UAAA4a,YAAE,WACE/a,KAAKoe,cAAcla,YAIbwZ,EAAVvd,UAAAye,0BAAE,SAAkCpB,OAApC,KAAAA,IAAoCA,GAApC,GACIxd,KAAKke,kBAAkB4B,KAAK,GAAIxC,IAAyBtd,KAAMwd,oBAzMnElT,KAACsR,EAAAA,UAADjb,OAAAgU,SAAA,aACEuG,SAAU,YACVtG,MACFqI,KAAA,SACM8C,kBAAN,iBACIC,uBAAJ,WACIC,8BAAJ,WACIC,qBAAsB,SACtBC,OAAJ,KACIC,uBAAJ,qBACIjD,uBAAJ,sBACIkD,8BAAJ,WACIC,UAAJ,0BACIC,YAAJ,yBACI1L,MAAS,cAEbsH,QAAA,43CACAC,SAAA,qWACEP,cAAFC,EAAAA,kBAAAC,KACEC,gBAAFC,EAAAA,wBAAAC,8FAnEA5R,SAAES,GAAFH,aAAAN,KAAAO,EAAAA,WAAAP,KAAAQ,EAAAA,OAAAnK,MAAA8c,QAFAnT,KAAEwS,GAAFlS,aAAAN,KAAAO,EAAAA,cAcA6S,EAAAjB,2DAwEApa,WAAAiI,KAAAiR,EAAAA,QAGA2C,oBAAA5T,KAAAkW,EAAAA,UAYA9C,KalGA+C,GAAA,WAAA,QAAAA,MAK8B,sBAL9BnW,KAACC,EAAAA,SAAD5J,OACE6J,SAAUiR,GAAiBiF,EAAAA,aAAchE,IACzChS,SAAUgT,GAAWZ,IACrB9H,cAAe0I,GAAWZ,QAE5B2D,KCVaE,GACX,GAAIlY,GAAAA,eAA6B,+iCCEhB,QAAS,QAAS,QAAS,QAAS,QAAS,QAAS,QAAS,QAAS,QACnF,QAAS,SAAU"}