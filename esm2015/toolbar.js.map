{"version":3,"file":"toolbar.js","sources":["../../../src/lib/toolbar/toolbar-module.ts","../../../src/lib/toolbar/toolbar.ts"],"sourcesContent":["/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport {NgModule} from '@angular/core';\r\nimport {MatCommonModule} from '@angular/material/core';\r\nimport {MatToolbar, MatToolbarRow} from './toolbar';\r\n\r\n\r\n@NgModule({\r\n  imports: [MatCommonModule],\r\n  exports: [MatToolbar, MatToolbarRow, MatCommonModule],\r\n  declarations: [MatToolbar, MatToolbarRow],\r\n})\r\nexport class MatToolbarModule {}\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport {Platform} from '@angular/cdk/platform';\r\nimport {DOCUMENT} from '@angular/common';\r\nimport {\r\n  AfterViewInit,\r\n  ChangeDetectionStrategy,\r\n  Component,\r\n  ContentChildren,\r\n  Directive,\r\n  ElementRef,\r\n  Inject,\r\n  isDevMode,\r\n  QueryList,\r\n  ViewEncapsulation,\r\n} from '@angular/core';\r\nimport {CanColor, CanColorCtor, mixinColor} from '@angular/material/core';\r\n\r\n\r\n// Boilerplate for applying mixins to MatToolbar.\r\n/** @docs-private */\r\nexport class MatToolbarBase {\r\n  constructor(public _elementRef: ElementRef) {}\r\n}\r\nexport const _MatToolbarMixinBase: CanColorCtor & typeof MatToolbarBase =\r\n    mixinColor(MatToolbarBase);\r\n\r\n@Directive({\r\n  selector: 'mat-toolbar-row',\r\n  exportAs: 'matToolbarRow',\r\n  host: {'class': 'mat-toolbar-row'},\r\n})\r\nexport class MatToolbarRow {}\r\n\r\n@Component({\r\n  moduleId: module.id,\r\n  selector: 'mat-toolbar',\r\n  exportAs: 'matToolbar',\r\n  templateUrl: 'toolbar.html',\r\n  styleUrls: ['toolbar.css'],\r\n  inputs: ['color'],\r\n  host: {\r\n    'class': 'mat-toolbar',\r\n    '[class.mat-toolbar-multiple-rows]': '_toolbarRows.length > 0',\r\n    '[class.mat-toolbar-single-row]': '_toolbarRows.length === 0',\r\n  },\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  encapsulation: ViewEncapsulation.None,\r\n})\r\nexport class MatToolbar extends _MatToolbarMixinBase implements CanColor, AfterViewInit {\r\n  private _document: Document;\r\n\r\n  /** Reference to all toolbar row elements that have been projected. */\r\n  @ContentChildren(MatToolbarRow) _toolbarRows: QueryList<MatToolbarRow>;\r\n\r\n  constructor(\r\n    elementRef: ElementRef,\r\n    private _platform: Platform,\r\n    @Inject(DOCUMENT) document?: any) {\r\n    super(elementRef);\r\n\r\n    // TODO: make the document a required param when doing breaking changes.\r\n    this._document = document;\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    if (!isDevMode() || !this._platform.isBrowser) {\r\n      return;\r\n    }\r\n\r\n    this._checkToolbarMixedModes();\r\n    this._toolbarRows.changes.subscribe(() => this._checkToolbarMixedModes());\r\n  }\r\n\r\n  /**\r\n   * Throws an exception when developers are attempting to combine the different toolbar row modes.\r\n   */\r\n  private _checkToolbarMixedModes() {\r\n    if (!this._toolbarRows.length) {\r\n      return;\r\n    }\r\n\r\n    // Check if there are any other DOM nodes that can display content but aren't inside of\r\n    // a <mat-toolbar-row> element.\r\n    const isCombinedUsage = Array.from<HTMLElement>(this._elementRef.nativeElement.childNodes)\r\n      .filter(node => !(node.classList && node.classList.contains('mat-toolbar-row')))\r\n      .filter(node => node.nodeType !== (this._document ? this._document.COMMENT_NODE : 8))\r\n      .some(node => !!(node.textContent && node.textContent.trim()));\r\n\r\n    if (isCombinedUsage) {\r\n      throwToolbarMixedModesError();\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Throws an exception when attempting to combine the different toolbar row modes.\r\n * @docs-private\r\n */\r\nexport function throwToolbarMixedModesError() {\r\n  throw Error('MatToolbar: Attempting to combine different toolbar modes. ' +\r\n    'Either specify multiple `<mat-toolbar-row>` elements explicitly or just place content ' +\r\n    'inside of a `<mat-toolbar>` for a single row.');\r\n}\r\n"],"names":[],"mappings":"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"}