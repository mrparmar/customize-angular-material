{"version":3,"file":"menu.js","sources":["../../../src/lib/menu/menu-module.ts","../../../src/lib/menu/menu-trigger.ts","../../../src/lib/menu/menu-directive.ts","../../../src/lib/menu/menu-item.ts","../../../src/lib/menu/menu-panel.ts","../../../src/lib/menu/menu-errors.ts","../../../src/lib/menu/menu-animations.ts","../../../src/lib/menu/menu-content.ts"],"sourcesContent":["/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport {OverlayModule} from '@angular/cdk/overlay';\r\nimport {CommonModule} from '@angular/common';\r\nimport {NgModule} from '@angular/core';\r\nimport {MatCommonModule, MatRippleModule} from '@angular/material/core';\r\nimport {MatMenuContent} from './menu-content';\r\nimport {MatMenu} from './menu-directive';\r\nimport {MatMenuItem} from './menu-item';\r\nimport {\r\n  MatMenuTrigger,\r\n  MAT_MENU_SCROLL_STRATEGY_FACTORY_PROVIDER,\r\n} from './menu-trigger';\r\n\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    MatCommonModule,\r\n    MatRippleModule,\r\n    OverlayModule,\r\n  ],\r\n  exports: [MatMenu, MatMenuItem, MatMenuTrigger, MatMenuContent, MatCommonModule],\r\n  declarations: [MatMenu, MatMenuItem, MatMenuTrigger, MatMenuContent],\r\n  providers: [MAT_MENU_SCROLL_STRATEGY_FACTORY_PROVIDER]\r\n})\r\nexport class MatMenuModule {}\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport {FocusMonitor, FocusOrigin, isFakeMousedownFromScreenReader} from '@angular/cdk/a11y';\r\nimport {Direction, Directionality} from '@angular/cdk/bidi';\r\nimport {LEFT_ARROW, RIGHT_ARROW} from '@angular/cdk/keycodes';\r\nimport {\r\n  FlexibleConnectedPositionStrategy,\r\n  HorizontalConnectionPos,\r\n  Overlay,\r\n  OverlayConfig,\r\n  OverlayRef,\r\n  VerticalConnectionPos,\r\n  ScrollStrategy,\r\n} from '@angular/cdk/overlay';\r\nimport {TemplatePortal} from '@angular/cdk/portal';\r\nimport {\r\n  AfterContentInit,\r\n  Directive,\r\n  ElementRef,\r\n  EventEmitter,\r\n  Inject,\r\n  InjectionToken,\r\n  Input,\r\n  OnDestroy,\r\n  Optional,\r\n  Output,\r\n  Self,\r\n  ViewContainerRef,\r\n} from '@angular/core';\r\nimport {normalizePassiveListenerOptions} from '@angular/cdk/platform';\r\nimport {asapScheduler, merge, of as observableOf, Subscription} from 'rxjs';\r\nimport {delay, filter, take, takeUntil} from 'rxjs/operators';\r\nimport {MatMenu} from './menu-directive';\r\nimport {throwMatMenuMissingError} from './menu-errors';\r\nimport {MatMenuItem} from './menu-item';\r\nimport {MatMenuPanel} from './menu-panel';\r\nimport {MenuPositionX, MenuPositionY} from './menu-positions';\r\n\r\n/** Injection token that determines the scroll handling while the menu is open. */\r\nexport const MAT_MENU_SCROLL_STRATEGY =\r\n    new InjectionToken<() => ScrollStrategy>('mat-menu-scroll-strategy');\r\n\r\n/** @docs-private */\r\nexport function MAT_MENU_SCROLL_STRATEGY_FACTORY(overlay: Overlay): () => ScrollStrategy {\r\n  return () => overlay.scrollStrategies.reposition();\r\n}\r\n\r\n/** @docs-private */\r\nexport const MAT_MENU_SCROLL_STRATEGY_FACTORY_PROVIDER = {\r\n  provide: MAT_MENU_SCROLL_STRATEGY,\r\n  deps: [Overlay],\r\n  useFactory: MAT_MENU_SCROLL_STRATEGY_FACTORY,\r\n};\r\n\r\n/** Default top padding of the menu panel. */\r\nexport const MENU_PANEL_TOP_PADDING = 8;\r\n\r\n/** Options for binding a passive event listener. */\r\nconst passiveEventListenerOptions = normalizePassiveListenerOptions({passive: true});\r\n\r\n// TODO(andrewseguin): Remove the kebab versions in favor of camelCased attribute selectors\r\n\r\n/**\r\n * This directive is intended to be used in conjunction with an mat-menu tag.  It is\r\n * responsible for toggling the display of the provided menu instance.\r\n */\r\n@Directive({\r\n  selector: `[mat-menu-trigger-for], [matMenuTriggerFor]`,\r\n  host: {\r\n    'aria-haspopup': 'true',\r\n    '[attr.aria-expanded]': 'menuOpen || null',\r\n    '(mousedown)': '_handleMousedown($event)',\r\n    '(keydown)': '_handleKeydown($event)',\r\n    '(click)': '_handleClick($event)',\r\n  },\r\n  exportAs: 'matMenuTrigger'\r\n})\r\nexport class MatMenuTrigger implements AfterContentInit, OnDestroy {\r\n  private _portal: TemplatePortal;\r\n  private _overlayRef: OverlayRef | null = null;\r\n  private _menuOpen: boolean = false;\r\n  private _closingActionsSubscription = Subscription.EMPTY;\r\n  private _hoverSubscription = Subscription.EMPTY;\r\n  private _menuCloseSubscription = Subscription.EMPTY;\r\n  private _scrollStrategy: () => ScrollStrategy;\r\n\r\n  /**\r\n   * Handles touch start events on the trigger.\r\n   * Needs to be an arrow function so we can easily use addEventListener and removeEventListener.\r\n   */\r\n  private _handleTouchStart = () => this._openedBy = 'touch';\r\n\r\n  // Tracking input type is necessary so it's possible to only auto-focus\r\n  // the first item of the list when the menu is opened via the keyboard\r\n  _openedBy: 'mouse' | 'touch' | null = null;\r\n\r\n  /**\r\n   * @deprecated\r\n   * @breaking-change 8.0.0\r\n   */\r\n  @Input('mat-menu-trigger-for')\r\n  get _deprecatedMatMenuTriggerFor(): MatMenuPanel { return this.menu; }\r\n  set _deprecatedMatMenuTriggerFor(v: MatMenuPanel) {\r\n    this.menu = v;\r\n  }\r\n\r\n  /** References the menu instance that the trigger is associated with. */\r\n  @Input('matMenuTriggerFor')\r\n  get menu() { return this._menu; }\r\n  set menu(menu: MatMenuPanel) {\r\n    if (menu === this._menu) {\r\n      return;\r\n    }\r\n\r\n    this._menu = menu;\r\n    this._menuCloseSubscription.unsubscribe();\r\n\r\n    if (menu) {\r\n      this._menuCloseSubscription = menu.close.asObservable().subscribe(reason => {\r\n        this._destroyMenu();\r\n\r\n        // If a click closed the menu, we should close the entire chain of nested menus.\r\n        if ((reason === 'click' || reason === 'tab') && this._parentMenu) {\r\n          this._parentMenu.closed.emit(reason);\r\n        }\r\n      });\r\n    }\r\n  }\r\n  private _menu: MatMenuPanel;\r\n\r\n  /** Data to be passed along to any lazily-rendered content. */\r\n  @Input('matMenuTriggerData') menuData: any;\r\n\r\n  /** Event emitted when the associated menu is opened. */\r\n  @Output() readonly menuOpened: EventEmitter<void> = new EventEmitter<void>();\r\n\r\n  /**\r\n   * Event emitted when the associated menu is opened.\r\n   * @deprecated Switch to `menuOpened` instead\r\n   * @breaking-change 8.0.0\r\n   */\r\n  // tslint:disable-next-line:no-output-on-prefix\r\n  @Output() readonly onMenuOpen: EventEmitter<void> = this.menuOpened;\r\n\r\n  /** Event emitted when the associated menu is closed. */\r\n  @Output() readonly menuClosed: EventEmitter<void> = new EventEmitter<void>();\r\n\r\n  /**\r\n   * Event emitted when the associated menu is closed.\r\n   * @deprecated Switch to `menuClosed` instead\r\n   * @breaking-change 8.0.0\r\n   */\r\n  // tslint:disable-next-line:no-output-on-prefix\r\n  @Output() readonly onMenuClose: EventEmitter<void> = this.menuClosed;\r\n\r\n  constructor(private _overlay: Overlay,\r\n              private _element: ElementRef<HTMLElement>,\r\n              private _viewContainerRef: ViewContainerRef,\r\n              @Inject(MAT_MENU_SCROLL_STRATEGY) scrollStrategy: any,\r\n              @Optional() private _parentMenu: MatMenu,\r\n              @Optional() @Self() private _menuItemInstance: MatMenuItem,\r\n              @Optional() private _dir: Directionality,\r\n              // TODO(crisbeto): make the _focusMonitor required when doing breaking changes.\r\n              // @breaking-change 8.0.0\r\n              private _focusMonitor?: FocusMonitor) {\r\n\r\n    _element.nativeElement.addEventListener('touchstart', this._handleTouchStart,\r\n        passiveEventListenerOptions);\r\n\r\n    if (_menuItemInstance) {\r\n      _menuItemInstance._triggersSubmenu = this.triggersSubmenu();\r\n    }\r\n\r\n    this._scrollStrategy = scrollStrategy;\r\n  }\r\n\r\n  ngAfterContentInit() {\r\n    this._checkMenu();\r\n    this._handleHover();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if (this._overlayRef) {\r\n      this._overlayRef.dispose();\r\n      this._overlayRef = null;\r\n    }\r\n\r\n    this._element.nativeElement.removeEventListener('touchstart', this._handleTouchStart,\r\n        passiveEventListenerOptions);\r\n\r\n    this._cleanUpSubscriptions();\r\n    this._closingActionsSubscription.unsubscribe();\r\n  }\r\n\r\n  /** Whether the menu is open. */\r\n  get menuOpen(): boolean {\r\n    return this._menuOpen;\r\n  }\r\n\r\n  /** The text direction of the containing app. */\r\n  get dir(): Direction {\r\n    return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\r\n  }\r\n\r\n  /** Whether the menu triggers a sub-menu or a top-level one. */\r\n  triggersSubmenu(): boolean {\r\n    return !!(this._menuItemInstance && this._parentMenu);\r\n  }\r\n\r\n  /** Toggles the menu between the open and closed states. */\r\n  toggleMenu(): void {\r\n    return this._menuOpen ? this.closeMenu() : this.openMenu();\r\n  }\r\n\r\n  /** Opens the menu. */\r\n  openMenu(): void {\r\n    if (this._menuOpen) {\r\n      return;\r\n    }\r\n\r\n    this._checkMenu();\r\n\r\n    const overlayRef = this._createOverlay();\r\n    const overlayConfig = overlayRef.getConfig();\r\n\r\n    this._setPosition(overlayConfig.positionStrategy as FlexibleConnectedPositionStrategy);\r\n    overlayConfig.hasBackdrop = this.menu.hasBackdrop == null ? !this.triggersSubmenu() :\r\n        this.menu.hasBackdrop;\r\n    overlayRef.attach(this._getPortal());\r\n\r\n    if (this.menu.lazyContent) {\r\n      this.menu.lazyContent.attach(this.menuData);\r\n    }\r\n\r\n    this._closingActionsSubscription = this._menuClosingActions().subscribe(() => this.closeMenu());\r\n    this._initMenu();\r\n\r\n    if (this.menu instanceof MatMenu) {\r\n      this.menu._startAnimation();\r\n    }\r\n  }\r\n\r\n  /** Closes the menu. */\r\n  closeMenu(): void {\r\n    this.menu.close.emit();\r\n  }\r\n\r\n  /**\r\n   * Focuses the menu trigger.\r\n   * @param origin Source of the menu trigger's focus.\r\n   */\r\n  focus(origin: FocusOrigin = 'program') {\r\n    if (this._focusMonitor) {\r\n      this._focusMonitor.focusVia(this._element, origin);\r\n    } else {\r\n      this._element.nativeElement.focus();\r\n    }\r\n  }\r\n\r\n  /** Closes the menu and does the necessary cleanup. */\r\n  private _destroyMenu() {\r\n    if (!this._overlayRef || !this.menuOpen) {\r\n      return;\r\n    }\r\n\r\n    const menu = this.menu;\r\n\r\n    this._closingActionsSubscription.unsubscribe();\r\n    this._overlayRef.detach();\r\n\r\n    if (menu instanceof MatMenu) {\r\n      menu._resetAnimation();\r\n\r\n      if (menu.lazyContent) {\r\n        // Wait for the exit animation to finish before detaching the content.\r\n        menu._animationDone\r\n          .pipe(\r\n            filter(event => event.toState === 'void'),\r\n            take(1),\r\n            // Interrupt if the content got re-attached.\r\n            takeUntil(menu.lazyContent._attached)\r\n          )\r\n          .subscribe(() => menu.lazyContent!.detach(), undefined, () => {\r\n            // No matter whether the content got re-attached, reset the menu.\r\n            this._resetMenu();\r\n          });\r\n      } else {\r\n        this._resetMenu();\r\n      }\r\n    } else {\r\n      this._resetMenu();\r\n\r\n      if (menu.lazyContent) {\r\n        menu.lazyContent.detach();\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * This method sets the menu state to open and focuses the first item if\r\n   * the menu was opened via the keyboard.\r\n   */\r\n  private _initMenu(): void {\r\n    this.menu.parentMenu = this.triggersSubmenu() ? this._parentMenu : undefined;\r\n    this.menu.direction = this.dir;\r\n    this._setMenuElevation();\r\n    this._setIsMenuOpen(true);\r\n    this.menu.focusFirstItem(this._openedBy || 'program');\r\n  }\r\n\r\n  /** Updates the menu elevation based on the amount of parent menus that it has. */\r\n  private _setMenuElevation(): void {\r\n    if (this.menu.setElevation) {\r\n      let depth = 0;\r\n      let parentMenu = this.menu.parentMenu;\r\n\r\n      while (parentMenu) {\r\n        depth++;\r\n        parentMenu = parentMenu.parentMenu;\r\n      }\r\n\r\n      this.menu.setElevation(depth);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * This method resets the menu when it's closed, most importantly restoring\r\n   * focus to the menu trigger if the menu was opened via the keyboard.\r\n   */\r\n  private _resetMenu(): void {\r\n    this._setIsMenuOpen(false);\r\n\r\n    // We should reset focus if the user is navigating using a keyboard or\r\n    // if we have a top-level trigger which might cause focus to be lost\r\n    // when clicking on the backdrop.\r\n    if (!this._openedBy) {\r\n      // Note that the focus style will show up both for `program` and\r\n      // `keyboard` so we don't have to specify which one it is.\r\n      this.focus();\r\n    } else if (!this.triggersSubmenu()) {\r\n      this.focus(this._openedBy);\r\n    }\r\n\r\n    this._openedBy = null;\r\n  }\r\n\r\n  // set state rather than toggle to support triggers sharing a menu\r\n  private _setIsMenuOpen(isOpen: boolean): void {\r\n    this._menuOpen = isOpen;\r\n    this._menuOpen ? this.menuOpened.emit() : this.menuClosed.emit();\r\n\r\n    if (this.triggersSubmenu()) {\r\n      this._menuItemInstance._highlighted = isOpen;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * This method checks that a valid instance of MatMenu has been passed into\r\n   * matMenuTriggerFor. If not, an exception is thrown.\r\n   */\r\n  private _checkMenu() {\r\n    if (!this.menu) {\r\n      throwMatMenuMissingError();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * This method creates the overlay from the provided menu's template and saves its\r\n   * OverlayRef so that it can be attached to the DOM when openMenu is called.\r\n   */\r\n  private _createOverlay(): OverlayRef {\r\n    if (!this._overlayRef) {\r\n      const config = this._getOverlayConfig();\r\n      this._subscribeToPositions(config.positionStrategy as FlexibleConnectedPositionStrategy);\r\n      this._overlayRef = this._overlay.create(config);\r\n\r\n      // Consume the `keydownEvents` in order to prevent them from going to another overlay.\r\n      // Ideally we'd also have our keyboard event logic in here, however doing so will\r\n      // break anybody that may have implemented the `MatMenuPanel` themselves.\r\n      this._overlayRef.keydownEvents().subscribe();\r\n    }\r\n\r\n    return this._overlayRef;\r\n  }\r\n\r\n  /**\r\n   * This method builds the configuration object needed to create the overlay, the OverlayState.\r\n   * @returns OverlayConfig\r\n   */\r\n  private _getOverlayConfig(): OverlayConfig {\r\n    return new OverlayConfig({\r\n      positionStrategy: this._overlay.position()\r\n          .flexibleConnectedTo(this._element)\r\n          .withLockedPosition()\r\n          .withTransformOriginOn('.mat-menu-panel'),\r\n      backdropClass: this.menu.backdropClass || 'cdk-overlay-transparent-backdrop',\r\n      scrollStrategy: this._scrollStrategy(),\r\n      direction: this._dir\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Listens to changes in the position of the overlay and sets the correct classes\r\n   * on the menu based on the new position. This ensures the animation origin is always\r\n   * correct, even if a fallback position is used for the overlay.\r\n   */\r\n  private _subscribeToPositions(position: FlexibleConnectedPositionStrategy): void {\r\n    if (this.menu.setPositionClasses) {\r\n      position.positionChanges.subscribe(change => {\r\n        const posX: MenuPositionX = change.connectionPair.overlayX === 'start' ? 'after' : 'before';\r\n        const posY: MenuPositionY = change.connectionPair.overlayY === 'top' ? 'below' : 'above';\r\n\r\n        this.menu.setPositionClasses!(posX, posY);\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Sets the appropriate positions on a position strategy\r\n   * so the overlay connects with the trigger correctly.\r\n   * @param positionStrategy Strategy whose position to update.\r\n   */\r\n  private _setPosition(positionStrategy: FlexibleConnectedPositionStrategy) {\r\n    let [originX, originFallbackX]: HorizontalConnectionPos[] =\r\n        this.menu.xPosition === 'before' ? ['end', 'start'] : ['start', 'end'];\r\n\r\n    let [overlayY, overlayFallbackY]: VerticalConnectionPos[] =\r\n        this.menu.yPosition === 'above' ? ['bottom', 'top'] : ['top', 'bottom'];\r\n\r\n    let [originY, originFallbackY] = [overlayY, overlayFallbackY];\r\n    let [overlayX, overlayFallbackX] = [originX, originFallbackX];\r\n    let offsetY = 0;\r\n\r\n    if (this.triggersSubmenu()) {\r\n      // When the menu is a sub-menu, it should always align itself\r\n      // to the edges of the trigger, instead of overlapping it.\r\n      overlayFallbackX = originX = this.menu.xPosition === 'before' ? 'start' : 'end';\r\n      originFallbackX = overlayX = originX === 'end' ? 'start' : 'end';\r\n      offsetY = overlayY === 'bottom' ? MENU_PANEL_TOP_PADDING : -MENU_PANEL_TOP_PADDING;\r\n    } else if (!this.menu.overlapTrigger) {\r\n      originY = overlayY === 'top' ? 'bottom' : 'top';\r\n      originFallbackY = overlayFallbackY === 'top' ? 'bottom' : 'top';\r\n    }\r\n\r\n    positionStrategy.withPositions([\r\n      {originX, originY, overlayX, overlayY, offsetY},\r\n      {originX: originFallbackX, originY, overlayX: overlayFallbackX, overlayY, offsetY},\r\n      {\r\n        originX,\r\n        originY: originFallbackY,\r\n        overlayX,\r\n        overlayY: overlayFallbackY,\r\n        offsetY: -offsetY\r\n      },\r\n      {\r\n        originX: originFallbackX,\r\n        originY: originFallbackY,\r\n        overlayX: overlayFallbackX,\r\n        overlayY: overlayFallbackY,\r\n        offsetY: -offsetY\r\n      }\r\n    ]);\r\n  }\r\n\r\n  /** Cleans up the active subscriptions. */\r\n  private _cleanUpSubscriptions(): void {\r\n    this._closingActionsSubscription.unsubscribe();\r\n    this._hoverSubscription.unsubscribe();\r\n  }\r\n\r\n  /** Returns a stream that emits whenever an action that should close the menu occurs. */\r\n  private _menuClosingActions() {\r\n    const backdrop = this._overlayRef!.backdropClick();\r\n    const detachments = this._overlayRef!.detachments();\r\n    const parentClose = this._parentMenu ? this._parentMenu.closed : observableOf();\r\n    const hover = this._parentMenu ? this._parentMenu._hovered().pipe(\r\n      filter(active => active !== this._menuItemInstance),\r\n      filter(() => this._menuOpen)\r\n    ) : observableOf();\r\n\r\n    return merge(backdrop, parentClose, hover, detachments);\r\n  }\r\n\r\n  /** Handles mouse presses on the trigger. */\r\n  _handleMousedown(event: MouseEvent): void {\r\n    if (!isFakeMousedownFromScreenReader(event)) {\r\n      // Since right or middle button clicks won't trigger the `click` event,\r\n      // we shouldn't consider the menu as opened by mouse in those cases.\r\n      this._openedBy = event.button === 0 ? 'mouse' : null;\r\n\r\n      // Since clicking on the trigger won't close the menu if it opens a sub-menu,\r\n      // we should prevent focus from moving onto it via click to avoid the\r\n      // highlight from lingering on the menu item.\r\n      if (this.triggersSubmenu()) {\r\n        event.preventDefault();\r\n      }\r\n    }\r\n  }\r\n\r\n  /** Handles key presses on the trigger. */\r\n  _handleKeydown(event: KeyboardEvent): void {\r\n    const keyCode = event.keyCode;\r\n\r\n    if (this.triggersSubmenu() && (\r\n            (keyCode === RIGHT_ARROW && this.dir === 'ltr') ||\r\n            (keyCode === LEFT_ARROW && this.dir === 'rtl'))) {\r\n      this.openMenu();\r\n    }\r\n  }\r\n\r\n  /** Handles click events on the trigger. */\r\n  _handleClick(event: MouseEvent): void {\r\n    if (this.triggersSubmenu()) {\r\n      // Stop event propagation to avoid closing the parent menu.\r\n      event.stopPropagation();\r\n      this.openMenu();\r\n    } else {\r\n      this.toggleMenu();\r\n    }\r\n  }\r\n\r\n  /** Handles the cases where the user hovers over the trigger. */\r\n  private _handleHover() {\r\n    // Subscribe to changes in the hovered item in order to toggle the panel.\r\n    if (!this.triggersSubmenu()) {\r\n      return;\r\n    }\r\n\r\n    this._hoverSubscription = this._parentMenu._hovered()\r\n      // Since we might have multiple competing triggers for the same menu (e.g. a sub-menu\r\n      // with different data and triggers), we have to delay it by a tick to ensure that\r\n      // it won't be closed immediately after it is opened.\r\n      .pipe(\r\n        filter(active => active === this._menuItemInstance && !active.disabled),\r\n        delay(0, asapScheduler)\r\n      )\r\n      .subscribe(() => {\r\n        this._openedBy = 'mouse';\r\n\r\n        // If the same menu is used between multiple triggers, it might still be animating\r\n        // while the new trigger tries to re-open it. Wait for the animation to finish\r\n        // before doing so. Also interrupt if the user moves to another item.\r\n        if (this.menu instanceof MatMenu && this.menu._isAnimating) {\r\n          // We need the `delay(0)` here in order to avoid\r\n          // 'changed after checked' errors in some cases. See #12194.\r\n          this.menu._animationDone\r\n            .pipe(take(1), delay(0, asapScheduler), takeUntil(this._parentMenu._hovered()))\r\n            .subscribe(() => this.openMenu());\r\n        } else {\r\n          this.openMenu();\r\n        }\r\n      });\r\n  }\r\n\r\n  /** Gets the portal that should be attached to the overlay. */\r\n  private _getPortal(): TemplatePortal {\r\n    // Note that we can avoid this check by keeping the portal on the menu panel.\r\n    // While it would be cleaner, we'd have to introduce another required method on\r\n    // `MatMenuPanel`, making it harder to consume.\r\n    if (!this._portal || this._portal.templateRef !== this.menu.templateRef) {\r\n      this._portal = new TemplatePortal(this.menu.templateRef, this._viewContainerRef);\r\n    }\r\n\r\n    return this._portal;\r\n  }\r\n\r\n}\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport {FocusKeyManager, FocusOrigin} from '@angular/cdk/a11y';\r\nimport {Direction} from '@angular/cdk/bidi';\r\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\r\nimport {ESCAPE, LEFT_ARROW, RIGHT_ARROW, DOWN_ARROW, UP_ARROW} from '@angular/cdk/keycodes';\r\nimport {\r\n  AfterContentInit,\r\n  ChangeDetectionStrategy,\r\n  Component,\r\n  ContentChild,\r\n  ContentChildren,\r\n  ElementRef,\r\n  EventEmitter,\r\n  Inject,\r\n  InjectionToken,\r\n  Input,\r\n  NgZone,\r\n  OnDestroy,\r\n  Output,\r\n  TemplateRef,\r\n  QueryList,\r\n  ViewChild,\r\n  ViewEncapsulation,\r\n  OnInit,\r\n} from '@angular/core';\r\nimport {merge, Observable, Subject, Subscription} from 'rxjs';\r\nimport {startWith, switchMap, take} from 'rxjs/operators';\r\nimport {matMenuAnimations} from './menu-animations';\r\nimport {MatMenuContent} from './menu-content';\r\nimport {throwMatMenuInvalidPositionX, throwMatMenuInvalidPositionY} from './menu-errors';\r\nimport {MatMenuItem} from './menu-item';\r\nimport {MAT_MENU_PANEL, MatMenuPanel} from './menu-panel';\r\nimport {MenuPositionX, MenuPositionY} from './menu-positions';\r\nimport {AnimationEvent} from '@angular/animations';\r\n\r\n\r\n/** Default `mat-menu` options that can be overridden. */\r\nexport interface MatMenuDefaultOptions {\r\n  /** The x-axis position of the menu. */\r\n  xPosition: MenuPositionX;\r\n\r\n  /** The y-axis position of the menu. */\r\n  yPosition: MenuPositionY;\r\n\r\n  /** Whether the menu should overlap the menu trigger. */\r\n  overlapTrigger: boolean;\r\n\r\n  /** Class to be applied to the menu's backdrop. */\r\n  backdropClass: string;\r\n\r\n  /** Whether the menu has a backdrop. */\r\n  hasBackdrop?: boolean;\r\n}\r\n\r\n/** Injection token to be used to override the default options for `mat-menu`. */\r\nexport const MAT_MENU_DEFAULT_OPTIONS =\r\n    new InjectionToken<MatMenuDefaultOptions>('mat-menu-default-options', {\r\n      providedIn: 'root',\r\n      factory: MAT_MENU_DEFAULT_OPTIONS_FACTORY\r\n    });\r\n\r\n/** @docs-private */\r\nexport function MAT_MENU_DEFAULT_OPTIONS_FACTORY(): MatMenuDefaultOptions {\r\n  return {\r\n    overlapTrigger: false,\r\n    xPosition: 'after',\r\n    yPosition: 'below',\r\n    backdropClass: 'cdk-overlay-transparent-backdrop',\r\n  };\r\n}\r\n/**\r\n * Start elevation for the menu panel.\r\n * @docs-private\r\n */\r\nconst MAT_MENU_BASE_ELEVATION = 4;\r\n\r\n\r\n@Component({\r\n  moduleId: module.id,\r\n  selector: 'mat-menu',\r\n  templateUrl: 'menu.html',\r\n  styleUrls: ['menu.css'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  encapsulation: ViewEncapsulation.None,\r\n  exportAs: 'matMenu',\r\n  animations: [\r\n    matMenuAnimations.transformMenu,\r\n    matMenuAnimations.fadeInItems\r\n  ],\r\n  providers: [\r\n    {provide: MAT_MENU_PANEL, useExisting: MatMenu}\r\n  ]\r\n})\r\nexport class MatMenu implements AfterContentInit, MatMenuPanel<MatMenuItem>, OnInit, OnDestroy {\r\n  private _keyManager: FocusKeyManager<MatMenuItem>;\r\n  private _xPosition: MenuPositionX = this._defaultOptions.xPosition;\r\n  private _yPosition: MenuPositionY = this._defaultOptions.yPosition;\r\n  private _previousElevation: string;\r\n\r\n  /** Menu items inside the current menu. */\r\n  private _items: MatMenuItem[] = [];\r\n\r\n  /** Emits whenever the amount of menu items changes. */\r\n  private _itemChanges = new Subject<MatMenuItem[]>();\r\n\r\n  /** Subscription to tab events on the menu panel */\r\n  private _tabSubscription = Subscription.EMPTY;\r\n\r\n  /** Config object to be passed into the menu's ngClass */\r\n  _classList: {[key: string]: boolean} = {};\r\n\r\n  /** Current state of the panel animation. */\r\n  _panelAnimationState: 'void' | 'enter' = 'void';\r\n\r\n  /** Emits whenever an animation on the menu completes. */\r\n  _animationDone = new Subject<AnimationEvent>();\r\n\r\n  /** Whether the menu is animating. */\r\n  _isAnimating: boolean;\r\n\r\n  /** Parent menu of the current menu panel. */\r\n  parentMenu: MatMenuPanel | undefined;\r\n\r\n  /** Layout direction of the menu. */\r\n  direction: Direction;\r\n\r\n  /** Class to be added to the backdrop element. */\r\n  @Input() backdropClass: string = this._defaultOptions.backdropClass;\r\n\r\n  /** Position of the menu in the X axis. */\r\n  @Input()\r\n  get xPosition(): MenuPositionX { return this._xPosition; }\r\n  set xPosition(value: MenuPositionX) {\r\n    if (value !== 'before' && value !== 'after') {\r\n      throwMatMenuInvalidPositionX();\r\n    }\r\n    this._xPosition = value;\r\n    this.setPositionClasses();\r\n  }\r\n\r\n  /** Position of the menu in the Y axis. */\r\n  @Input()\r\n  get yPosition(): MenuPositionY { return this._yPosition; }\r\n  set yPosition(value: MenuPositionY) {\r\n    if (value !== 'above' && value !== 'below') {\r\n      throwMatMenuInvalidPositionY();\r\n    }\r\n    this._yPosition = value;\r\n    this.setPositionClasses();\r\n  }\r\n\r\n  /** @docs-private */\r\n  @ViewChild(TemplateRef) templateRef: TemplateRef<any>;\r\n\r\n  /**\r\n   * List of the items inside of a menu.\r\n   * @deprecated\r\n   * @breaking-change 8.0.0\r\n   */\r\n  @ContentChildren(MatMenuItem) items: QueryList<MatMenuItem>;\r\n\r\n  /**\r\n   * Menu content that will be rendered lazily.\r\n   * @docs-private\r\n   */\r\n  @ContentChild(MatMenuContent) lazyContent: MatMenuContent;\r\n\r\n  /** Whether the menu should overlap its trigger. */\r\n  @Input()\r\n  get overlapTrigger(): boolean { return this._overlapTrigger; }\r\n  set overlapTrigger(value: boolean) {\r\n    this._overlapTrigger = coerceBooleanProperty(value);\r\n  }\r\n  private _overlapTrigger: boolean = this._defaultOptions.overlapTrigger;\r\n\r\n  /** Whether the menu has a backdrop. */\r\n  @Input()\r\n  get hasBackdrop(): boolean | undefined { return this._hasBackdrop; }\r\n  set hasBackdrop(value: boolean | undefined) {\r\n    this._hasBackdrop = coerceBooleanProperty(value);\r\n  }\r\n  private _hasBackdrop: boolean | undefined = this._defaultOptions.hasBackdrop;\r\n\r\n  /**\r\n   * This method takes classes set on the host mat-menu element and applies them on the\r\n   * menu template that displays in the overlay container.  Otherwise, it's difficult\r\n   * to style the containing menu from outside the component.\r\n   * @param classes list of class names\r\n   */\r\n  @Input('class')\r\n  set panelClass(classes: string) {\r\n    const previousPanelClass = this._previousPanelClass;\r\n\r\n    if (previousPanelClass && previousPanelClass.length) {\r\n      previousPanelClass.split(' ').forEach((className: string) => {\r\n        this._classList[className] = false;\r\n      });\r\n    }\r\n\r\n    this._previousPanelClass = classes;\r\n\r\n    if (classes && classes.length) {\r\n      classes.split(' ').forEach((className: string) => {\r\n        this._classList[className] = true;\r\n      });\r\n\r\n      this._elementRef.nativeElement.className = '';\r\n    }\r\n  }\r\n  private _previousPanelClass: string;\r\n\r\n  /**\r\n   * This method takes classes set on the host mat-menu element and applies them on the\r\n   * menu template that displays in the overlay container.  Otherwise, it's difficult\r\n   * to style the containing menu from outside the component.\r\n   * @deprecated Use `panelClass` instead.\r\n   * @breaking-change 8.0.0\r\n   */\r\n  @Input()\r\n  get classList(): string { return this.panelClass; }\r\n  set classList(classes: string) { this.panelClass = classes; }\r\n\r\n  /** Event emitted when the menu is closed. */\r\n  @Output() readonly closed: EventEmitter<void | 'click' | 'keydown' | 'tab'> =\r\n      new EventEmitter<void | 'click' | 'keydown' | 'tab'>();\r\n\r\n  /**\r\n   * Event emitted when the menu is closed.\r\n   * @deprecated Switch to `closed` instead\r\n   * @breaking-change 8.0.0\r\n   */\r\n  @Output() close = this.closed;\r\n\r\n  constructor(\r\n    private _elementRef: ElementRef<HTMLElement>,\r\n    private _ngZone: NgZone,\r\n    @Inject(MAT_MENU_DEFAULT_OPTIONS) private _defaultOptions: MatMenuDefaultOptions) { }\r\n\r\n  ngOnInit() {\r\n    this.setPositionClasses();\r\n  }\r\n\r\n  ngAfterContentInit() {\r\n    this._keyManager = new FocusKeyManager<MatMenuItem>(this._items).withWrap().withTypeAhead();\r\n    this._tabSubscription = this._keyManager.tabOut.subscribe(() => this.closed.emit('tab'));\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this._tabSubscription.unsubscribe();\r\n    this.closed.complete();\r\n  }\r\n\r\n  /** Stream that emits whenever the hovered menu item changes. */\r\n  _hovered(): Observable<MatMenuItem> {\r\n    return this._itemChanges.pipe(\r\n      startWith(this._items),\r\n      switchMap(items => merge(...items.map(item => item._hovered)))\r\n    );\r\n  }\r\n\r\n  /** Handle a keyboard event from the menu, delegating to the appropriate action. */\r\n  _handleKeydown(event: KeyboardEvent) {\r\n    const keyCode = event.keyCode;\r\n\r\n    switch (keyCode) {\r\n      case ESCAPE:\r\n        this.closed.emit('keydown');\r\n      break;\r\n      case LEFT_ARROW:\r\n        if (this.parentMenu && this.direction === 'ltr') {\r\n          this.closed.emit('keydown');\r\n        }\r\n      break;\r\n      case RIGHT_ARROW:\r\n        if (this.parentMenu && this.direction === 'rtl') {\r\n          this.closed.emit('keydown');\r\n        }\r\n      break;\r\n      default:\r\n        if (keyCode === UP_ARROW || keyCode === DOWN_ARROW) {\r\n          this._keyManager.setFocusOrigin('keyboard');\r\n        }\r\n\r\n        this._keyManager.onKeydown(event);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Focus the first item in the menu.\r\n   * @param origin Action from which the focus originated. Used to set the correct styling.\r\n   */\r\n  focusFirstItem(origin: FocusOrigin = 'program'): void {\r\n    // When the content is rendered lazily, it takes a bit before the items are inside the DOM.\r\n    if (this.lazyContent) {\r\n      this._ngZone.onStable.asObservable()\r\n        .pipe(take(1))\r\n        .subscribe(() => this._keyManager.setFocusOrigin(origin).setFirstItemActive());\r\n    } else {\r\n      this._keyManager.setFocusOrigin(origin).setFirstItemActive();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Resets the active item in the menu. This is used when the menu is opened, allowing\r\n   * the user to start from the first option when pressing the down arrow.\r\n   */\r\n  resetActiveItem() {\r\n    this._keyManager.setActiveItem(-1);\r\n  }\r\n\r\n  /**\r\n   * Sets the menu panel elevation.\r\n   * @param depth Number of parent menus that come before the menu.\r\n   */\r\n  setElevation(depth: number): void {\r\n    // The elevation starts at the base and increases by one for each level.\r\n    const newElevation = `mat-elevation-z${MAT_MENU_BASE_ELEVATION + depth}`;\r\n    const customElevation = Object.keys(this._classList).find(c => c.startsWith('mat-elevation-z'));\r\n\r\n    if (!customElevation || customElevation === this._previousElevation) {\r\n      if (this._previousElevation) {\r\n        this._classList[this._previousElevation] = false;\r\n      }\r\n\r\n      this._classList[newElevation] = true;\r\n      this._previousElevation = newElevation;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Registers a menu item with the menu.\r\n   * @docs-private\r\n   */\r\n  addItem(item: MatMenuItem) {\r\n    // We register the items through this method, rather than picking them up through\r\n    // `ContentChildren`, because we need the items to be picked up by their closest\r\n    // `mat-menu` ancestor. If we used `@ContentChildren(MatMenuItem, {descendants: true})`,\r\n    // all descendant items will bleed into the top-level menu in the case where the consumer\r\n    // has `mat-menu` instances nested inside each other.\r\n    if (this._items.indexOf(item) === -1) {\r\n      this._items.push(item);\r\n      this._itemChanges.next(this._items);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Removes an item from the menu.\r\n   * @docs-private\r\n   */\r\n  removeItem(item: MatMenuItem) {\r\n    const index = this._items.indexOf(item);\r\n\r\n    if (this._items.indexOf(item) > -1) {\r\n      this._items.splice(index, 1);\r\n      this._itemChanges.next(this._items);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Adds classes to the menu panel based on its position. Can be used by\r\n   * consumers to add specific styling based on the position.\r\n   * @param posX Position of the menu along the x axis.\r\n   * @param posY Position of the menu along the y axis.\r\n   * @docs-private\r\n   */\r\n  setPositionClasses(posX: MenuPositionX = this.xPosition, posY: MenuPositionY = this.yPosition) {\r\n    const classes = this._classList;\r\n    classes['mat-menu-before'] = posX === 'before';\r\n    classes['mat-menu-after'] = posX === 'after';\r\n    classes['mat-menu-above'] = posY === 'above';\r\n    classes['mat-menu-below'] = posY === 'below';\r\n  }\r\n\r\n  /** Starts the enter animation. */\r\n  _startAnimation() {\r\n    // @breaking-change 8.0.0 Combine with _resetAnimation.\r\n    this._panelAnimationState = 'enter';\r\n  }\r\n\r\n  /** Resets the panel animation to its initial state. */\r\n  _resetAnimation() {\r\n    // @breaking-change 8.0.0 Combine with _startAnimation.\r\n    this._panelAnimationState = 'void';\r\n  }\r\n\r\n  /** Callback that is invoked when the panel animation completes. */\r\n  _onAnimationDone(event: AnimationEvent) {\r\n    this._animationDone.next(event);\r\n    this._isAnimating = false;\r\n  }\r\n\r\n  _onAnimationStart(event: AnimationEvent) {\r\n    this._isAnimating = true;\r\n\r\n    // Scroll the content element to the top as soon as the animation starts. This is necessary,\r\n    // because we move focus to the first item while it's still being animated, which can throw\r\n    // the browser off when it determines the scroll position. Alternatively we can move focus\r\n    // when the animation is done, however moving focus asynchronously will interrupt screen\r\n    // readers which are in the process of reading out the menu already. We take the `element`\r\n    // from the `event` since we can't use a `ViewChild` to access the pane.\r\n    if (event.toState === 'enter' && this._keyManager.activeItemIndex === 0) {\r\n      event.element.scrollTop = 0;\r\n    }\r\n  }\r\n}\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport {FocusableOption, FocusMonitor, FocusOrigin} from '@angular/cdk/a11y';\r\nimport {\r\n  ChangeDetectionStrategy,\r\n  Component,\r\n  ElementRef,\r\n  OnDestroy,\r\n  ViewEncapsulation,\r\n  Inject,\r\n  Optional,\r\n  Input,\r\n} from '@angular/core';\r\nimport {\r\n  CanDisable, CanDisableCtor,\r\n  CanDisableRipple, CanDisableRippleCtor,\r\n  mixinDisabled,\r\n  mixinDisableRipple,\r\n} from '@angular/material/core';\r\nimport {Subject} from 'rxjs';\r\nimport {DOCUMENT} from '@angular/common';\r\nimport {MAT_MENU_PANEL, MatMenuPanel} from './menu-panel';\r\n\r\n// Boilerplate for applying mixins to MatMenuItem.\r\n/** @docs-private */\r\nexport class MatMenuItemBase {}\r\nexport const _MatMenuItemMixinBase: CanDisableRippleCtor & CanDisableCtor & typeof MatMenuItemBase =\r\n    mixinDisableRipple(mixinDisabled(MatMenuItemBase));\r\n\r\n/**\r\n * This directive is intended to be used inside an mat-menu tag.\r\n * It exists mostly to set the role attribute.\r\n */\r\n@Component({\r\n  moduleId: module.id,\r\n  selector: '[mat-menu-item]',\r\n  exportAs: 'matMenuItem',\r\n  inputs: ['disabled', 'disableRipple'],\r\n  host: {\r\n    '[attr.role]': 'role',\r\n    'class': 'mat-menu-item',\r\n    '[class.mat-menu-item-highlighted]': '_highlighted',\r\n    '[class.mat-menu-item-submenu-trigger]': '_triggersSubmenu',\r\n    '[attr.tabindex]': '_getTabIndex()',\r\n    '[attr.aria-disabled]': 'disabled.toString()',\r\n    '[attr.disabled]': 'disabled || null',\r\n    '(click)': '_checkDisabled($event)',\r\n    '(mouseenter)': '_handleMouseEnter()',\r\n  },\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  encapsulation: ViewEncapsulation.None,\r\n  templateUrl: 'menu-item.html',\r\n})\r\nexport class MatMenuItem extends _MatMenuItemMixinBase\r\n    implements FocusableOption, CanDisable, CanDisableRipple, OnDestroy {\r\n\r\n  /** ARIA role for the menu item. */\r\n  @Input() role: 'menuitem' | 'menuitemradio' | 'menuitemcheckbox' = 'menuitem';\r\n\r\n  private _document: Document;\r\n\r\n  /** Stream that emits when the menu item is hovered. */\r\n  readonly _hovered: Subject<MatMenuItem> = new Subject<MatMenuItem>();\r\n\r\n  /** Whether the menu item is highlighted. */\r\n  _highlighted: boolean = false;\r\n\r\n  /** Whether the menu item acts as a trigger for a sub-menu. */\r\n  _triggersSubmenu: boolean = false;\r\n\r\n  constructor(\r\n    private _elementRef: ElementRef<HTMLElement>,\r\n    @Inject(DOCUMENT) document?: any,\r\n    private _focusMonitor?: FocusMonitor,\r\n    @Inject(MAT_MENU_PANEL) @Optional() private _parentMenu?: MatMenuPanel<MatMenuItem>) {\r\n\r\n    // @breaking-change 8.0.0 make `_focusMonitor` and `document` required params.\r\n    super();\r\n\r\n    if (_focusMonitor) {\r\n      // Start monitoring the element so it gets the appropriate focused classes. We want\r\n      // to show the focus style for menu items only when the focus was not caused by a\r\n      // mouse or touch interaction.\r\n      _focusMonitor.monitor(this._elementRef, false);\r\n    }\r\n\r\n    if (_parentMenu && _parentMenu.addItem) {\r\n      _parentMenu.addItem(this);\r\n    }\r\n\r\n    this._document = document;\r\n  }\r\n\r\n  /** Focuses the menu item. */\r\n  focus(origin: FocusOrigin = 'program'): void {\r\n    if (this._focusMonitor) {\r\n      this._focusMonitor.focusVia(this._getHostElement(), origin);\r\n    } else {\r\n      this._getHostElement().focus();\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if (this._focusMonitor) {\r\n      this._focusMonitor.stopMonitoring(this._elementRef);\r\n    }\r\n\r\n    if (this._parentMenu && this._parentMenu.removeItem) {\r\n      this._parentMenu.removeItem(this);\r\n    }\r\n\r\n    this._hovered.complete();\r\n  }\r\n\r\n  /** Used to set the `tabindex`. */\r\n  _getTabIndex(): string {\r\n    return this.disabled ? '-1' : '0';\r\n  }\r\n\r\n  /** Returns the host DOM element. */\r\n  _getHostElement(): HTMLElement {\r\n    return this._elementRef.nativeElement;\r\n  }\r\n\r\n  /** Prevents the default element actions if it is disabled. */\r\n  _checkDisabled(event: Event): void {\r\n    if (this.disabled) {\r\n      event.preventDefault();\r\n      event.stopPropagation();\r\n    }\r\n  }\r\n\r\n  /** Emits to the hover stream. */\r\n  _handleMouseEnter() {\r\n    this._hovered.next(this);\r\n  }\r\n\r\n  /** Gets the label to be used when determining whether the option should be focused. */\r\n  getLabel(): string {\r\n    const element: HTMLElement = this._elementRef.nativeElement;\r\n    const textNodeType = this._document ? this._document.TEXT_NODE : 3;\r\n    let output = '';\r\n\r\n    if (element.childNodes) {\r\n      const length = element.childNodes.length;\r\n\r\n      // Go through all the top-level text nodes and extract their text.\r\n      // We skip anything that's not a text node to prevent the text from\r\n      // being thrown off by something like an icon.\r\n      for (let i = 0; i < length; i++) {\r\n        if (element.childNodes[i].nodeType === textNodeType) {\r\n          output += element.childNodes[i].textContent;\r\n        }\r\n      }\r\n    }\r\n\r\n    return output.trim();\r\n  }\r\n\r\n}\r\n\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport {EventEmitter, TemplateRef, InjectionToken} from '@angular/core';\r\nimport {MenuPositionX, MenuPositionY} from './menu-positions';\r\nimport {Direction} from '@angular/cdk/bidi';\r\nimport {FocusOrigin} from '@angular/cdk/a11y';\r\nimport {MatMenuContent} from './menu-content';\r\n\r\n/**\r\n * Injection token used to provide the parent menu to menu-specific components.\r\n * @docs-private\r\n */\r\nexport const MAT_MENU_PANEL = new InjectionToken<MatMenuPanel>('MAT_MENU_PANEL');\r\n\r\n/**\r\n * Interface for a custom menu panel that can be used with `matMenuTriggerFor`.\r\n * @docs-private\r\n */\r\nexport interface MatMenuPanel<T = any> {\r\n  xPosition: MenuPositionX;\r\n  yPosition: MenuPositionY;\r\n  overlapTrigger: boolean;\r\n  templateRef: TemplateRef<any>;\r\n  close: EventEmitter<void | 'click' | 'keydown' | 'tab'>;\r\n  parentMenu?: MatMenuPanel | undefined;\r\n  direction?: Direction;\r\n  focusFirstItem: (origin?: FocusOrigin) => void;\r\n  resetActiveItem: () => void;\r\n  setPositionClasses?: (x: MenuPositionX, y: MenuPositionY) => void;\r\n  setElevation?(depth: number): void;\r\n  lazyContent?: MatMenuContent;\r\n  backdropClass?: string;\r\n  hasBackdrop?: boolean;\r\n  addItem?: (item: T) => void;\r\n  removeItem?: (item: T) => void;\r\n}\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\n/**\r\n * Throws an exception for the case when menu trigger doesn't have a valid mat-menu instance\r\n * @docs-private\r\n */\r\nexport function throwMatMenuMissingError() {\r\n  throw Error(`matMenuTriggerFor: must pass in an mat-menu instance.\r\n\r\n    Example:\r\n      <mat-menu #menu=\"matMenu\"></mat-menu>\r\n      <button [matMenuTriggerFor]=\"menu\"></button>`);\r\n}\r\n\r\n/**\r\n * Throws an exception for the case when menu's x-position value isn't valid.\r\n * In other words, it doesn't match 'before' or 'after'.\r\n * @docs-private\r\n */\r\nexport function throwMatMenuInvalidPositionX() {\r\n  throw Error(`xPosition value must be either 'before' or after'.\r\n      Example: <mat-menu xPosition=\"before\" #menu=\"matMenu\"></mat-menu>`);\r\n}\r\n\r\n/**\r\n * Throws an exception for the case when menu's y-position value isn't valid.\r\n * In other words, it doesn't match 'above' or 'below'.\r\n * @docs-private\r\n */\r\nexport function throwMatMenuInvalidPositionY() {\r\n  throw Error(`yPosition value must be either 'above' or below'.\r\n      Example: <mat-menu yPosition=\"above\" #menu=\"matMenu\"></mat-menu>`);\r\n}\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport{\r\n  trigger,\r\n  state,\r\n  style,\r\n  animate,\r\n  transition,\r\n  query,\r\n  group,\r\n  AnimationTriggerMetadata,\r\n} from '@angular/animations';\r\n\r\n/**\r\n * Animations used by the mat-menu component.\r\n * Animation duration and timing values are based on:\r\n * https://material.io/guidelines/components/menus.html#menus-usage\r\n * @docs-private\r\n */\r\nexport const matMenuAnimations: {\r\n  readonly transformMenu: AnimationTriggerMetadata;\r\n  readonly fadeInItems: AnimationTriggerMetadata;\r\n} = {\r\n  /**\r\n   * This animation controls the menu panel's entry and exit from the page.\r\n   *\r\n   * When the menu panel is added to the DOM, it scales in and fades in its border.\r\n   *\r\n   * When the menu panel is removed from the DOM, it simply fades out after a brief\r\n   * delay to display the ripple.\r\n   */\r\n  transformMenu: trigger('transformMenu', [\r\n    state('void', style({\r\n      opacity: 0,\r\n      transform: 'scale(0.8)'\r\n    })),\r\n    transition('void => enter', group([\r\n      query('.mat-menu-content', animate('100ms linear', style({opacity: 1}))),\r\n      animate('120ms cubic-bezier(0, 0, 0.2, 1)', style({transform: 'scale(1)'})),\r\n    ])),\r\n    transition('* => void', animate('100ms 25ms linear', style({opacity: 0})))\r\n  ]),\r\n\r\n\r\n  /**\r\n   * This animation fades in the background color and content of the menu panel\r\n   * after its containing element is scaled in.\r\n   */\r\n  fadeInItems: trigger('fadeInItems', [\r\n    // TODO(crisbeto): this is inside the `transformMenu`\r\n    // now. Remove next time we do breaking changes.\r\n    state('showing', style({opacity: 1})),\r\n    transition('void => *', [\r\n      style({opacity: 0}),\r\n      animate('400ms 100ms cubic-bezier(0.55, 0, 0.55, 0.2)')\r\n    ])\r\n  ])\r\n};\r\n\r\n/**\r\n * @deprecated\r\n * @breaking-change 8.0.0\r\n * @docs-private\r\n */\r\nexport const fadeInItems = matMenuAnimations.fadeInItems;\r\n\r\n/**\r\n * @deprecated\r\n * @breaking-change 8.0.0\r\n * @docs-private\r\n */\r\nexport const transformMenu = matMenuAnimations.transformMenu;\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport {\r\n  Directive,\r\n  TemplateRef,\r\n  ComponentFactoryResolver,\r\n  ApplicationRef,\r\n  Injector,\r\n  ViewContainerRef,\r\n  Inject,\r\n  OnDestroy,\r\n} from '@angular/core';\r\nimport {TemplatePortal, DomPortalOutlet} from '@angular/cdk/portal';\r\nimport {DOCUMENT} from '@angular/common';\r\nimport {Subject} from 'rxjs';\r\n\r\n/**\r\n * Menu content that will be rendered lazily once the menu is opened.\r\n */\r\n@Directive({\r\n  selector: 'ng-template[matMenuContent]'\r\n})\r\nexport class MatMenuContent implements OnDestroy {\r\n  private _portal: TemplatePortal<any>;\r\n  private _outlet: DomPortalOutlet;\r\n\r\n  /** Emits when the menu content has been attached. */\r\n  _attached = new Subject<void>();\r\n\r\n  constructor(\r\n    private _template: TemplateRef<any>,\r\n    private _componentFactoryResolver: ComponentFactoryResolver,\r\n    private _appRef: ApplicationRef,\r\n    private _injector: Injector,\r\n    private _viewContainerRef: ViewContainerRef,\r\n    @Inject(DOCUMENT) private _document: any) {}\r\n\r\n  /**\r\n   * Attaches the content with a particular context.\r\n   * @docs-private\r\n   */\r\n  attach(context: any = {}) {\r\n    if (!this._portal) {\r\n      this._portal = new TemplatePortal(this._template, this._viewContainerRef);\r\n    }\r\n\r\n    this.detach();\r\n\r\n    if (!this._outlet) {\r\n      this._outlet = new DomPortalOutlet(this._document.createElement('div'),\r\n          this._componentFactoryResolver, this._appRef, this._injector);\r\n    }\r\n\r\n    const element: HTMLElement = this._template.elementRef.nativeElement;\r\n\r\n    // Because we support opening the same menu from different triggers (which in turn have their\r\n    // own `OverlayRef` panel), we have to re-insert the host element every time, otherwise we\r\n    // risk it staying attached to a pane that's no longer in the DOM.\r\n    element.parentNode!.insertBefore(this._outlet.outletElement, element);\r\n    this._portal.attach(this._outlet, context);\r\n    this._attached.next();\r\n  }\r\n\r\n  /**\r\n   * Detaches the content.\r\n   * @docs-private\r\n   */\r\n  detach() {\r\n    if (this._portal.isAttached) {\r\n      this._portal.detach();\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if (this._outlet) {\r\n      this._outlet.dispose();\r\n    }\r\n  }\r\n}\r\n"],"names":["observableOf"],"mappings":"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"}