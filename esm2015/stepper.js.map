{"version":3,"file":"stepper.js","sources":["../../../src/lib/stepper/stepper-module.ts","../../../src/lib/stepper/stepper-button.ts","../../../src/lib/stepper/stepper.ts","../../../src/lib/stepper/stepper-icon.ts","../../../src/lib/stepper/stepper-animations.ts","../../../src/lib/stepper/step-header.ts","../../../src/lib/stepper/stepper-intl.ts","../../../src/lib/stepper/step-label.ts"],"sourcesContent":["/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport {PortalModule} from '@angular/cdk/portal';\r\nimport {CdkStepperModule} from '@angular/cdk/stepper';\r\nimport {CommonModule} from '@angular/common';\r\nimport {NgModule} from '@angular/core';\r\nimport {MatButtonModule} from '@angular/material/button';\r\nimport {ErrorStateMatcher, MatCommonModule, MatRippleModule} from '@angular/material/core';\r\nimport {MatIconModule} from '@angular/material/icon';\r\nimport {MatStepHeader} from './step-header';\r\nimport {MatStepLabel} from './step-label';\r\nimport {MatHorizontalStepper, MatStep, MatStepper, MatVerticalStepper} from './stepper';\r\nimport {MatStepperNext, MatStepperPrevious} from './stepper-button';\r\nimport {MatStepperIcon} from './stepper-icon';\r\nimport {MAT_STEPPER_INTL_PROVIDER} from './stepper-intl';\r\n\r\n\r\n@NgModule({\r\n  imports: [\r\n    MatCommonModule,\r\n    CommonModule,\r\n    PortalModule,\r\n    MatButtonModule,\r\n    CdkStepperModule,\r\n    MatIconModule,\r\n    MatRippleModule,\r\n  ],\r\n  exports: [\r\n    MatCommonModule,\r\n    MatHorizontalStepper,\r\n    MatVerticalStepper,\r\n    MatStep,\r\n    MatStepLabel,\r\n    MatStepper,\r\n    MatStepperNext,\r\n    MatStepperPrevious,\r\n    MatStepHeader,\r\n    MatStepperIcon,\r\n  ],\r\n  declarations: [\r\n    MatHorizontalStepper,\r\n    MatVerticalStepper,\r\n    MatStep,\r\n    MatStepLabel,\r\n    MatStepper,\r\n    MatStepperNext,\r\n    MatStepperPrevious,\r\n    MatStepHeader,\r\n    MatStepperIcon,\r\n  ],\r\n  providers: [MAT_STEPPER_INTL_PROVIDER, ErrorStateMatcher],\r\n})\r\nexport class MatStepperModule {}\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport {Directive} from '@angular/core';\r\nimport {CdkStepper, CdkStepperNext, CdkStepperPrevious} from '@angular/cdk/stepper';\r\nimport {MatStepper} from './stepper';\r\n\r\n/** Button that moves to the next step in a stepper workflow. */\r\n@Directive({\r\n  selector: 'button[matStepperNext]',\r\n  host: {\r\n    '(click)': '_stepper.next()',\r\n    '[type]': 'type',\r\n  },\r\n  inputs: ['type'],\r\n  providers: [{provide: CdkStepper, useExisting: MatStepper}]\r\n})\r\nexport class MatStepperNext extends CdkStepperNext {}\r\n\r\n/** Button that moves to the previous step in a stepper workflow. */\r\n@Directive({\r\n  selector: 'button[matStepperPrevious]',\r\n  host: {\r\n    '(click)': '_stepper.previous()',\r\n    '[type]': 'type',\r\n  },\r\n  inputs: ['type'],\r\n  providers: [{provide: CdkStepper, useExisting: MatStepper}]\r\n})\r\nexport class MatStepperPrevious extends CdkStepperPrevious {}\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport {Directionality} from '@angular/cdk/bidi';\r\nimport {\r\n  CdkStep,\r\n  CdkStepper,\r\n  StepContentPositionState,\r\n  STEPPER_GLOBAL_OPTIONS,\r\n  StepperOptions\r\n} from '@angular/cdk/stepper';\r\nimport {AnimationEvent} from '@angular/animations';\r\nimport {\r\n  AfterContentInit,\r\n  ChangeDetectionStrategy,\r\n  ChangeDetectorRef,\r\n  Component,\r\n  ContentChild,\r\n  ContentChildren,\r\n  Directive,\r\n  ElementRef,\r\n  EventEmitter,\r\n  forwardRef,\r\n  Inject,\r\n  Input,\r\n  Optional,\r\n  Output,\r\n  QueryList,\r\n  SkipSelf,\r\n  TemplateRef,\r\n  ViewChildren,\r\n  ViewEncapsulation,\r\n} from '@angular/core';\r\nimport {FormControl, FormGroupDirective, NgForm} from '@angular/forms';\r\nimport {DOCUMENT} from '@angular/common';\r\nimport {ErrorStateMatcher} from '@angular/material/core';\r\nimport {Subject} from 'rxjs';\r\nimport {takeUntil, distinctUntilChanged} from 'rxjs/operators';\r\n\r\nimport {MatStepHeader} from './step-header';\r\nimport {MatStepLabel} from './step-label';\r\nimport {matStepperAnimations} from './stepper-animations';\r\nimport {MatStepperIcon, MatStepperIconContext} from './stepper-icon';\r\n\r\n@Component({\r\n  moduleId: module.id,\r\n  selector: 'mat-step',\r\n  templateUrl: 'step.html',\r\n  providers: [{provide: ErrorStateMatcher, useExisting: MatStep}],\r\n  encapsulation: ViewEncapsulation.None,\r\n  exportAs: 'matStep',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class MatStep extends CdkStep implements ErrorStateMatcher {\r\n  /** Content for step label given by `<ng-template matStepLabel>`. */\r\n  @ContentChild(MatStepLabel) stepLabel: MatStepLabel;\r\n\r\n  /** @breaking-change 8.0.0 remove the `?` after `stepperOptions` */\r\n  constructor(@Inject(forwardRef(() => MatStepper)) stepper: MatStepper,\r\n              @SkipSelf() private _errorStateMatcher: ErrorStateMatcher,\r\n              @Optional() @Inject(STEPPER_GLOBAL_OPTIONS) stepperOptions?: StepperOptions) {\r\n    super(stepper, stepperOptions);\r\n  }\r\n\r\n  /** Custom error state matcher that additionally checks for validity of interacted form. */\r\n  isErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\r\n    const originalErrorState = this._errorStateMatcher.isErrorState(control, form);\r\n\r\n    // Custom error state checks for the validity of form that is not submitted or touched\r\n    // since user can trigger a form change by calling for another step without directly\r\n    // interacting with the current form.\r\n    const customErrorState = !!(control && control.invalid && this.interacted);\r\n\r\n    return originalErrorState || customErrorState;\r\n  }\r\n}\r\n\r\n\r\n@Directive({\r\n  selector: '[matStepper]'\r\n})\r\nexport class MatStepper extends CdkStepper implements AfterContentInit {\r\n  /** The list of step headers of the steps in the stepper. */\r\n  @ViewChildren(MatStepHeader) _stepHeader: QueryList<MatStepHeader>;\r\n\r\n  /** Steps that the stepper holds. */\r\n  @ContentChildren(MatStep) _steps: QueryList<MatStep>;\r\n\r\n  /** Custom icon overrides passed in by the consumer. */\r\n  @ContentChildren(MatStepperIcon) _icons: QueryList<MatStepperIcon>;\r\n\r\n  /** Event emitted when the current step is done transitioning in. */\r\n  @Output() readonly animationDone: EventEmitter<void> = new EventEmitter<void>();\r\n\r\n  /** Consumer-specified template-refs to be used to override the header icons. */\r\n  _iconOverrides: {[key: string]: TemplateRef<MatStepperIconContext>} = {};\r\n\r\n  /** Stream of animation `done` events when the body expands/collapses. */\r\n  _animationDone = new Subject<AnimationEvent>();\r\n\r\n  ngAfterContentInit() {\r\n    this._icons.forEach(({name, templateRef}) => this._iconOverrides[name] = templateRef);\r\n\r\n    // Mark the component for change detection whenever the content children query changes\r\n    this._steps.changes.pipe(takeUntil(this._destroyed)).subscribe(() => this._stateChanged());\r\n\r\n    this._animationDone.pipe(\r\n      // This needs a `distinctUntilChanged` in order to avoid emitting the same event twice due\r\n      // to a bug in animations where the `.done` callback gets invoked twice on some browsers.\r\n      // See https://github.com/angular/angular/issues/24084\r\n      distinctUntilChanged((x, y) => x.fromState === y.fromState && x.toState === y.toState),\r\n      takeUntil(this._destroyed)\r\n    ).subscribe(event => {\r\n      if ((event.toState as StepContentPositionState) === 'current') {\r\n        this.animationDone.emit();\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\n@Component({\r\n  moduleId: module.id,\r\n  selector: 'mat-horizontal-stepper',\r\n  exportAs: 'matHorizontalStepper',\r\n  templateUrl: 'stepper-horizontal.html',\r\n  styleUrls: ['stepper.css'],\r\n  inputs: ['selectedIndex'],\r\n  host: {\r\n    'class': 'mat-stepper-horizontal',\r\n    '[class.mat-stepper-label-position-end]': 'labelPosition == \"end\"',\r\n    '[class.mat-stepper-label-position-bottom]': 'labelPosition == \"bottom\"',\r\n    'aria-orientation': 'horizontal',\r\n    'role': 'tablist',\r\n  },\r\n  animations: [matStepperAnimations.horizontalStepTransition],\r\n  providers: [{provide: MatStepper, useExisting: MatHorizontalStepper}],\r\n  encapsulation: ViewEncapsulation.None,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class MatHorizontalStepper extends MatStepper {\r\n  /** Whether the label should display in bottom or end position. */\r\n  @Input()\r\n  labelPosition: 'bottom' | 'end' = 'end';\r\n}\r\n\r\n@Component({\r\n  moduleId: module.id,\r\n  selector: 'mat-vertical-stepper',\r\n  exportAs: 'matVerticalStepper',\r\n  templateUrl: 'stepper-vertical.html',\r\n  styleUrls: ['stepper.css'],\r\n  inputs: ['selectedIndex'],\r\n  host: {\r\n    'class': 'mat-stepper-vertical',\r\n    'aria-orientation': 'vertical',\r\n    'role': 'tablist',\r\n  },\r\n  animations: [matStepperAnimations.verticalStepTransition],\r\n  providers: [{provide: MatStepper, useExisting: MatVerticalStepper}],\r\n  encapsulation: ViewEncapsulation.None,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class MatVerticalStepper extends MatStepper {\r\n  constructor(\r\n    @Optional() dir: Directionality,\r\n    changeDetectorRef: ChangeDetectorRef,\r\n    // @breaking-change 8.0.0 `elementRef` and `_document` parameters to become required.\r\n    elementRef?: ElementRef<HTMLElement>,\r\n    @Inject(DOCUMENT) _document?: any) {\r\n    super(dir, changeDetectorRef, elementRef, _document);\r\n    this._orientation = 'vertical';\r\n  }\r\n}\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport {Directive, Input, TemplateRef} from '@angular/core';\r\nimport {StepState} from '@angular/cdk/stepper';\r\n\r\n/** Template context available to an attached `matStepperIcon`. */\r\nexport interface MatStepperIconContext {\r\n  /** Index of the step. */\r\n  index: number;\r\n  /** Whether the step is currently active. */\r\n  active: boolean;\r\n  /** Whether the step is optional. */\r\n  optional: boolean;\r\n}\r\n\r\n/**\r\n * Template to be used to override the icons inside the step header.\r\n */\r\n@Directive({\r\n  selector: 'ng-template[matStepperIcon]',\r\n})\r\nexport class MatStepperIcon {\r\n  /** Name of the icon to be overridden. */\r\n  @Input('matStepperIcon') name: StepState;\r\n\r\n  constructor(public templateRef: TemplateRef<MatStepperIconContext>) {}\r\n}\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\nimport {\r\n  animate,\r\n  state,\r\n  style,\r\n  transition,\r\n  trigger,\r\n  AnimationTriggerMetadata,\r\n} from '@angular/animations';\r\n\r\n/**\r\n * Animations used by the Material steppers.\r\n * @docs-private\r\n */\r\nexport const matStepperAnimations: {\r\n  readonly horizontalStepTransition: AnimationTriggerMetadata;\r\n  readonly verticalStepTransition: AnimationTriggerMetadata;\r\n} = {\r\n  /** Animation that transitions the step along the X axis in a horizontal stepper. */\r\n  horizontalStepTransition: trigger('stepTransition', [\r\n    state('previous', style({transform: 'translate3d(-100%, 0, 0)', visibility: 'hidden'})),\r\n    state('current', style({transform: 'none', visibility: 'visible'})),\r\n    state('next', style({transform: 'translate3d(100%, 0, 0)', visibility: 'hidden'})),\r\n    transition('* => *', animate('500ms cubic-bezier(0.35, 0, 0.25, 1)'))\r\n  ]),\r\n\r\n  /** Animation that transitions the step along the Y axis in a vertical stepper. */\r\n  verticalStepTransition: trigger('stepTransition', [\r\n    state('previous', style({height: '0px', visibility: 'hidden'})),\r\n    state('next', style({height: '0px', visibility: 'hidden'})),\r\n    state('current', style({height: '*', visibility: 'visible'})),\r\n    transition('* <=> current', animate('225ms cubic-bezier(0.4, 0.0, 0.2, 1)'))\r\n  ])\r\n};\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport {FocusMonitor} from '@angular/cdk/a11y';\r\nimport {\r\n  ChangeDetectionStrategy,\r\n  ChangeDetectorRef,\r\n  Component,\r\n  ElementRef,\r\n  Input,\r\n  OnDestroy,\r\n  ViewEncapsulation,\r\n  TemplateRef,\r\n} from '@angular/core';\r\nimport {Subscription} from 'rxjs';\r\nimport {MatStepLabel} from './step-label';\r\nimport {MatStepperIntl} from './stepper-intl';\r\nimport {MatStepperIconContext} from './stepper-icon';\r\nimport {CdkStepHeader, StepState} from '@angular/cdk/stepper';\r\n\r\n\r\n@Component({\r\n  moduleId: module.id,\r\n  selector: 'mat-step-header',\r\n  templateUrl: 'step-header.html',\r\n  styleUrls: ['step-header.css'],\r\n  host: {\r\n    'class': 'mat-step-header',\r\n    'role': 'tab',\r\n  },\r\n  encapsulation: ViewEncapsulation.None,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class MatStepHeader extends CdkStepHeader implements OnDestroy {\r\n  private _intlSubscription: Subscription;\r\n\r\n  /** State of the given step. */\r\n  @Input() state: StepState;\r\n\r\n  /** Label of the given step. */\r\n  @Input() label: MatStepLabel | string;\r\n\r\n  /** Error message to display when there's an error. */\r\n  @Input() errorMessage: string;\r\n\r\n  /** Overrides for the header icons, passed in via the stepper. */\r\n  @Input() iconOverrides: {[key: string]: TemplateRef<MatStepperIconContext>};\r\n\r\n  /** Index of the given step. */\r\n  @Input() index: number;\r\n\r\n  /** Whether the given step is selected. */\r\n  @Input() selected: boolean;\r\n\r\n  /** Whether the given step label is active. */\r\n  @Input() active: boolean;\r\n\r\n  /** Whether the given step is optional. */\r\n  @Input() optional: boolean;\r\n\r\n  constructor(\r\n    public _intl: MatStepperIntl,\r\n    private _focusMonitor: FocusMonitor,\r\n    _elementRef: ElementRef<HTMLElement>,\r\n    changeDetectorRef: ChangeDetectorRef) {\r\n    super(_elementRef);\r\n    _focusMonitor.monitor(_elementRef, true);\r\n    this._intlSubscription = _intl.changes.subscribe(() => changeDetectorRef.markForCheck());\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this._intlSubscription.unsubscribe();\r\n    this._focusMonitor.stopMonitoring(this._elementRef);\r\n  }\r\n\r\n  /** Returns string label of given step if it is a text label. */\r\n  _stringLabel(): string | null {\r\n    return this.label instanceof MatStepLabel ? null : this.label;\r\n  }\r\n\r\n  /** Returns MatStepLabel if the label of given step is a template label. */\r\n  _templateLabel(): MatStepLabel | null {\r\n    return this.label instanceof MatStepLabel ? this.label : null;\r\n  }\r\n\r\n  /** Returns the host HTML element. */\r\n  _getHostElement() {\r\n    return this._elementRef.nativeElement;\r\n  }\r\n\r\n  /** Template context variables that are exposed to the `matStepperIcon` instances. */\r\n  _getIconContext(): MatStepperIconContext {\r\n    return {\r\n      index: this.index,\r\n      active: this.active,\r\n      optional: this.optional\r\n    };\r\n  }\r\n\r\n  _getDefaultTextForState(state: StepState): string {\r\n    if (state == 'number') {\r\n      return `${this.index + 1}`;\r\n    }\r\n    if (state == 'edit') {\r\n      return 'create';\r\n    }\r\n    if (state == 'error') {\r\n      return 'warning';\r\n    }\r\n    return state;\r\n  }\r\n}\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport {Injectable, Optional, SkipSelf} from '@angular/core';\r\nimport {Subject} from 'rxjs';\r\n\r\n\r\n/** Stepper data that is required for internationalization. */\r\n@Injectable({providedIn: 'root'})\r\nexport class MatStepperIntl {\r\n  /**\r\n   * Stream that emits whenever the labels here are changed. Use this to notify\r\n   * components if the labels have changed after initialization.\r\n   */\r\n  readonly changes: Subject<void> = new Subject<void>();\r\n\r\n  /** Label that is rendered below optional steps. */\r\n  optionalLabel: string = 'Optional';\r\n}\r\n\r\n\r\n/** @docs-private */\r\nexport function MAT_STEPPER_INTL_PROVIDER_FACTORY(parentIntl: MatStepperIntl) {\r\n  return parentIntl || new MatStepperIntl();\r\n}\r\n\r\n/** @docs-private */\r\nexport const MAT_STEPPER_INTL_PROVIDER = {\r\n  provide: MatStepperIntl,\r\n  deps: [[new Optional(), new SkipSelf(), MatStepperIntl]],\r\n  useFactory: MAT_STEPPER_INTL_PROVIDER_FACTORY\r\n};\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport {Directive} from '@angular/core';\r\nimport {CdkStepLabel} from '@angular/cdk/stepper';\r\n\r\n@Directive({\r\n  selector: '[matStepLabel]',\r\n})\r\nexport class MatStepLabel extends CdkStepLabel {}\r\n"],"names":["state"],"mappings":"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"}